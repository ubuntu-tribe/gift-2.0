{
	"id": "6f8c40e525de3f0bce8af5363e11d620",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"GIFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\";\r\n\r\n\r\ncontract GIFT is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable {\r\n    using SafeMathUpgradeable for uint256;\r\n\r\n    address public supplyController;\r\n    address public beneficiary;\r\n    address public reserveConsumer;\r\n\r\n    mapping(address => bool) public isExcludedFromOutboundFees;\r\n    mapping(address => bool) public isExcludedFromInboundFees;\r\n    mapping(address => bool) public isLiquidityPool;\r\n\r\n    uint256[5] public taxTiers;\r\n    uint256[5] public taxPercentages;\r\n\r\n    uint256 public constant MAX_TAX_PERCENTAGE = 20_000; // 20%\r\n    uint256 public lastReserveCheck;\r\n    uint256 public reserveCheckPeriod;\r\n\r\n\r\n    event TaxUpdated(uint256[5] tiers, uint256[5] percentages);\r\n    event SupplyControllerSet(address indexed newSupplyController);\r\n    event BeneficiarySet(address indexed newBeneficiary);\r\n    event FeeExclusionSet(address indexed account, bool isExcludedOutbound, bool isExcludedInbound);\r\n    event LiquidityPoolSet(address indexed account, bool isPool);\r\n    event ReserveConsumerSet(address indexed newReserveConsumer);\r\n    event ReserveCheckPeriodSet(uint256 newPeriod);\r\n\r\n\r\n\r\n\r\n    modifier onlySupplyController() {\r\n        require(msg.sender == supplyController, \"GIFT: caller is not the supplyController\");\r\n        _;\r\n    }\r\n\r\n    modifier checkReserves() {\r\n        if (block.timestamp >= lastReserveCheck.add(reserveCheckPeriod)) {\r\n            _checkReserves();\r\n        }\r\n        _;\r\n    }\r\n\r\n\r\n\r\n    function initialize(\r\n        string memory name,\r\n        string memory symbol,\r\n        address _supplyController,\r\n        address _beneficiary,\r\n        address _reserveConsumer\r\n    ) external initializer {\r\n        __ERC20_init(name, symbol);\r\n        __Ownable_init(msg.sender);\r\n        __Pausable_init();\r\n        \r\n        supplyController = _supplyController;\r\n        beneficiary = _beneficiary;\r\n        reserveConsumer = _reserveConsumer;\r\n\r\n\r\n        \r\n        // Initialize tax tiers and percentages\r\n        taxTiers = [1000 ether, 5000 ether, 10000 ether, 50000 ether, type(uint256).max];\r\n        taxPercentages = [1000, 800, 600, 400, 200]; // 1%, 0.8%, 0.6%, 0.4%, 0.2%\r\n        \r\n        reserveCheckPeriod = 1 days;\r\n    }\r\n\r\n\r\n\r\n\r\n    function setTaxParameters(uint256[5] memory _tiers, uint256[5] memory _percentages) external onlyOwner {\r\n        require(_tiers[4] == type(uint256).max, \"GIFT: Last tier must be max\");\r\n        for (uint i = 0; i < 5; i++) {\r\n            require(_percentages[i] <= MAX_TAX_PERCENTAGE, \"GIFT: Tax percentage too high\");\r\n            if (i > 0) require(_tiers[i] > _tiers[i-1], \"GIFT: Tiers must be in ascending order\");\r\n        }\r\n        taxTiers = _tiers;\r\n        taxPercentages = _percentages;\r\n        emit TaxUpdated(_tiers, _percentages);\r\n    }\r\n\r\n\r\n\r\n    function setSupplyController(address _newSupplyController) external onlyOwner {\r\n        supplyController = _newSupplyController;\r\n        emit SupplyControllerSet(_newSupplyController);\r\n    }\r\n\r\n    function setBeneficiary(address _newBeneficiary) external onlyOwner {\r\n        beneficiary = _newBeneficiary;\r\n        emit BeneficiarySet(_newBeneficiary);\r\n    }\r\n\r\n    function setFeeExclusion(address _address, bool _isExcludedOutbound, bool _isExcludedInbound) external onlyOwner {\r\n        isExcludedFromOutboundFees[_address] = _isExcludedOutbound;\r\n        isExcludedFromInboundFees[_address] = _isExcludedInbound;\r\n        emit FeeExclusionSet(_address, _isExcludedOutbound, _isExcludedInbound);\r\n    }\r\n\r\n\r\n    function setLiquidityPool(address _address, bool _isPool) external onlyOwner {\r\n        isLiquidityPool[_address] = _isPool;\r\n        emit LiquidityPoolSet(_address, _isPool);\r\n    }\r\n\r\n    function setReserveConsumer(address _newReserveConsumer) external onlyOwner {\r\n        reserveConsumer = _newReserveConsumer;\r\n        emit ReserveConsumerSet(_newReserveConsumer);\r\n    }\r\n\r\n    function setReserveCheckPeriod(uint256 _newPeriod) external onlyOwner {\r\n        reserveCheckPeriod = _newPeriod;\r\n        emit ReserveCheckPeriodSet(_newPeriod);\r\n    }\r\n\r\n\r\n    function mint(address _to, uint256 _amount) external onlySupplyController checkReserves {\r\n        _mint(_to, _amount);\r\n    }\r\n\r\n    function burn(uint256 _amount) external {\r\n        _burn(msg.sender, _amount);\r\n    }\r\n\r\n    function burnFrom(address _account, uint256 _amount) external {\r\n        uint256 currentAllowance = allowance(_account, msg.sender);\r\n        require(currentAllowance >= _amount, \"GIFT: burn amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(_account, msg.sender, currentAllowance - _amount);\r\n        }\r\n        _burn(_account, _amount);\r\n    }\r\n\r\n\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount) public virtual override whenNotPaused checkReserves returns (bool) {\r\n        return _transferGIFT(_msgSender(), recipient, amount);\r\n    }\r\n\r\n\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override whenNotPaused checkReserves returns (bool) {\r\n        uint256 currentAllowance = allowance(sender, _msgSender());\r\n        require(currentAllowance >= amount, \"GIFT: transfer amount exceeds allowance\");\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n        return _transferGIFT(sender, recipient, amount);\r\n    }\r\n\r\n    function _transferGIFT(address sender, address recipient, uint256 amount) internal virtual returns (bool) {\r\n        if (isExcludedFromOutboundFees[sender] || isExcludedFromInboundFees[recipient] || isLiquidityPool[sender]) {\r\n            _transfer(sender, recipient, amount);\r\n        } else {\r\n            uint256 tax = _computeTax(amount);\r\n            _transfer(sender, beneficiary, tax);\r\n            _transfer(sender, recipient, amount.sub(tax));\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    function _computeTax(uint256 _amount) internal view returns (uint256) {\r\n        for (uint i = 0; i < 5; i++) {\r\n            if (_amount <= taxTiers[i]) {\r\n                return _amount.mul(taxPercentages[i]).div(100000);\r\n            }\r\n        }\r\n        revert(\"GIFT: Invalid amount\");\r\n    }\r\n\r\n    function _checkReserves() internal {\r\n        if (reserveConsumer != address(0)) {\r\n            (bool success, bytes memory data) = reserveConsumer.staticcall(abi.encodeWithSignature(\"getReserves()\"));\r\n            require(success, \"GIFT: Failed to check reserves\");\r\n            uint256 reserves = abi.decode(data, (uint256));\r\n            require(totalSupply() <= reserves, \"GIFT: Insufficient reserves\");\r\n        }\r\n        lastReserveCheck = block.timestamp;\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {\r\n        require(!paused(), \"GIFT: token transfer while paused\");\r\n        // Silence unused parameter warnings\r\n        from;\r\n        to;\r\n        amount;\r\n\r\n    }\r\n\r\n    function transferAdminControl(address newAdmin) external onlyOwner {\r\n        require(newAdmin != address(0), \"GIFT: New admin cannot be the zero address\");\r\n        transferOwnership(newAdmin);\r\n    }\r\n\r\n    function renounceAdminControl() external onlyOwner {\r\n        renounceOwnership();\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMathUpgradeable {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 470,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 575,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"SafeMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":482:6703  library SafeMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":482:6703  library SafeMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a8d314d2e6b0e28e80a4f1e641fc512818aef07ee93c53e60d97a737729671564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203a8d314d2e6b0e28e80a4f1e641fc512818aef07ee93c53e60d97a737729671564736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE DUP14 BALANCE 0x4D 0x2E PUSH12 0xE28E80A4F1E641FC512818A 0xEF SMOD 0xEE SWAP4 0xC5 RETURNDATACOPY PUSH1 0xD9 PUSH27 0x737729671564736F6C634300081400330000000000000000000000 ",
							"sourceMap": "482:6221:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203a8d314d2e6b0e28e80a4f1e641fc512818aef07ee93c53e60d97a737729671564736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE DUP14 BALANCE 0x4D 0x2E PUSH12 0xE28E80A4F1E641FC512818A 0xEF SMOD 0xEE SWAP4 0xC5 RETURNDATACOPY PUSH1 0xD9 PUSH27 0x737729671564736F6C634300081400330000000000000000000000 ",
							"sourceMap": "482:6221:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6703,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a8d314d2e6b0e28e80a4f1e641fc512818aef07ee93c53e60d97a737729671564736f6c63430008140033",
									".code": [
										{
											"begin": 482,
											"end": 6703,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6703,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6703,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6703,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6703,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6703,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6703,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6703,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6703,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"GIFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":\"SafeMathUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xb1561a6950b1aaa504c8f81b7d46bccfa77ccd10de3eb865cf34b1acd5ad505e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a56cb91629dacd161be24908fbf94315f3f45dd6fee8dad82b27af853cbc4ee\",\"dweb:/ipfs/QmNfEzdf4NTpxyhzWKAmeDwwSpJ6ZjNizK3GXw3TEuTTgn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"GIFT.sol": {
				"GIFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newBeneficiary",
									"type": "address"
								}
							],
							"name": "BeneficiarySet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isExcludedOutbound",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isExcludedInbound",
									"type": "bool"
								}
							],
							"name": "FeeExclusionSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPool",
									"type": "bool"
								}
							],
							"name": "LiquidityPoolSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPeriod",
									"type": "uint256"
								}
							],
							"name": "ReserveCheckPeriodSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newReserveConsumer",
									"type": "address"
								}
							],
							"name": "ReserveConsumerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newSupplyController",
									"type": "address"
								}
							],
							"name": "SupplyControllerSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256[5]",
									"name": "tiers",
									"type": "uint256[5]"
								},
								{
									"indexed": false,
									"internalType": "uint256[5]",
									"name": "percentages",
									"type": "uint256[5]"
								}
							],
							"name": "TaxUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_TAX_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_supplyController",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_beneficiary",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_reserveConsumer",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromInboundFees",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromOutboundFees",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isLiquidityPool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastReserveCheck",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceAdminControl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveCheckPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveConsumer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newBeneficiary",
									"type": "address"
								}
							],
							"name": "setBeneficiary",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isExcludedOutbound",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "_isExcludedInbound",
									"type": "bool"
								}
							],
							"name": "setFeeExclusion",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isPool",
									"type": "bool"
								}
							],
							"name": "setLiquidityPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPeriod",
									"type": "uint256"
								}
							],
							"name": "setReserveCheckPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newReserveConsumer",
									"type": "address"
								}
							],
							"name": "setReserveConsumer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newSupplyController",
									"type": "address"
								}
							],
							"name": "setSupplyController",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[5]",
									"name": "_tiers",
									"type": "uint256[5]"
								},
								{
									"internalType": "uint256[5]",
									"name": "_percentages",
									"type": "uint256[5]"
								}
							],
							"name": "setTaxParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "supplyController",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "taxPercentages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "taxTiers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "transferAdminControl",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"GIFT.sol\":384:7731  contract GIFT is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"GIFT.sol\":384:7731  contract GIFT is ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79cc6790\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xc29c669a\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xe1a8f3f4\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xe7ba1012\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xe85455d7\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_41\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0xc29c669a\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xc658a5e3\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xcc7134ba\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd048d988\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xdb0ed6a0\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa02fba1e\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa906c70e\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x79cc6790\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x79e631f4\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x851f39d4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x8850b9c2\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x38af3eed\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x53e4e3cb\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x53e4e3cb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x70d27fa0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_47:\n      dup1\n      0x38af3eed\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x52875bc3\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_46:\n      dup1\n      0x1a5e62fd\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x1a5e62fd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1c31f710\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x24e8933d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_48:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x110c621d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":840:872  uint256[5] public taxPercentages */\n    tag_5:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":7430:7631  function transferAdminControl(address newAdmin) external onlyOwner {... */\n    tag_7:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"GIFT.sol\":3372:3535  function setBeneficiary(address _newBeneficiary) external onlyOwner {... */\n    tag_8:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      stop\n        /* \"GIFT.sol\":5406:5874  function transferFrom(address sender, address recipient, uint256 amount) public virtual override whenNotPaused checkReserves returns (bool) {... */\n    tag_9:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":946:977  uint256 public lastReserveCheck */\n    tag_10:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":550:576  address public beneficiary */\n    tag_12:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":5129:5196  function unpause() external onlyOwner {... */\n    tag_13:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      stop\n        /* \"GIFT.sol\":4456:4582  function mint(address _to, uint256 _amount) external onlySupplyController checkReserves {... */\n    tag_14:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n    tag_93:\n      stop\n        /* \"GIFT.sol\":4590:4675  function burn(uint256 _amount) external {... */\n    tag_15:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"GIFT.sol\":3171:3364  function setSupplyController(address _newSupplyController) external onlyOwner {... */\n    tag_16:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"GIFT.sol\":2606:3159  function setTaxParameters(uint256[5] memory _tiers, uint256[5] memory _percentages) external onlyOwner {... */\n    tag_17:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_18:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":881:932  uint256 public constant MAX_TAX_PERCENTAGE = 20_000 */\n    tag_20:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      stop\n        /* \"GIFT.sol\":4683:5048  function burnFrom(address _account, uint256 _amount) external {... */\n    tag_22:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"GIFT.sol\":4082:4269  function setReserveConsumer(address _newReserveConsumer) external onlyOwner {... */\n    tag_23:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      stop\n        /* \"GIFT.sol\":5058:5121  function pause() external onlyOwner {... */\n    tag_24:\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      stop\n        /* \"GIFT.sol\":687:744  mapping(address => bool) public isExcludedFromInboundFees */\n    tag_25:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":583:613  address public reserveConsumer */\n    tag_26:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_27:\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_28:\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_138\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":4277:4446  function setReserveCheckPeriod(uint256 _newPeriod) external onlyOwner {... */\n    tag_29:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      stop\n        /* \"GIFT.sol\":5204:5396  function transfer(address recipient, uint256 amount) public virtual override whenNotPaused checkReserves returns (bool) {... */\n    tag_30:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":807:833  uint256[5] public taxTiers */\n    tag_31:\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":3892:4074  function setLiquidityPool(address _address, bool _isPool) external onlyOwner {... */\n    tag_32:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n    tag_150:\n      stop\n        /* \"GIFT.sol\":7639:7728  function renounceAdminControl() external onlyOwner {... */\n    tag_33:\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n      stop\n        /* \"GIFT.sol\":622:680  mapping(address => bool) public isExcludedFromOutboundFees */\n    tag_34:\n      tag_156\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":984:1017  uint256 public reserveCheckPeriod */\n    tag_35:\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":1847:2592  function initialize(... */\n    tag_36:\n      tag_163\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      tag_166\n      jump\t// in\n    tag_163:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_37:\n      tag_167\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      tag_170\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":3543:3882  function setFeeExclusion(address _address, bool _isExcludedOutbound, bool _isExcludedInbound) external onlyOwner {... */\n    tag_38:\n      tag_172\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      tag_175\n      jump\t// in\n    tag_172:\n      stop\n        /* \"GIFT.sol\":512:543  address public supplyController */\n    tag_39:\n      tag_176\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"GIFT.sol\":751:798  mapping(address => bool) public isLiquidityPool */\n    tag_40:\n      tag_179\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_180:\n      tag_181\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      tag_182\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_41:\n      tag_183\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_184:\n      tag_185\n      jump\t// in\n    tag_183:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3056:3069  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3081:3103  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3122  _getERC20Storage */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3106:3124  _getERC20Storage() */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3081:3124  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3141:3142  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3141:3148  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3134:3148  return $._name */\n      dup1\n      sload\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_191\n      swap1\n      tag_190\n      jump\t// in\n    tag_191:\n      dup1\n      iszero\n      tag_192\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_193\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_192)\n    tag_193:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_194:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_194\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3011:3155  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5578:5582  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5594:5607  address owner */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5620  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5610:5622  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5594:5622  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      tag_198\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5641:5646  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5648:5655  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5657:5662  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5640  _approve */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5632:5663  _approve(owner, spender, value) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5680:5684  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5673:5684  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5505:5691  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":840:872  uint256[5] public taxPercentages */\n    tag_62:\n      0x3d\n      dup2\n      0x05\n      dup2\n      lt\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4250  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4284  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      tag_203\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4303  _getERC20Storage */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4287:4305  _getERC20Storage() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4305  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4322:4323  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4322:4336  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4315:4336  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4343  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"GIFT.sol\":7430:7631  function transferAdminControl(address newAdmin) external onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"GIFT.sol\":7536:7537  0 */\n      0x00\n        /* \"GIFT.sol\":7516:7538  newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GIFT.sol\":7516:7524  newAdmin */\n      dup2\n        /* \"GIFT.sol\":7516:7538  newAdmin != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"GIFT.sol\":7508:7585  require(newAdmin != address(0), \"GIFT: New admin cannot be the zero address\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"GIFT.sol\":7596:7623  transferOwnership(newAdmin) */\n      tag_211\n        /* \"GIFT.sol\":7614:7622  newAdmin */\n      dup2\n        /* \"GIFT.sol\":7596:7613  transferOwnership */\n      tag_185\n        /* \"GIFT.sol\":7596:7623  transferOwnership(newAdmin) */\n      jump\t// in\n    tag_211:\n        /* \"GIFT.sol\":7430:7631  function transferAdminControl(address newAdmin) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":3372:3535  function setBeneficiary(address _newBeneficiary) external onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"GIFT.sol\":3465:3480  _newBeneficiary */\n      dup1\n        /* \"GIFT.sol\":3451:3462  beneficiary */\n      0x33\n      0x00\n        /* \"GIFT.sol\":3451:3480  beneficiary = _newBeneficiary */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":3511:3526  _newBeneficiary */\n      dup1\n        /* \"GIFT.sol\":3496:3527  BeneficiarySet(_newBeneficiary) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04d55a8be181fb8d75b76f2d48aa0b2ee40f47e53d6e61763eeeec46feea8a24\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GIFT.sol\":3372:3535  function setBeneficiary(address _newBeneficiary) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":5406:5874  function transferFrom(address sender, address recipient, uint256 amount) public virtual override whenNotPaused checkReserves returns (bool) {... */\n    tag_78:\n        /* \"GIFT.sol\":5540:5544  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_216:\n        /* \"GIFT.sol\":1731:1771  lastReserveCheck.add(reserveCheckPeriod) */\n      tag_219\n        /* \"GIFT.sol\":1752:1770  reserveCheckPeriod */\n      sload(0x43)\n        /* \"GIFT.sol\":1731:1747  lastReserveCheck */\n      sload(0x42)\n        /* \"GIFT.sol\":1731:1751  lastReserveCheck.add */\n      tag_220\n      swap1\n        /* \"GIFT.sol\":1731:1771  lastReserveCheck.add(reserveCheckPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"GIFT.sol\":1712:1727  block.timestamp */\n      timestamp\n        /* \"GIFT.sol\":1712:1771  block.timestamp >= lastReserveCheck.add(reserveCheckPeriod) */\n      lt\n        /* \"GIFT.sol\":1708:1816  if (block.timestamp >= lastReserveCheck.add(reserveCheckPeriod)) {... */\n      tag_221\n      jumpi\n        /* \"GIFT.sol\":1788:1804  _checkReserves() */\n      tag_222\n        /* \"GIFT.sol\":1788:1802  _checkReserves */\n      tag_223\n        /* \"GIFT.sol\":1788:1804  _checkReserves() */\n      jump\t// in\n    tag_222:\n        /* \"GIFT.sol\":1708:1816  if (block.timestamp >= lastReserveCheck.add(reserveCheckPeriod)) {... */\n    tag_221:\n        /* \"GIFT.sol\":5557:5581  uint256 currentAllowance */\n      0x00\n        /* \"GIFT.sol\":5584:5615  allowance(sender, _msgSender()) */\n      tag_225\n        /* \"GIFT.sol\":5594:5600  sender */\n      dup6\n        /* \"GIFT.sol\":5602:5614  _msgSender() */\n      tag_226\n        /* \"GIFT.sol\":5602:5612  _msgSender */\n      tag_197\n        /* \"GIFT.sol\":5602:5614  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"GIFT.sol\":5584:5593  allowance */\n      tag_170\n        /* \"GIFT.sol\":5584:5615  allowance(sender, _msgSender()) */\n      jump\t// in\n    tag_225:\n        /* \"GIFT.sol\":5557:5615  uint256 currentAllowance = allowance(sender, _msgSender()) */\n      swap1\n      pop\n        /* \"GIFT.sol\":5654:5660  amount */\n      dup3\n        /* \"GIFT.sol\":5634:5650  currentAllowance */\n      dup2\n        /* \"GIFT.sol\":5634:5660  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"GIFT.sol\":5626:5704  require(currentAllowance >= amount, \"GIFT: transfer amount exceeds allowance\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_227:\n        /* \"GIFT.sol\":5740:5797  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_230\n        /* \"GIFT.sol\":5749:5755  sender */\n      dup6\n        /* \"GIFT.sol\":5757:5769  _msgSender() */\n      tag_231\n        /* \"GIFT.sol\":5757:5767  _msgSender */\n      tag_197\n        /* \"GIFT.sol\":5757:5769  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"GIFT.sol\":5790:5796  amount */\n      dup6\n        /* \"GIFT.sol\":5771:5787  currentAllowance */\n      dup5\n        /* \"GIFT.sol\":5771:5796  currentAllowance - amount */\n      sub\n        /* \"GIFT.sol\":5740:5748  _approve */\n      tag_199\n        /* \"GIFT.sol\":5740:5797  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_230:\n        /* \"GIFT.sol\":5826:5866  _transferGIFT(sender, recipient, amount) */\n      tag_232\n        /* \"GIFT.sol\":5840:5846  sender */\n      dup6\n        /* \"GIFT.sol\":5848:5857  recipient */\n      dup6\n        /* \"GIFT.sol\":5859:5865  amount */\n      dup6\n        /* \"GIFT.sol\":5826:5839  _transferGIFT */\n      tag_233\n        /* \"GIFT.sol\":5826:5866  _transferGIFT(sender, recipient, amount) */\n      jump\t// in\n    tag_232:\n        /* \"GIFT.sol\":5819:5866  return _transferGIFT(sender, recipient, amount) */\n      swap2\n      pop\n      pop\n        /* \"GIFT.sol\":5406:5874  function transferFrom(address sender, address recipient, uint256 amount) public virtual override whenNotPaused checkReserves returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":946:977  uint256 public lastReserveCheck */\n    tag_81:\n      sload(0x42)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4098:4103  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4122:4124  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4115:4124  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4049:4131  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"GIFT.sol\":550:576  address public beneficiary */\n    tag_88:\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"GIFT.sol\":5129:5196  function unpause() external onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_236\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_236:\n        /* \"GIFT.sol\":5178:5188  _unpause() */\n      tag_238\n        /* \"GIFT.sol\":5178:5186  _unpause */\n      tag_239\n        /* \"GIFT.sol\":5178:5188  _unpause() */\n      jump\t// in\n    tag_238:\n        /* \"GIFT.sol\":5129:5196  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"GIFT.sol\":4456:4582  function mint(address _to, uint256 _amount) external onlySupplyController checkReserves {... */\n    tag_95:\n        /* \"GIFT.sol\":1583:1599  supplyController */\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GIFT.sol\":1569:1599  msg.sender == supplyController */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GIFT.sol\":1569:1579  msg.sender */\n      caller\n        /* \"GIFT.sol\":1569:1599  msg.sender == supplyController */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"GIFT.sol\":1561:1644  require(msg.sender == supplyController, \"GIFT: caller is not the supplyController\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_242\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"GIFT.sol\":1731:1771  lastReserveCheck.add(reserveCheckPeriod) */\n      tag_245\n        /* \"GIFT.sol\":1752:1770  reserveCheckPeriod */\n      sload(0x43)\n        /* \"GIFT.sol\":1731:1747  lastReserveCheck */\n      sload(0x42)\n        /* \"GIFT.sol\":1731:1751  lastReserveCheck.add */\n      tag_220\n      swap1\n        /* \"GIFT.sol\":1731:1771  lastReserveCheck.add(reserveCheckPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"GIFT.sol\":1712:1727  block.timestamp */\n      timestamp\n        /* \"GIFT.sol\":1712:1771  block.timestamp >= lastReserveCheck.add(reserveCheckPeriod) */\n      lt\n        /* \"GIFT.sol\":1708:1816  if (block.timestamp >= lastReserveCheck.add(reserveCheckPeriod)) {... */\n      tag_246\n      jumpi\n        /* \"GIFT.sol\":1788:1804  _checkReserves() */\n      tag_247\n        /* \"GIFT.sol\":1788:1802  _checkReserves */\n      tag_223\n        /* \"GIFT.sol\":1788:1804  _checkReserves() */\n      jump\t// in\n    tag_247:\n        /* \"GIFT.sol\":1708:1816  if (block.timestamp >= lastReserveCheck.add(reserveCheckPeriod)) {... */\n    tag_246:\n        /* \"GIFT.sol\":4555:4574  _mint(_to, _amount) */\n      tag_249\n        /* \"GIFT.sol\":4561:4564  _to */\n      dup3\n        /* \"GIFT.sol\":4566:4573  _amount */\n      dup3\n        /* \"GIFT.sol\":4555:4560  _mint */\n      tag_250\n        /* \"GIFT.sol\":4555:4574  _mint(_to, _amount) */\n      jump\t// in\n    tag_249:\n        /* \"GIFT.sol\":4456:4582  function mint(address _to, uint256 _amount) external onlySupplyController checkReserves {... */\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":4590:4675  function burn(uint256 _amount) external {... */\n    tag_98:\n        /* \"GIFT.sol\":4641:4667  _burn(msg.sender, _amount) */\n      tag_252\n        /* \"GIFT.sol\":4647:4657  msg.sender */\n      caller\n        /* \"GIFT.sol\":4659:4666  _amount */\n      dup3\n        /* \"GIFT.sol\":4641:4646  _burn */\n      tag_253\n        /* \"GIFT.sol\":4641:4667  _burn(msg.sender, _amount) */\n      jump\t// in\n    tag_252:\n        /* \"GIFT.sol\":4590:4675  function burn(uint256 _amount) external {... */\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":3171:3364  function setSupplyController(address _newSupplyController) external onlyOwner {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_255:\n        /* \"GIFT.sol\":3279:3299  _newSupplyController */\n      dup1\n        /* \"GIFT.sol\":3260:3276  supplyController */\n      0x32\n      0x00\n        /* \"GIFT.sol\":3260:3299  supplyController = _newSupplyController */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":3335:3355  _newSupplyController */\n      dup1\n        /* \"GIFT.sol\":3315:3356  SupplyControllerSet(_newSupplyController) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x915d8b94cdcbf4fa1b4c768b15f63b99aee21096b9d04fe1938f45833036106d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GIFT.sol\":3171:3364  function setSupplyController(address _newSupplyController) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":2606:3159  function setTaxParameters(uint256[5] memory _tiers, uint256[5] memory _percentages) external onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_258:\n        /* \"GIFT.sol\":2741:2758  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"GIFT.sol\":2728:2734  _tiers */\n      dup3\n        /* \"GIFT.sol\":2735:2736  4 */\n      0x04\n        /* \"GIFT.sol\":2728:2737  _tiers[4] */\n      0x05\n      dup2\n      lt\n      tag_260\n      jumpi\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n    tag_260:\n      0x20\n      mul\n      add\n      mload\n        /* \"GIFT.sol\":2728:2758  _tiers[4] == type(uint256).max */\n      eq\n        /* \"GIFT.sol\":2720:2790  require(_tiers[4] == type(uint256).max, \"GIFT: Last tier must be max\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"GIFT.sol\":2806:2812  uint i */\n      0x00\n        /* \"GIFT.sol\":2801:3036  for (uint i = 0; i < 5; i++) {... */\n    tag_266:\n        /* \"GIFT.sol\":2822:2823  5 */\n      0x05\n        /* \"GIFT.sol\":2818:2819  i */\n      dup2\n        /* \"GIFT.sol\":2818:2823  i < 5 */\n      lt\n        /* \"GIFT.sol\":2801:3036  for (uint i = 0; i < 5; i++) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"GIFT.sol\":926:932  20_000 */\n      0x4e20\n        /* \"GIFT.sol\":2853:2865  _percentages */\n      dup3\n        /* \"GIFT.sol\":2866:2867  i */\n      dup3\n        /* \"GIFT.sol\":2853:2868  _percentages[i] */\n      0x05\n      dup2\n      lt\n      tag_269\n      jumpi\n      tag_270\n      tag_262\n      jump\t// in\n    tag_270:\n    tag_269:\n      0x20\n      mul\n      add\n      mload\n        /* \"GIFT.sol\":2853:2890  _percentages[i] <= MAX_TAX_PERCENTAGE */\n      gt\n      iszero\n        /* \"GIFT.sol\":2845:2924  require(_percentages[i] <= MAX_TAX_PERCENTAGE, \"GIFT: Tax percentage too high\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"GIFT.sol\":2947:2948  0 */\n      0x00\n        /* \"GIFT.sol\":2943:2944  i */\n      dup2\n        /* \"GIFT.sol\":2943:2948  i > 0 */\n      gt\n        /* \"GIFT.sol\":2939:3024  if (i > 0) require(_tiers[i] > _tiers[i-1], \"GIFT: Tiers must be in ascending order\") */\n      iszero\n      tag_274\n      jumpi\n        /* \"GIFT.sol\":2970:2976  _tiers */\n      dup3\n        /* \"GIFT.sol\":2979:2980  1 */\n      0x01\n        /* \"GIFT.sol\":2977:2978  i */\n      dup3\n        /* \"GIFT.sol\":2977:2980  i-1 */\n      tag_275\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"GIFT.sol\":2970:2981  _tiers[i-1] */\n      0x05\n      dup2\n      lt\n      tag_277\n      jumpi\n      tag_278\n      tag_262\n      jump\t// in\n    tag_278:\n    tag_277:\n      0x20\n      mul\n      add\n      mload\n        /* \"GIFT.sol\":2958:2964  _tiers */\n      dup4\n        /* \"GIFT.sol\":2965:2966  i */\n      dup3\n        /* \"GIFT.sol\":2958:2967  _tiers[i] */\n      0x05\n      dup2\n      lt\n      tag_279\n      jumpi\n      tag_280\n      tag_262\n      jump\t// in\n    tag_280:\n    tag_279:\n      0x20\n      mul\n      add\n      mload\n        /* \"GIFT.sol\":2958:2981  _tiers[i] > _tiers[i-1] */\n      gt\n        /* \"GIFT.sol\":2950:3024  require(_tiers[i] > _tiers[i-1], \"GIFT: Tiers must be in ascending order\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"GIFT.sol\":2939:3024  if (i > 0) require(_tiers[i] > _tiers[i-1], \"GIFT: Tiers must be in ascending order\") */\n    tag_274:\n        /* \"GIFT.sol\":2825:2828  i++ */\n      dup1\n      dup1\n      tag_284\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      swap2\n      pop\n      pop\n        /* \"GIFT.sol\":2801:3036  for (uint i = 0; i < 5; i++) {... */\n      jump(tag_266)\n    tag_267:\n      pop\n        /* \"GIFT.sol\":3057:3063  _tiers */\n      dup2\n        /* \"GIFT.sol\":3046:3054  taxTiers */\n      0x38\n        /* \"GIFT.sol\":3046:3063  taxTiers = _tiers */\n      swap1\n      0x05\n      tag_286\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      pop\n        /* \"GIFT.sol\":3091:3103  _percentages */\n      dup1\n        /* \"GIFT.sol\":3074:3088  taxPercentages */\n      0x3d\n        /* \"GIFT.sol\":3074:3103  taxPercentages = _percentages */\n      swap1\n      0x05\n      tag_288\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_288:\n      pop\n        /* \"GIFT.sol\":3119:3151  TaxUpdated(_tiers, _percentages) */\n      0xfca5dd7612680a40f4851bb137ecc39852bd2a1a3cc176efbb39affa8ce97214\n        /* \"GIFT.sol\":3130:3136  _tiers */\n      dup3\n        /* \"GIFT.sol\":3138:3150  _percentages */\n      dup3\n        /* \"GIFT.sol\":3119:3151  TaxUpdated(_tiers, _percentages) */\n      mload(0x40)\n      tag_289\n      swap3\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"GIFT.sol\":2606:3159  function setTaxParameters(uint256[5] memory _tiers, uint256[5] memory _percentages) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1942:1956  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4466:4473  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4485:4507  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      tag_293\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4526  _getERC20Storage */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4510:4528  _getERC20Storage() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4485:4528  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4546  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4556  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4564  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4565  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4538:4565  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4572  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":881:932  uint256 public constant MAX_TAX_PERCENTAGE = 20_000 */\n    tag_114:\n        /* \"GIFT.sol\":926:932  20_000 */\n      0x4e20\n        /* \"GIFT.sol\":881:932  uint256 public constant MAX_TAX_PERCENTAGE = 20_000 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_295\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_297\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"GIFT.sol\":4683:5048  function burnFrom(address _account, uint256 _amount) external {... */\n    tag_120:\n        /* \"GIFT.sol\":4756:4780  uint256 currentAllowance */\n      0x00\n        /* \"GIFT.sol\":4783:4814  allowance(_account, msg.sender) */\n      tag_300\n        /* \"GIFT.sol\":4793:4801  _account */\n      dup4\n        /* \"GIFT.sol\":4803:4813  msg.sender */\n      caller\n        /* \"GIFT.sol\":4783:4792  allowance */\n      tag_170\n        /* \"GIFT.sol\":4783:4814  allowance(_account, msg.sender) */\n      jump\t// in\n    tag_300:\n        /* \"GIFT.sol\":4756:4814  uint256 currentAllowance = allowance(_account, msg.sender) */\n      swap1\n      pop\n        /* \"GIFT.sol\":4853:4860  _amount */\n      dup2\n        /* \"GIFT.sol\":4833:4849  currentAllowance */\n      dup2\n        /* \"GIFT.sol\":4833:4860  currentAllowance >= _amount */\n      lt\n      iszero\n        /* \"GIFT.sol\":4825:4900  require(currentAllowance >= _amount, \"GIFT: burn amount exceeds allowance\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"GIFT.sol\":4936:4994  _approve(_account, msg.sender, currentAllowance - _amount) */\n      tag_304\n        /* \"GIFT.sol\":4945:4953  _account */\n      dup4\n        /* \"GIFT.sol\":4955:4965  msg.sender */\n      caller\n        /* \"GIFT.sol\":4986:4993  _amount */\n      dup5\n        /* \"GIFT.sol\":4967:4983  currentAllowance */\n      dup5\n        /* \"GIFT.sol\":4967:4993  currentAllowance - _amount */\n      sub\n        /* \"GIFT.sol\":4936:4944  _approve */\n      tag_199\n        /* \"GIFT.sol\":4936:4994  _approve(_account, msg.sender, currentAllowance - _amount) */\n      jump\t// in\n    tag_304:\n        /* \"GIFT.sol\":5016:5040  _burn(_account, _amount) */\n      tag_305\n        /* \"GIFT.sol\":5022:5030  _account */\n      dup4\n        /* \"GIFT.sol\":5032:5039  _amount */\n      dup4\n        /* \"GIFT.sol\":5016:5021  _burn */\n      tag_253\n        /* \"GIFT.sol\":5016:5040  _burn(_account, _amount) */\n      jump\t// in\n    tag_305:\n        /* \"GIFT.sol\":4745:5048  {... */\n      pop\n        /* \"GIFT.sol\":4683:5048  function burnFrom(address _account, uint256 _amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":4082:4269  function setReserveConsumer(address _newReserveConsumer) external onlyOwner {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_307\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_307:\n        /* \"GIFT.sol\":4187:4206  _newReserveConsumer */\n      dup1\n        /* \"GIFT.sol\":4169:4184  reserveConsumer */\n      0x34\n      0x00\n        /* \"GIFT.sol\":4169:4206  reserveConsumer = _newReserveConsumer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":4241:4260  _newReserveConsumer */\n      dup1\n        /* \"GIFT.sol\":4222:4261  ReserveConsumerSet(_newReserveConsumer) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x25cf73d41a7a2f5baa3ed34b7a72144453377d3d6c59b74db14e0ff168fd1fa9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GIFT.sol\":4082:4269  function setReserveConsumer(address _newReserveConsumer) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":5058:5121  function pause() external onlyOwner {... */\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_310\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_310:\n        /* \"GIFT.sol\":5105:5113  _pause() */\n      tag_312\n        /* \"GIFT.sol\":5105:5111  _pause */\n      tag_313\n        /* \"GIFT.sol\":5105:5113  _pause() */\n      jump\t// in\n    tag_312:\n        /* \"GIFT.sol\":5058:5121  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"GIFT.sol\":687:744  mapping(address => bool) public isExcludedFromInboundFees */\n    tag_128:\n      mstore(0x20, 0x36)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"GIFT.sol\":583:613  address public reserveConsumer */\n    tag_131:\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_315\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3315:3328  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3340:3362  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3381  _getERC20Storage */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3365:3383  _getERC20Storage() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3340:3383  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3400:3401  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3400:3409  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3393:3409  return $._symbol */\n      dup1\n      sload\n      tag_319\n      swap1\n      tag_190\n      jump\t// in\n    tag_319:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_320\n      swap1\n      tag_190\n      jump\t// in\n    tag_320:\n      dup1\n      iszero\n      tag_321\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_322\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_321)\n    tag_322:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_323:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_323\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_321:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3268:3416  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"GIFT.sol\":4277:4446  function setReserveCheckPeriod(uint256 _newPeriod) external onlyOwner {... */\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_325:\n        /* \"GIFT.sol\":4379:4389  _newPeriod */\n      dup1\n        /* \"GIFT.sol\":4358:4376  reserveCheckPeriod */\n      0x43\n        /* \"GIFT.sol\":4358:4389  reserveCheckPeriod = _newPeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":4405:4438  ReserveCheckPeriodSet(_newPeriod) */\n      0xf759d32ec37fe15560fbb2ad08f9ea31689d826215d24d6a6e2e740c517c66db\n        /* \"GIFT.sol\":4427:4437  _newPeriod */\n      dup2\n        /* \"GIFT.sol\":4405:4438  ReserveCheckPeriodSet(_newPeriod) */\n      mload(0x40)\n      tag_327\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"GIFT.sol\":4277:4446  function setReserveCheckPeriod(uint256 _newPeriod) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":5204:5396  function transfer(address recipient, uint256 amount) public virtual override whenNotPaused checkReserves returns (bool) {... */\n    tag_144:\n        /* \"GIFT.sol\":5318:5322  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_329\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_329:\n        /* \"GIFT.sol\":1731:1771  lastReserveCheck.add(reserveCheckPeriod) */\n      tag_331\n        /* \"GIFT.sol\":1752:1770  reserveCheckPeriod */\n      sload(0x43)\n        /* \"GIFT.sol\":1731:1747  lastReserveCheck */\n      sload(0x42)\n        /* \"GIFT.sol\":1731:1751  lastReserveCheck.add */\n      tag_220\n      swap1\n        /* \"GIFT.sol\":1731:1771  lastReserveCheck.add(reserveCheckPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_331:\n        /* \"GIFT.sol\":1712:1727  block.timestamp */\n      timestamp\n        /* \"GIFT.sol\":1712:1771  block.timestamp >= lastReserveCheck.add(reserveCheckPeriod) */\n      lt\n        /* \"GIFT.sol\":1708:1816  if (block.timestamp >= lastReserveCheck.add(reserveCheckPeriod)) {... */\n      tag_332\n      jumpi\n        /* \"GIFT.sol\":1788:1804  _checkReserves() */\n      tag_333\n        /* \"GIFT.sol\":1788:1802  _checkReserves */\n      tag_223\n        /* \"GIFT.sol\":1788:1804  _checkReserves() */\n      jump\t// in\n    tag_333:\n        /* \"GIFT.sol\":1708:1816  if (block.timestamp >= lastReserveCheck.add(reserveCheckPeriod)) {... */\n    tag_332:\n        /* \"GIFT.sol\":5342:5388  _transferGIFT(_msgSender(), recipient, amount) */\n      tag_335\n        /* \"GIFT.sol\":5356:5368  _msgSender() */\n      tag_336\n        /* \"GIFT.sol\":5356:5366  _msgSender */\n      tag_197\n        /* \"GIFT.sol\":5356:5368  _msgSender() */\n      jump\t// in\n    tag_336:\n        /* \"GIFT.sol\":5370:5379  recipient */\n      dup5\n        /* \"GIFT.sol\":5381:5387  amount */\n      dup5\n        /* \"GIFT.sol\":5342:5355  _transferGIFT */\n      tag_233\n        /* \"GIFT.sol\":5342:5388  _transferGIFT(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_335:\n        /* \"GIFT.sol\":5335:5388  return _transferGIFT(_msgSender(), recipient, amount) */\n      swap1\n      pop\n        /* \"GIFT.sol\":5204:5396  function transfer(address recipient, uint256 amount) public virtual override whenNotPaused checkReserves returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":807:833  uint256[5] public taxTiers */\n    tag_148:\n      0x38\n      dup2\n      0x05\n      dup2\n      lt\n      tag_337\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_337:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"GIFT.sol\":3892:4074  function setLiquidityPool(address _address, bool _isPool) external onlyOwner {... */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_340\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_340:\n        /* \"GIFT.sol\":4008:4015  _isPool */\n      dup1\n        /* \"GIFT.sol\":3980:3995  isLiquidityPool */\n      0x37\n        /* \"GIFT.sol\":3980:4005  isLiquidityPool[_address] */\n      0x00\n        /* \"GIFT.sol\":3996:4004  _address */\n      dup5\n        /* \"GIFT.sol\":3980:4005  isLiquidityPool[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"GIFT.sol\":3980:4015  isLiquidityPool[_address] = _isPool */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":4048:4056  _address */\n      dup2\n        /* \"GIFT.sol\":4031:4066  LiquidityPoolSet(_address, _isPool) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfa4a2b2457d2065452473bed7d55c8fa2f65fc4a1eff1ebdaf14a1b7281e7773\n        /* \"GIFT.sol\":4058:4065  _isPool */\n      dup3\n        /* \"GIFT.sol\":4031:4066  LiquidityPoolSet(_address, _isPool) */\n      mload(0x40)\n      tag_342\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GIFT.sol\":3892:4074  function setLiquidityPool(address _address, bool _isPool) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":7639:7728  function renounceAdminControl() external onlyOwner {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_344\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_344:\n        /* \"GIFT.sol\":7701:7720  renounceOwnership() */\n      tag_346\n        /* \"GIFT.sol\":7701:7718  renounceOwnership */\n      tag_117\n        /* \"GIFT.sol\":7701:7720  renounceOwnership() */\n      jump\t// in\n    tag_346:\n        /* \"GIFT.sol\":7639:7728  function renounceAdminControl() external onlyOwner {... */\n      jump\t// out\n        /* \"GIFT.sol\":622:680  mapping(address => bool) public isExcludedFromOutboundFees */\n    tag_158:\n      mstore(0x20, 0x35)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"GIFT.sol\":984:1017  uint256 public reserveCheckPeriod */\n    tag_161:\n      sload(0x43)\n      dup2\n      jump\t// out\n        /* \"GIFT.sol\":1847:2592  function initialize(... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_350\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_350:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_351\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_351:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_352\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_352:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_353\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_354:\n        /* \"GIFT.sol\":2068:2094  __ERC20_init(name, symbol) */\n      tag_356\n        /* \"GIFT.sol\":2081:2085  name */\n      dup11\n        /* \"GIFT.sol\":2087:2093  symbol */\n      dup11\n        /* \"GIFT.sol\":2068:2080  __ERC20_init */\n      tag_357\n        /* \"GIFT.sol\":2068:2094  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_356:\n        /* \"GIFT.sol\":2105:2131  __Ownable_init(msg.sender) */\n      tag_358\n        /* \"GIFT.sol\":2120:2130  msg.sender */\n      caller\n        /* \"GIFT.sol\":2105:2119  __Ownable_init */\n      tag_359\n        /* \"GIFT.sol\":2105:2131  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_358:\n        /* \"GIFT.sol\":2142:2159  __Pausable_init() */\n      tag_360\n        /* \"GIFT.sol\":2142:2157  __Pausable_init */\n      tag_361\n        /* \"GIFT.sol\":2142:2159  __Pausable_init() */\n      jump\t// in\n    tag_360:\n        /* \"GIFT.sol\":2199:2216  _supplyController */\n      dup8\n        /* \"GIFT.sol\":2180:2196  supplyController */\n      0x32\n      0x00\n        /* \"GIFT.sol\":2180:2216  supplyController = _supplyController */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":2241:2253  _beneficiary */\n      dup7\n        /* \"GIFT.sol\":2227:2238  beneficiary */\n      0x33\n      0x00\n        /* \"GIFT.sol\":2227:2253  beneficiary = _beneficiary */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":2282:2298  _reserveConsumer */\n      dup6\n        /* \"GIFT.sol\":2264:2279  reserveConsumer */\n      0x34\n      0x00\n        /* \"GIFT.sol\":2264:2298  reserveConsumer = _reserveConsumer */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":2372:2452  taxTiers = [1000 ether, 5000 ether, 10000 ether, 50000 ether, type(uint256).max] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"GIFT.sol\":2384:2394  1000 ether */\n      0x3635c9adc5dea00000\n        /* \"GIFT.sol\":2372:2452  taxTiers = [1000 ether, 5000 ether, 10000 ether, 50000 ether, type(uint256).max] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"GIFT.sol\":2396:2406  5000 ether */\n      0x010f0cf064dd59200000\n        /* \"GIFT.sol\":2372:2452  taxTiers = [1000 ether, 5000 ether, 10000 ether, 50000 ether, type(uint256).max] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"GIFT.sol\":2408:2419  10000 ether */\n      0x021e19e0c9bab2400000\n        /* \"GIFT.sol\":2372:2452  taxTiers = [1000 ether, 5000 ether, 10000 ether, 50000 ether, type(uint256).max] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"GIFT.sol\":2421:2432  50000 ether */\n      0x0a968163f0a57b400000\n        /* \"GIFT.sol\":2372:2452  taxTiers = [1000 ether, 5000 ether, 10000 ether, 50000 ether, type(uint256).max] */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"GIFT.sol\":2434:2451  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"GIFT.sol\":2372:2452  taxTiers = [1000 ether, 5000 ether, 10000 ether, 50000 ether, type(uint256).max] */\n      dup2\n      mstore\n      pop\n        /* \"GIFT.sol\":2372:2380  taxTiers */\n      0x38\n        /* \"GIFT.sol\":2372:2452  taxTiers = [1000 ether, 5000 ether, 10000 ether, 50000 ether, type(uint256).max] */\n      swap1\n      0x05\n      tag_362\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_362:\n      pop\n        /* \"GIFT.sol\":2463:2506  taxPercentages = [1000, 800, 600, 400, 200] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"GIFT.sol\":2481:2485  1000 */\n      0x03e8\n        /* \"GIFT.sol\":2463:2506  taxPercentages = [1000, 800, 600, 400, 200] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"GIFT.sol\":2487:2490  800 */\n      0x0320\n        /* \"GIFT.sol\":2463:2506  taxPercentages = [1000, 800, 600, 400, 200] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"GIFT.sol\":2492:2495  600 */\n      0x0258\n        /* \"GIFT.sol\":2463:2506  taxPercentages = [1000, 800, 600, 400, 200] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"GIFT.sol\":2497:2500  400 */\n      0x0190\n        /* \"GIFT.sol\":2463:2506  taxPercentages = [1000, 800, 600, 400, 200] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"GIFT.sol\":2502:2505  200 */\n      0xc8\n        /* \"GIFT.sol\":2463:2506  taxPercentages = [1000, 800, 600, 400, 200] */\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"GIFT.sol\":2463:2477  taxPercentages */\n      0x3d\n        /* \"GIFT.sol\":2463:2506  taxPercentages = [1000, 800, 600, 400, 200] */\n      swap1\n      0x05\n      tag_363\n      swap3\n      swap2\n      swap1\n      tag_364\n      jump\t// in\n    tag_363:\n      pop\n        /* \"GIFT.sol\":2578:2584  1 days */\n      0x015180\n        /* \"GIFT.sol\":2557:2575  reserveCheckPeriod */\n      0x43\n        /* \"GIFT.sol\":2557:2584  reserveCheckPeriod = 1 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_366\n      swap2\n      swap1\n      tag_367\n      jump\t// in\n    tag_366:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"GIFT.sol\":1847:2592  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5083:5090  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5102:5124  ERC20Storage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5143  _getERC20Storage */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5127:5145  _getERC20Storage() */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5102:5145  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5163  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5175  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5176:5181  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5182  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5183:5190  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5162:5191  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5155:5191  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5003:5198  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":3543:3882  function setFeeExclusion(address _address, bool _isExcludedOutbound, bool _isExcludedInbound) external onlyOwner {... */\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_371\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_371:\n        /* \"GIFT.sol\":3706:3725  _isExcludedOutbound */\n      dup2\n        /* \"GIFT.sol\":3667:3693  isExcludedFromOutboundFees */\n      0x35\n        /* \"GIFT.sol\":3667:3703  isExcludedFromOutboundFees[_address] */\n      0x00\n        /* \"GIFT.sol\":3694:3702  _address */\n      dup6\n        /* \"GIFT.sol\":3667:3703  isExcludedFromOutboundFees[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"GIFT.sol\":3667:3725  isExcludedFromOutboundFees[_address] = _isExcludedOutbound */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":3774:3792  _isExcludedInbound */\n      dup1\n        /* \"GIFT.sol\":3736:3761  isExcludedFromInboundFees */\n      0x36\n        /* \"GIFT.sol\":3736:3771  isExcludedFromInboundFees[_address] */\n      0x00\n        /* \"GIFT.sol\":3762:3770  _address */\n      dup6\n        /* \"GIFT.sol\":3736:3771  isExcludedFromInboundFees[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"GIFT.sol\":3736:3792  isExcludedFromInboundFees[_address] = _isExcludedInbound */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":3824:3832  _address */\n      dup3\n        /* \"GIFT.sol\":3808:3874  FeeExclusionSet(_address, _isExcludedOutbound, _isExcludedInbound) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x56ef0fe49f8ee42d7982bb42d42fa7b8d1370ec36d0f8cb83802a7f74215027d\n        /* \"GIFT.sol\":3834:3853  _isExcludedOutbound */\n      dup4\n        /* \"GIFT.sol\":3855:3873  _isExcludedInbound */\n      dup4\n        /* \"GIFT.sol\":3808:3874  FeeExclusionSet(_address, _isExcludedOutbound, _isExcludedInbound) */\n      mload(0x40)\n      tag_373\n      swap3\n      swap2\n      swap1\n      tag_374\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"GIFT.sol\":3543:3882  function setFeeExclusion(address _address, bool _isExcludedOutbound, bool _isExcludedInbound) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":512:543  address public supplyController */\n    tag_177:\n      0x32\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"GIFT.sol\":751:798  mapping(address => bool) public isLiquidityPool */\n    tag_181:\n      mstore(0x20, 0x37)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_380\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2292:2314  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2359:2379  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2349:2379  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2242:2395  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10264:10392  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10348:10385  _approve(owner, spender, value, true) */\n      tag_384\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10357:10362  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10364:10371  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10373:10378  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10380:10384  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10348:10356  _approve */\n      tag_385\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10348:10385  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10264:10392  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_387\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_388\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_390\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_391\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_391:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      tag_393\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2107  paused */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap1\n      tag_396\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_394:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2766:2862  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2824:2831  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2854:2855  b */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2850:2851  a */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2850:2855  a + b */\n      tag_398\n      swap2\n      swap1\n      tag_399\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2843:2855  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":2766:2862  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":6688:7158  function _checkReserves() internal {... */\n    tag_223:\n        /* \"GIFT.sol\":6765:6766  0 */\n      0x00\n        /* \"GIFT.sol\":6738:6767  reserveConsumer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GIFT.sol\":6738:6753  reserveConsumer */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GIFT.sol\":6738:6767  reserveConsumer != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"GIFT.sol\":6734:7106  if (reserveConsumer != address(0)) {... */\n      tag_401\n      jumpi\n        /* \"GIFT.sol\":6785:6797  bool success */\n      0x00\n        /* \"GIFT.sol\":6799:6816  bytes memory data */\n      dup1\n        /* \"GIFT.sol\":6820:6835  reserveConsumer */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GIFT.sol\":6820:6846  reserveConsumer.staticcall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GIFT.sol\":6847:6887  abi.encodeWithSignature(\"getReserves()\") */\n      add(0x24, mload(0x40))\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x0902f1ac00000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"GIFT.sol\":6820:6888  reserveConsumer.staticcall(abi.encodeWithSignature(\"getReserves()\")) */\n      mload(0x40)\n      tag_402\n      swap2\n      swap1\n      tag_403\n      jump\t// in\n    tag_402:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_406\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_405)\n    tag_406:\n      0x60\n      swap2\n      pop\n    tag_405:\n      pop\n        /* \"GIFT.sol\":6784:6888  (bool success, bytes memory data) = reserveConsumer.staticcall(abi.encodeWithSignature(\"getReserves()\")) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"GIFT.sol\":6911:6918  success */\n      dup2\n        /* \"GIFT.sol\":6903:6953  require(success, \"GIFT: Failed to check reserves\") */\n      tag_407\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_408\n      swap1\n      tag_409\n      jump\t// in\n    tag_408:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_407:\n        /* \"GIFT.sol\":6968:6984  uint256 reserves */\n      0x00\n        /* \"GIFT.sol\":6998:7002  data */\n      dup2\n        /* \"GIFT.sol\":6987:7014  abi.decode(data, (uint256)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_410\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"GIFT.sol\":6968:7014  uint256 reserves = abi.decode(data, (uint256)) */\n      swap1\n      pop\n        /* \"GIFT.sol\":7054:7062  reserves */\n      dup1\n        /* \"GIFT.sol\":7037:7050  totalSupply() */\n      tag_412\n        /* \"GIFT.sol\":7037:7048  totalSupply */\n      tag_66\n        /* \"GIFT.sol\":7037:7050  totalSupply() */\n      jump\t// in\n    tag_412:\n        /* \"GIFT.sol\":7037:7062  totalSupply() <= reserves */\n      gt\n      iszero\n        /* \"GIFT.sol\":7029:7094  require(totalSupply() <= reserves, \"GIFT: Insufficient reserves\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_414\n      swap1\n      tag_415\n      jump\t// in\n    tag_414:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_413:\n        /* \"GIFT.sol\":6769:7106  {... */\n      pop\n      pop\n      pop\n        /* \"GIFT.sol\":6734:7106  if (reserveConsumer != address(0)) {... */\n    tag_401:\n        /* \"GIFT.sol\":7135:7150  block.timestamp */\n      timestamp\n        /* \"GIFT.sol\":7116:7132  lastReserveCheck */\n      0x42\n        /* \"GIFT.sol\":7116:7150  lastReserveCheck = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"GIFT.sol\":6688:7158  function _checkReserves() internal {... */\n      jump\t// out\n        /* \"GIFT.sol\":5882:6374  function _transferGIFT(address sender, address recipient, uint256 amount) internal virtual returns (bool) {... */\n    tag_233:\n        /* \"GIFT.sol\":5982:5986  bool */\n      0x00\n        /* \"GIFT.sol\":6003:6029  isExcludedFromOutboundFees */\n      0x35\n        /* \"GIFT.sol\":6003:6037  isExcludedFromOutboundFees[sender] */\n      0x00\n        /* \"GIFT.sol\":6030:6036  sender */\n      dup6\n        /* \"GIFT.sol\":6003:6037  isExcludedFromOutboundFees[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"GIFT.sol\":6003:6077  isExcludedFromOutboundFees[sender] || isExcludedFromInboundFees[recipient] */\n      dup1\n      tag_417\n      jumpi\n      pop\n        /* \"GIFT.sol\":6041:6066  isExcludedFromInboundFees */\n      0x36\n        /* \"GIFT.sol\":6041:6077  isExcludedFromInboundFees[recipient] */\n      0x00\n        /* \"GIFT.sol\":6067:6076  recipient */\n      dup5\n        /* \"GIFT.sol\":6041:6077  isExcludedFromInboundFees[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"GIFT.sol\":6003:6077  isExcludedFromOutboundFees[sender] || isExcludedFromInboundFees[recipient] */\n    tag_417:\n        /* \"GIFT.sol\":6003:6104  isExcludedFromOutboundFees[sender] || isExcludedFromInboundFees[recipient] || isLiquidityPool[sender] */\n      dup1\n      tag_418\n      jumpi\n      pop\n        /* \"GIFT.sol\":6081:6096  isLiquidityPool */\n      0x37\n        /* \"GIFT.sol\":6081:6104  isLiquidityPool[sender] */\n      0x00\n        /* \"GIFT.sol\":6097:6103  sender */\n      dup6\n        /* \"GIFT.sol\":6081:6104  isLiquidityPool[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"GIFT.sol\":6003:6104  isExcludedFromOutboundFees[sender] || isExcludedFromInboundFees[recipient] || isLiquidityPool[sender] */\n    tag_418:\n        /* \"GIFT.sol\":5999:6345  if (isExcludedFromOutboundFees[sender] || isExcludedFromInboundFees[recipient] || isLiquidityPool[sender]) {... */\n      iszero\n      tag_419\n      jumpi\n        /* \"GIFT.sol\":6121:6157  _transfer(sender, recipient, amount) */\n      tag_420\n        /* \"GIFT.sol\":6131:6137  sender */\n      dup5\n        /* \"GIFT.sol\":6139:6148  recipient */\n      dup5\n        /* \"GIFT.sol\":6150:6156  amount */\n      dup5\n        /* \"GIFT.sol\":6121:6130  _transfer */\n      tag_421\n        /* \"GIFT.sol\":6121:6157  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_420:\n        /* \"GIFT.sol\":5999:6345  if (isExcludedFromOutboundFees[sender] || isExcludedFromInboundFees[recipient] || isLiquidityPool[sender]) {... */\n      jump(tag_422)\n    tag_419:\n        /* \"GIFT.sol\":6190:6201  uint256 tax */\n      0x00\n        /* \"GIFT.sol\":6204:6223  _computeTax(amount) */\n      tag_423\n        /* \"GIFT.sol\":6216:6222  amount */\n      dup4\n        /* \"GIFT.sol\":6204:6215  _computeTax */\n      tag_424\n        /* \"GIFT.sol\":6204:6223  _computeTax(amount) */\n      jump\t// in\n    tag_423:\n        /* \"GIFT.sol\":6190:6223  uint256 tax = _computeTax(amount) */\n      swap1\n      pop\n        /* \"GIFT.sol\":6238:6273  _transfer(sender, beneficiary, tax) */\n      tag_425\n        /* \"GIFT.sol\":6248:6254  sender */\n      dup6\n        /* \"GIFT.sol\":6256:6267  beneficiary */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"GIFT.sol\":6269:6272  tax */\n      dup4\n        /* \"GIFT.sol\":6238:6247  _transfer */\n      tag_421\n        /* \"GIFT.sol\":6238:6273  _transfer(sender, beneficiary, tax) */\n      jump\t// in\n    tag_425:\n        /* \"GIFT.sol\":6288:6333  _transfer(sender, recipient, amount.sub(tax)) */\n      tag_426\n        /* \"GIFT.sol\":6298:6304  sender */\n      dup6\n        /* \"GIFT.sol\":6306:6315  recipient */\n      dup6\n        /* \"GIFT.sol\":6317:6332  amount.sub(tax) */\n      tag_427\n        /* \"GIFT.sol\":6328:6331  tax */\n      dup5\n        /* \"GIFT.sol\":6317:6323  amount */\n      dup8\n        /* \"GIFT.sol\":6317:6327  amount.sub */\n      tag_428\n      swap1\n        /* \"GIFT.sol\":6317:6332  amount.sub(tax) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_427:\n        /* \"GIFT.sol\":6288:6297  _transfer */\n      tag_421\n        /* \"GIFT.sol\":6288:6333  _transfer(sender, recipient, amount.sub(tax)) */\n      jump\t// in\n    tag_426:\n        /* \"GIFT.sol\":6175:6345  {... */\n      pop\n        /* \"GIFT.sol\":5999:6345  if (isExcludedFromOutboundFees[sender] || isExcludedFromInboundFees[recipient] || isLiquidityPool[sender]) {... */\n    tag_422:\n        /* \"GIFT.sol\":6362:6366  true */\n      0x01\n        /* \"GIFT.sol\":6355:6366  return true */\n      swap1\n      pop\n        /* \"GIFT.sol\":5882:6374  function _transferGIFT(address sender, address recipient, uint256 amount) internal virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_430\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_431\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_430:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2762  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      tag_433\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2804  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      jump\t// in\n    tag_433:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_434\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_434:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8996:9204  function _mint(address account, uint256 value) internal {... */\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9085:9086  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9066:9087  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9066:9073  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9066:9087  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9062:9153  if (account == address(0)) {... */\n      tag_436\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9139:9140  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9110:9142  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_437\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_437:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9062:9153  if (account == address(0)) {... */\n    tag_436:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9162:9197  _update(address(0), account, value) */\n      tag_438\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9178:9179  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9182:9189  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9191:9196  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9162:9169  _update */\n      tag_439\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9162:9197  _update(address(0), account, value) */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8996:9204  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9522:9728  function _burn(address account, uint256 value) internal {... */\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9611:9612  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9592:9613  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9592:9599  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9592:9613  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9588:9677  if (account == address(0)) {... */\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9663:9664  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9636:9666  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_442\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_442:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9588:9677  if (account == address(0)) {... */\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9721  _update(account, address(0), value) */\n      tag_443\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9694:9701  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9711:9712  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9715:9720  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9693  _update */\n      tag_439\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9721  _update(account, address(0), value) */\n      jump\t// in\n    tag_443:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9522:9728  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_445\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_445:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_447\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_447:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_449\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2555  _msgSender */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      jump\t// in\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      mload(0x40)\n      tag_450\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_450:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_357:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_454\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_455\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_454:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      tag_457\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2702:2707  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2709:2716  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2701  __ERC20_init_unchained */\n      tag_458\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2679:2717  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_457:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2577:2724  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_359:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_460\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_455\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_460:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_462\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_463\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_462:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_465\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_455\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_465:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_467\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_468\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n    tag_467:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11224:11711  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_385:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11332:11354  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11357:11375  _getERC20Storage() */\n      tag_470\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11357:11373  _getERC20Storage */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11357:11375  _getERC20Storage() */\n      jump\t// in\n    tag_470:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11332:11375  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11406:11407  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11389:11408  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11389:11394  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11389:11408  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11474  if (owner == address(0)) {... */\n      tag_471\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11460:11461  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11463  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_472\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_472:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11474  if (owner == address(0)) {... */\n    tag_471:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11506:11507  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11487:11508  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11487:11494  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11487:11508  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11483:11573  if (spender == address(0)) {... */\n      tag_473\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11559:11560  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11531:11562  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_474\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_474:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11483:11573  if (spender == address(0)) {... */\n    tag_473:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11614:11619  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11583  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11595  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11602  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11596:11601  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11602  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11611  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11603:11610  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11611  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11582:11619  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11633:11642  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11629:11705  if (emitEvent) {... */\n      iszero\n      tag_475\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11679:11686  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11672:11677  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11688:11693  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11663:11694  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_476\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_476:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11629:11705  if (emitEvent) {... */\n    tag_475:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11322:11711  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11224:11711  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6868:7168  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6967:6968  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6951:6969  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6951:6955  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6951:6969  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6947:7033  if (from == address(0)) {... */\n      tag_478\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7019:7020  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6992:7022  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_479\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_479:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6947:7033  if (from == address(0)) {... */\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7060:7061  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7046:7062  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7046:7048  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7046:7062  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7042:7128  if (to == address(0)) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7114:7115  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7085:7117  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_481\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_481:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7042:7128  if (to == address(0)) {... */\n    tag_480:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7137:7161  _update(from, to, value) */\n      tag_482\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7145:7149  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7151:7153  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7155:7160  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7137:7144  _update */\n      tag_439\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7137:7161  _update(from, to, value) */\n      jump\t// in\n    tag_482:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6868:7168  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"GIFT.sol\":6384:6680  function _computeTax(uint256 _amount) internal view returns (uint256) {... */\n    tag_424:\n        /* \"GIFT.sol\":6445:6452  uint256 */\n      0x00\n        /* \"GIFT.sol\":6470:6476  uint i */\n      dup1\n        /* \"GIFT.sol\":6479:6480  0 */\n      0x00\n        /* \"GIFT.sol\":6470:6480  uint i = 0 */\n      swap1\n      pop\n        /* \"GIFT.sol\":6465:6632  for (uint i = 0; i < 5; i++) {... */\n    tag_484:\n        /* \"GIFT.sol\":6486:6487  5 */\n      0x05\n        /* \"GIFT.sol\":6482:6483  i */\n      dup2\n        /* \"GIFT.sol\":6482:6487  i < 5 */\n      lt\n        /* \"GIFT.sol\":6465:6632  for (uint i = 0; i < 5; i++) {... */\n      iszero\n      tag_485\n      jumpi\n        /* \"GIFT.sol\":6524:6532  taxTiers */\n      0x38\n        /* \"GIFT.sol\":6533:6534  i */\n      dup2\n        /* \"GIFT.sol\":6524:6535  taxTiers[i] */\n      0x05\n      dup2\n      lt\n      tag_487\n      jumpi\n      tag_488\n      tag_262\n      jump\t// in\n    tag_488:\n    tag_487:\n      add\n      sload\n        /* \"GIFT.sol\":6513:6520  _amount */\n      dup4\n        /* \"GIFT.sol\":6513:6535  _amount <= taxTiers[i] */\n      gt\n        /* \"GIFT.sol\":6509:6621  if (_amount <= taxTiers[i]) {... */\n      tag_490\n      jumpi\n        /* \"GIFT.sol\":6563:6605  _amount.mul(taxPercentages[i]).div(100000) */\n      tag_491\n        /* \"GIFT.sol\":6598:6604  100000 */\n      0x0186a0\n        /* \"GIFT.sol\":6563:6593  _amount.mul(taxPercentages[i]) */\n      tag_492\n        /* \"GIFT.sol\":6575:6589  taxPercentages */\n      0x3d\n        /* \"GIFT.sol\":6590:6591  i */\n      dup5\n        /* \"GIFT.sol\":6575:6592  taxPercentages[i] */\n      0x05\n      dup2\n      lt\n      tag_493\n      jumpi\n      tag_494\n      tag_262\n      jump\t// in\n    tag_494:\n    tag_493:\n      add\n      sload\n        /* \"GIFT.sol\":6563:6570  _amount */\n      dup7\n        /* \"GIFT.sol\":6563:6574  _amount.mul */\n      tag_496\n      swap1\n        /* \"GIFT.sol\":6563:6593  _amount.mul(taxPercentages[i]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_492:\n        /* \"GIFT.sol\":6563:6597  _amount.mul(taxPercentages[i]).div */\n      tag_497\n      swap1\n        /* \"GIFT.sol\":6563:6605  _amount.mul(taxPercentages[i]).div(100000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_491:\n        /* \"GIFT.sol\":6556:6605  return _amount.mul(taxPercentages[i]).div(100000) */\n      swap2\n      pop\n      pop\n      jump(tag_483)\n        /* \"GIFT.sol\":6509:6621  if (_amount <= taxTiers[i]) {... */\n    tag_490:\n        /* \"GIFT.sol\":6489:6492  i++ */\n      dup1\n      dup1\n      tag_498\n      swap1\n      tag_285\n      jump\t// in\n    tag_498:\n      swap2\n      pop\n      pop\n        /* \"GIFT.sol\":6465:6632  for (uint i = 0; i < 5; i++) {... */\n      jump(tag_484)\n    tag_485:\n      pop\n        /* \"GIFT.sol\":6642:6672  revert(\"GIFT: Invalid amount\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_499\n      swap1\n      tag_500\n      jump\t// in\n    tag_499:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"GIFT.sol\":6384:6680  function _computeTax(uint256 _amount) internal view returns (uint256) {... */\n    tag_483:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3133:3229  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3191:3198  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3221:3222  b */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3217:3218  a */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3217:3222  a - b */\n      tag_502\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_502:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3210:3222  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3133:3229  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_431:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      tag_504\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2281  paused */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      jump\t// in\n    tag_504:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_505\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_506\n      swap1\n      tag_507\n      jump\t// in\n    tag_506:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_505:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7483:8653  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_439:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7568:7590  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7593:7611  _getERC20Storage() */\n      tag_509\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7593:7609  _getERC20Storage */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7593:7611  _getERC20Storage() */\n      jump\t// in\n    tag_509:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7568:7611  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7641:7642  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7625:7643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7625:7629  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7625:7643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n      tag_510\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7779:7784  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7761:7762  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7761:7775  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7761:7784  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_511\n      swap2\n      swap1\n      tag_399\n      jump\t// in\n    tag_511:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n      jump(tag_512)\n    tag_510:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7815:7834  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7838  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7848  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7854  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7849:7853  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7837:7854  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7815:7854  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7886:7891  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7872:7883  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7872:7891  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7868:7983  if (fromBalance < value) {... */\n      iszero\n      tag_513\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7943:7947  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7949:7960  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7962:7967  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7968  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_514\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_515\n      jump\t// in\n    tag_514:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7868:7983  if (fromBalance < value) {... */\n    tag_513:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8137:8142  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8123:8134  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8123:8142  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8104  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8114  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8120  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8115:8119  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8120  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8103:8142  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7801:8167  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7621:8167  if (from == address(0)) {... */\n    tag_512:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8195:8196  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8181:8197  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8181:8183  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8181:8197  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n      tag_516\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8362:8367  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8344:8345  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8344:8358  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8344:8367  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n      jump(tag_517)\n    tag_516:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8576:8581  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8558  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8568  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8572  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8569:8571  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8572  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8557:8581  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8177:8606  if (to == address(0)) {... */\n    tag_517:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8636:8638  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8630:8634  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8640:8645  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8621:8646  Transfer(from, to, value) */\n      mload(0x40)\n      tag_518\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_518:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7558:8653  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7483:8653  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_455:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_520\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_521\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_520:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_522\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_522:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_458:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_524\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_455\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_524:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2842:2864  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      tag_526\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2883  _getERC20Storage */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2867:2885  _getERC20Storage() */\n      jump\t// in\n    tag_526:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2842:2885  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2905:2910  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2896  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2902  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2895:2910  $._name = name_ */\n      swap1\n      dup2\n      tag_527\n      swap2\n      swap1\n      tag_528\n      jump\t// in\n    tag_527:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2932:2939  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2921  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2929  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2920:2939  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_529\n      swap2\n      swap1\n      tag_528\n      jump\t// in\n    tag_529:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2832:2946  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2730:2946  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_531\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_455\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_531:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_533\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_534\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_534:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_533:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_535\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_535:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_468:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_537\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_455\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_537:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1267  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3476:3572  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_496:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3534:3541  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3564:3565  b */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3560:3561  a */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3560:3565  a * b */\n      tag_540\n      swap2\n      swap1\n      tag_541\n      jump\t// in\n    tag_540:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3553:3565  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3476:3572  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3861:3957  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_497:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3919:3926  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3949:3950  b */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3945:3946  a */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3945:3950  a / b */\n      tag_543\n      swap2\n      swap1\n      tag_544\n      jump\t// in\n    tag_543:\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3938:3950  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":3861:3957  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_521:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_546\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_349\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_546:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n    tag_287:\n      dup3\n      0x05\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_547\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_548:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_549\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_548)\n    tag_549:\n    tag_547:\n      pop\n      swap1\n      pop\n      tag_550\n      swap2\n      swap1\n      tag_551\n      jump\t// in\n    tag_550:\n      pop\n      swap1\n      jump\t// out\n    tag_364:\n      dup3\n      0x05\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_552\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_553:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_554\n      jumpi\n      dup3\n      mload\n      dup3\n      swap1\n      0xffff\n      and\n      swap1\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_553)\n    tag_554:\n    tag_552:\n      pop\n      swap1\n      pop\n      tag_555\n      swap2\n      swap1\n      tag_551\n      jump\t// in\n    tag_555:\n      pop\n      swap1\n      jump\t// out\n    tag_551:\n    tag_556:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_557\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_556)\n    tag_557:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_558:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_559:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_560:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_655:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_655)\n    tag_657:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_561:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_562:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_660\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_558\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":818:889   */\n      tag_661\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_559\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_662\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_560\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":988:1017   */\n      tag_663\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_561\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_52:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_665\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_562\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1424   */\n    tag_563:\n        /* \"#utility.yul\":1382:1388   */\n      0x00\n        /* \"#utility.yul\":1415:1417   */\n      0x40\n        /* \"#utility.yul\":1409:1418   */\n      mload\n        /* \"#utility.yul\":1399:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1424   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_564:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1553:1670   */\n    tag_565:\n        /* \"#utility.yul\":1662:1663   */\n      0x00\n        /* \"#utility.yul\":1659:1660   */\n      dup1\n        /* \"#utility.yul\":1652:1664   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_566:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_567:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_671\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_566\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_568:\n        /* \"#utility.yul\":1983:2007   */\n      tag_673\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_567\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_674\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_674:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_569:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_676\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_568\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_570:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_571:\n        /* \"#utility.yul\":2339:2363   */\n      tag_679\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_570\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_680\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_680:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_572:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_682\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_571\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_55:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_685\n      tag_564\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":2632:2751   */\n    tag_684:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_686\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_569\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_687\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_572\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_573:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_574:\n        /* \"#utility.yul\":3196:3217   */\n      tag_690\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_573\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_58:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_692\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_574\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3775   */\n    tag_61:\n        /* \"#utility.yul\":3505:3511   */\n      0x00\n        /* \"#utility.yul\":3554:3556   */\n      0x20\n        /* \"#utility.yul\":3542:3551   */\n      dup3\n        /* \"#utility.yul\":3533:3540   */\n      dup5\n        /* \"#utility.yul\":3529:3552   */\n      sub\n        /* \"#utility.yul\":3525:3557   */\n      slt\n        /* \"#utility.yul\":3522:3641   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":3560:3639   */\n      tag_695\n      tag_564\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":3522:3641   */\n    tag_694:\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3705:3758   */\n      tag_696\n        /* \"#utility.yul\":3750:3757   */\n      dup5\n        /* \"#utility.yul\":3741:3747   */\n      dup3\n        /* \"#utility.yul\":3730:3739   */\n      dup6\n        /* \"#utility.yul\":3726:3748   */\n      add\n        /* \"#utility.yul\":3705:3758   */\n      tag_572\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":3695:3758   */\n      swap2\n      pop\n        /* \"#utility.yul\":3651:3768   */\n      pop\n        /* \"#utility.yul\":3446:3775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3781:3899   */\n    tag_575:\n        /* \"#utility.yul\":3868:3892   */\n      tag_698\n        /* \"#utility.yul\":3886:3891   */\n      dup2\n        /* \"#utility.yul\":3868:3892   */\n      tag_570\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":3863:3866   */\n      dup3\n        /* \"#utility.yul\":3856:3893   */\n      mstore\n        /* \"#utility.yul\":3781:3899   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3905:4127   */\n    tag_64:\n        /* \"#utility.yul\":3998:4002   */\n      0x00\n        /* \"#utility.yul\":4036:4038   */\n      0x20\n        /* \"#utility.yul\":4025:4034   */\n      dup3\n        /* \"#utility.yul\":4021:4039   */\n      add\n        /* \"#utility.yul\":4013:4039   */\n      swap1\n      pop\n        /* \"#utility.yul\":4049:4120   */\n      tag_700\n        /* \"#utility.yul\":4117:4118   */\n      0x00\n        /* \"#utility.yul\":4106:4115   */\n      dup4\n        /* \"#utility.yul\":4102:4119   */\n      add\n        /* \"#utility.yul\":4093:4099   */\n      dup5\n        /* \"#utility.yul\":4049:4120   */\n      tag_575\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":3905:4127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4133:4462   */\n    tag_70:\n        /* \"#utility.yul\":4192:4198   */\n      0x00\n        /* \"#utility.yul\":4241:4243   */\n      0x20\n        /* \"#utility.yul\":4229:4238   */\n      dup3\n        /* \"#utility.yul\":4220:4227   */\n      dup5\n        /* \"#utility.yul\":4216:4239   */\n      sub\n        /* \"#utility.yul\":4212:4244   */\n      slt\n        /* \"#utility.yul\":4209:4328   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":4247:4326   */\n      tag_703\n      tag_564\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":4209:4328   */\n    tag_702:\n        /* \"#utility.yul\":4367:4368   */\n      0x00\n        /* \"#utility.yul\":4392:4445   */\n      tag_704\n        /* \"#utility.yul\":4437:4444   */\n      dup5\n        /* \"#utility.yul\":4428:4434   */\n      dup3\n        /* \"#utility.yul\":4417:4426   */\n      dup6\n        /* \"#utility.yul\":4413:4435   */\n      add\n        /* \"#utility.yul\":4392:4445   */\n      tag_569\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":4382:4445   */\n      swap2\n      pop\n        /* \"#utility.yul\":4338:4455   */\n      pop\n        /* \"#utility.yul\":4133:4462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4468:5087   */\n    tag_77:\n        /* \"#utility.yul\":4545:4551   */\n      0x00\n        /* \"#utility.yul\":4553:4559   */\n      dup1\n        /* \"#utility.yul\":4561:4567   */\n      0x00\n        /* \"#utility.yul\":4610:4612   */\n      0x60\n        /* \"#utility.yul\":4598:4607   */\n      dup5\n        /* \"#utility.yul\":4589:4596   */\n      dup7\n        /* \"#utility.yul\":4585:4608   */\n      sub\n        /* \"#utility.yul\":4581:4613   */\n      slt\n        /* \"#utility.yul\":4578:4697   */\n      iszero\n      tag_706\n      jumpi\n        /* \"#utility.yul\":4616:4695   */\n      tag_707\n      tag_564\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":4578:4697   */\n    tag_706:\n        /* \"#utility.yul\":4736:4737   */\n      0x00\n        /* \"#utility.yul\":4761:4814   */\n      tag_708\n        /* \"#utility.yul\":4806:4813   */\n      dup7\n        /* \"#utility.yul\":4797:4803   */\n      dup3\n        /* \"#utility.yul\":4786:4795   */\n      dup8\n        /* \"#utility.yul\":4782:4804   */\n      add\n        /* \"#utility.yul\":4761:4814   */\n      tag_569\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":4751:4814   */\n      swap4\n      pop\n        /* \"#utility.yul\":4707:4824   */\n      pop\n        /* \"#utility.yul\":4863:4865   */\n      0x20\n        /* \"#utility.yul\":4889:4942   */\n      tag_709\n        /* \"#utility.yul\":4934:4941   */\n      dup7\n        /* \"#utility.yul\":4925:4931   */\n      dup3\n        /* \"#utility.yul\":4914:4923   */\n      dup8\n        /* \"#utility.yul\":4910:4932   */\n      add\n        /* \"#utility.yul\":4889:4942   */\n      tag_569\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":4879:4942   */\n      swap3\n      pop\n        /* \"#utility.yul\":4834:4952   */\n      pop\n        /* \"#utility.yul\":4991:4993   */\n      0x40\n        /* \"#utility.yul\":5017:5070   */\n      tag_710\n        /* \"#utility.yul\":5062:5069   */\n      dup7\n        /* \"#utility.yul\":5053:5059   */\n      dup3\n        /* \"#utility.yul\":5042:5051   */\n      dup8\n        /* \"#utility.yul\":5038:5060   */\n      add\n        /* \"#utility.yul\":5017:5070   */\n      tag_572\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":5007:5070   */\n      swap2\n      pop\n        /* \"#utility.yul\":4962:5080   */\n      pop\n        /* \"#utility.yul\":4468:5087   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5093:5179   */\n    tag_576:\n        /* \"#utility.yul\":5128:5135   */\n      0x00\n        /* \"#utility.yul\":5168:5172   */\n      0xff\n        /* \"#utility.yul\":5161:5166   */\n      dup3\n        /* \"#utility.yul\":5157:5173   */\n      and\n        /* \"#utility.yul\":5146:5173   */\n      swap1\n      pop\n        /* \"#utility.yul\":5093:5179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5185:5297   */\n    tag_577:\n        /* \"#utility.yul\":5268:5290   */\n      tag_713\n        /* \"#utility.yul\":5284:5289   */\n      dup2\n        /* \"#utility.yul\":5268:5290   */\n      tag_576\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":5263:5266   */\n      dup3\n        /* \"#utility.yul\":5256:5291   */\n      mstore\n        /* \"#utility.yul\":5185:5297   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5303:5517   */\n    tag_86:\n        /* \"#utility.yul\":5392:5396   */\n      0x00\n        /* \"#utility.yul\":5430:5432   */\n      0x20\n        /* \"#utility.yul\":5419:5428   */\n      dup3\n        /* \"#utility.yul\":5415:5433   */\n      add\n        /* \"#utility.yul\":5407:5433   */\n      swap1\n      pop\n        /* \"#utility.yul\":5443:5510   */\n      tag_715\n        /* \"#utility.yul\":5507:5508   */\n      0x00\n        /* \"#utility.yul\":5496:5505   */\n      dup4\n        /* \"#utility.yul\":5492:5509   */\n      add\n        /* \"#utility.yul\":5483:5489   */\n      dup5\n        /* \"#utility.yul\":5443:5510   */\n      tag_577\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":5303:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_578:\n        /* \"#utility.yul\":5610:5634   */\n      tag_717\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_567\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_90:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_719\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_578\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:5992   */\n    tag_579:\n        /* \"#utility.yul\":5984:5985   */\n      0x00\n        /* \"#utility.yul\":5981:5982   */\n      dup1\n        /* \"#utility.yul\":5974:5986   */\n      revert\n        /* \"#utility.yul\":5998:6178   */\n    tag_580:\n        /* \"#utility.yul\":6046:6123   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6043:6044   */\n      0x00\n        /* \"#utility.yul\":6036:6124   */\n      mstore\n        /* \"#utility.yul\":6143:6147   */\n      0x41\n        /* \"#utility.yul\":6140:6141   */\n      0x04\n        /* \"#utility.yul\":6133:6148   */\n      mstore\n        /* \"#utility.yul\":6167:6171   */\n      0x24\n        /* \"#utility.yul\":6164:6165   */\n      0x00\n        /* \"#utility.yul\":6157:6172   */\n      revert\n        /* \"#utility.yul\":6184:6465   */\n    tag_581:\n        /* \"#utility.yul\":6267:6294   */\n      tag_723\n        /* \"#utility.yul\":6289:6293   */\n      dup3\n        /* \"#utility.yul\":6267:6294   */\n      tag_561\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":6259:6265   */\n      dup2\n        /* \"#utility.yul\":6255:6295   */\n      add\n        /* \"#utility.yul\":6397:6403   */\n      dup2\n        /* \"#utility.yul\":6385:6395   */\n      dup2\n        /* \"#utility.yul\":6382:6404   */\n      lt\n        /* \"#utility.yul\":6361:6379   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6349:6359   */\n      dup3\n        /* \"#utility.yul\":6346:6380   */\n      gt\n        /* \"#utility.yul\":6343:6405   */\n      or\n        /* \"#utility.yul\":6340:6428   */\n      iszero\n      tag_724\n      jumpi\n        /* \"#utility.yul\":6408:6426   */\n      tag_725\n      tag_580\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":6340:6428   */\n    tag_724:\n        /* \"#utility.yul\":6448:6458   */\n      dup1\n        /* \"#utility.yul\":6444:6446   */\n      0x40\n        /* \"#utility.yul\":6437:6459   */\n      mstore\n        /* \"#utility.yul\":6227:6465   */\n      pop\n        /* \"#utility.yul\":6184:6465   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6600   */\n    tag_582:\n        /* \"#utility.yul\":6505:6511   */\n      0x00\n        /* \"#utility.yul\":6532:6552   */\n      tag_727\n      tag_563\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":6522:6552   */\n      swap1\n      pop\n        /* \"#utility.yul\":6561:6594   */\n      tag_728\n        /* \"#utility.yul\":6589:6593   */\n      dup3\n        /* \"#utility.yul\":6581:6587   */\n      dup3\n        /* \"#utility.yul\":6561:6594   */\n      tag_581\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":6471:6600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6606:6855   */\n    tag_583:\n        /* \"#utility.yul\":6681:6685   */\n      0x00\n        /* \"#utility.yul\":6771:6789   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6763:6769   */\n      dup3\n        /* \"#utility.yul\":6760:6790   */\n      gt\n        /* \"#utility.yul\":6757:6813   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":6793:6811   */\n      tag_731\n      tag_580\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":6757:6813   */\n    tag_730:\n        /* \"#utility.yul\":6843:6847   */\n      0x20\n        /* \"#utility.yul\":6835:6841   */\n      dup3\n        /* \"#utility.yul\":6831:6848   */\n      mul\n        /* \"#utility.yul\":6823:6848   */\n      swap1\n      pop\n        /* \"#utility.yul\":6606:6855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6861:6978   */\n    tag_584:\n        /* \"#utility.yul\":6970:6971   */\n      0x00\n        /* \"#utility.yul\":6967:6968   */\n      dup1\n        /* \"#utility.yul\":6960:6972   */\n      revert\n        /* \"#utility.yul\":7002:7645   */\n    tag_585:\n        /* \"#utility.yul\":7096:7101   */\n      0x00\n        /* \"#utility.yul\":7121:7200   */\n      tag_734\n        /* \"#utility.yul\":7137:7199   */\n      tag_735\n        /* \"#utility.yul\":7192:7198   */\n      dup5\n        /* \"#utility.yul\":7137:7199   */\n      tag_583\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":7121:7200   */\n      tag_582\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":7112:7200   */\n      swap1\n      pop\n        /* \"#utility.yul\":7220:7225   */\n      dup1\n        /* \"#utility.yul\":7273:7277   */\n      0x20\n        /* \"#utility.yul\":7265:7271   */\n      dup5\n        /* \"#utility.yul\":7261:7278   */\n      mul\n        /* \"#utility.yul\":7253:7259   */\n      dup4\n        /* \"#utility.yul\":7249:7279   */\n      add\n        /* \"#utility.yul\":7302:7305   */\n      dup6\n        /* \"#utility.yul\":7294:7300   */\n      dup2\n        /* \"#utility.yul\":7291:7306   */\n      gt\n        /* \"#utility.yul\":7288:7410   */\n      iszero\n      tag_736\n      jumpi\n        /* \"#utility.yul\":7321:7400   */\n      tag_737\n      tag_584\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":7288:7410   */\n    tag_736:\n        /* \"#utility.yul\":7436:7442   */\n      dup4\n        /* \"#utility.yul\":7419:7639   */\n    tag_738:\n        /* \"#utility.yul\":7453:7459   */\n      dup2\n        /* \"#utility.yul\":7448:7451   */\n      dup2\n        /* \"#utility.yul\":7445:7460   */\n      lt\n        /* \"#utility.yul\":7419:7639   */\n      iszero\n      tag_740\n      jumpi\n        /* \"#utility.yul\":7528:7531   */\n      dup1\n        /* \"#utility.yul\":7557:7594   */\n      tag_741\n        /* \"#utility.yul\":7590:7593   */\n      dup9\n        /* \"#utility.yul\":7578:7588   */\n      dup3\n        /* \"#utility.yul\":7557:7594   */\n      tag_572\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":7552:7555   */\n      dup5\n        /* \"#utility.yul\":7545:7595   */\n      mstore\n        /* \"#utility.yul\":7624:7628   */\n      0x20\n        /* \"#utility.yul\":7619:7622   */\n      dup5\n        /* \"#utility.yul\":7615:7629   */\n      add\n        /* \"#utility.yul\":7608:7629   */\n      swap4\n      pop\n        /* \"#utility.yul\":7495:7639   */\n      pop\n        /* \"#utility.yul\":7479:7483   */\n      0x20\n        /* \"#utility.yul\":7474:7477   */\n      dup2\n        /* \"#utility.yul\":7470:7484   */\n      add\n        /* \"#utility.yul\":7463:7484   */\n      swap1\n      pop\n        /* \"#utility.yul\":7419:7639   */\n      jump(tag_738)\n    tag_740:\n        /* \"#utility.yul\":7423:7444   */\n      pop\n        /* \"#utility.yul\":7102:7645   */\n      pop\n      pop\n        /* \"#utility.yul\":7002:7645   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7669:8008   */\n    tag_586:\n        /* \"#utility.yul\":7738:7743   */\n      0x00\n        /* \"#utility.yul\":7787:7790   */\n      dup3\n        /* \"#utility.yul\":7780:7784   */\n      0x1f\n        /* \"#utility.yul\":7772:7778   */\n      dup4\n        /* \"#utility.yul\":7768:7785   */\n      add\n        /* \"#utility.yul\":7764:7791   */\n      slt\n        /* \"#utility.yul\":7754:7876   */\n      tag_743\n      jumpi\n        /* \"#utility.yul\":7795:7874   */\n      tag_744\n      tag_579\n      jump\t// in\n    tag_744:\n        /* \"#utility.yul\":7754:7876   */\n    tag_743:\n        /* \"#utility.yul\":7899:7903   */\n      0x05\n        /* \"#utility.yul\":7921:8002   */\n      tag_745\n        /* \"#utility.yul\":7998:8001   */\n      dup5\n        /* \"#utility.yul\":7990:7996   */\n      dup3\n        /* \"#utility.yul\":7982:7988   */\n      dup6\n        /* \"#utility.yul\":7921:8002   */\n      tag_585\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":7912:8002   */\n      swap2\n      pop\n        /* \"#utility.yul\":7744:8008   */\n      pop\n        /* \"#utility.yul\":7669:8008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8014:8582   */\n    tag_104:\n        /* \"#utility.yul\":8128:8134   */\n      0x00\n        /* \"#utility.yul\":8136:8142   */\n      dup1\n        /* \"#utility.yul\":8185:8188   */\n      0x0140\n        /* \"#utility.yul\":8173:8182   */\n      dup4\n        /* \"#utility.yul\":8164:8171   */\n      dup6\n        /* \"#utility.yul\":8160:8183   */\n      sub\n        /* \"#utility.yul\":8156:8189   */\n      slt\n        /* \"#utility.yul\":8153:8273   */\n      iszero\n      tag_747\n      jumpi\n        /* \"#utility.yul\":8192:8271   */\n      tag_748\n      tag_564\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":8153:8273   */\n    tag_747:\n        /* \"#utility.yul\":8312:8313   */\n      0x00\n        /* \"#utility.yul\":8337:8413   */\n      tag_749\n        /* \"#utility.yul\":8405:8412   */\n      dup6\n        /* \"#utility.yul\":8396:8402   */\n      dup3\n        /* \"#utility.yul\":8385:8394   */\n      dup7\n        /* \"#utility.yul\":8381:8403   */\n      add\n        /* \"#utility.yul\":8337:8413   */\n      tag_586\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":8327:8413   */\n      swap3\n      pop\n        /* \"#utility.yul\":8283:8423   */\n      pop\n        /* \"#utility.yul\":8462:8465   */\n      0xa0\n        /* \"#utility.yul\":8489:8565   */\n      tag_750\n        /* \"#utility.yul\":8557:8564   */\n      dup6\n        /* \"#utility.yul\":8548:8554   */\n      dup3\n        /* \"#utility.yul\":8537:8546   */\n      dup7\n        /* \"#utility.yul\":8533:8555   */\n      add\n        /* \"#utility.yul\":8489:8565   */\n      tag_586\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":8479:8565   */\n      swap2\n      pop\n        /* \"#utility.yul\":8433:8575   */\n      pop\n        /* \"#utility.yul\":8014:8582   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8588:8704   */\n    tag_587:\n        /* \"#utility.yul\":8658:8679   */\n      tag_752\n        /* \"#utility.yul\":8673:8678   */\n      dup2\n        /* \"#utility.yul\":8658:8679   */\n      tag_573\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":8651:8656   */\n      dup2\n        /* \"#utility.yul\":8648:8680   */\n      eq\n        /* \"#utility.yul\":8638:8698   */\n      tag_753\n      jumpi\n        /* \"#utility.yul\":8694:8695   */\n      0x00\n        /* \"#utility.yul\":8691:8692   */\n      dup1\n        /* \"#utility.yul\":8684:8696   */\n      revert\n        /* \"#utility.yul\":8638:8698   */\n    tag_753:\n        /* \"#utility.yul\":8588:8704   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8710:8843   */\n    tag_588:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8791:8797   */\n      dup2\n        /* \"#utility.yul\":8778:8798   */\n      calldataload\n        /* \"#utility.yul\":8769:8798   */\n      swap1\n      pop\n        /* \"#utility.yul\":8807:8837   */\n      tag_755\n        /* \"#utility.yul\":8831:8836   */\n      dup2\n        /* \"#utility.yul\":8807:8837   */\n      tag_587\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":8710:8843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8849:9317   */\n    tag_152:\n        /* \"#utility.yul\":8914:8920   */\n      0x00\n        /* \"#utility.yul\":8922:8928   */\n      dup1\n        /* \"#utility.yul\":8971:8973   */\n      0x40\n        /* \"#utility.yul\":8959:8968   */\n      dup4\n        /* \"#utility.yul\":8950:8957   */\n      dup6\n        /* \"#utility.yul\":8946:8969   */\n      sub\n        /* \"#utility.yul\":8942:8974   */\n      slt\n        /* \"#utility.yul\":8939:9058   */\n      iszero\n      tag_757\n      jumpi\n        /* \"#utility.yul\":8977:9056   */\n      tag_758\n      tag_564\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":8939:9058   */\n    tag_757:\n        /* \"#utility.yul\":9097:9098   */\n      0x00\n        /* \"#utility.yul\":9122:9175   */\n      tag_759\n        /* \"#utility.yul\":9167:9174   */\n      dup6\n        /* \"#utility.yul\":9158:9164   */\n      dup3\n        /* \"#utility.yul\":9147:9156   */\n      dup7\n        /* \"#utility.yul\":9143:9165   */\n      add\n        /* \"#utility.yul\":9122:9175   */\n      tag_569\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":9112:9175   */\n      swap3\n      pop\n        /* \"#utility.yul\":9068:9185   */\n      pop\n        /* \"#utility.yul\":9224:9226   */\n      0x20\n        /* \"#utility.yul\":9250:9300   */\n      tag_760\n        /* \"#utility.yul\":9292:9299   */\n      dup6\n        /* \"#utility.yul\":9283:9289   */\n      dup3\n        /* \"#utility.yul\":9272:9281   */\n      dup7\n        /* \"#utility.yul\":9268:9290   */\n      add\n        /* \"#utility.yul\":9250:9300   */\n      tag_588\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":9240:9300   */\n      swap2\n      pop\n        /* \"#utility.yul\":9195:9310   */\n      pop\n        /* \"#utility.yul\":8849:9317   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9323:9440   */\n    tag_589:\n        /* \"#utility.yul\":9432:9433   */\n      0x00\n        /* \"#utility.yul\":9429:9430   */\n      dup1\n        /* \"#utility.yul\":9422:9434   */\n      revert\n        /* \"#utility.yul\":9446:9754   */\n    tag_590:\n        /* \"#utility.yul\":9508:9512   */\n      0x00\n        /* \"#utility.yul\":9598:9616   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9590:9596   */\n      dup3\n        /* \"#utility.yul\":9587:9617   */\n      gt\n        /* \"#utility.yul\":9584:9640   */\n      iszero\n      tag_763\n      jumpi\n        /* \"#utility.yul\":9620:9638   */\n      tag_764\n      tag_580\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":9584:9640   */\n    tag_763:\n        /* \"#utility.yul\":9658:9687   */\n      tag_765\n        /* \"#utility.yul\":9680:9686   */\n      dup3\n        /* \"#utility.yul\":9658:9687   */\n      tag_561\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":9650:9687   */\n      swap1\n      pop\n        /* \"#utility.yul\":9742:9746   */\n      0x20\n        /* \"#utility.yul\":9736:9740   */\n      dup2\n        /* \"#utility.yul\":9732:9747   */\n      add\n        /* \"#utility.yul\":9724:9747   */\n      swap1\n      pop\n        /* \"#utility.yul\":9446:9754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9760:9906   */\n    tag_591:\n        /* \"#utility.yul\":9857:9863   */\n      dup3\n        /* \"#utility.yul\":9852:9855   */\n      dup2\n        /* \"#utility.yul\":9847:9850   */\n      dup4\n        /* \"#utility.yul\":9834:9864   */\n      calldatacopy\n        /* \"#utility.yul\":9898:9899   */\n      0x00\n        /* \"#utility.yul\":9889:9895   */\n      dup4\n        /* \"#utility.yul\":9884:9887   */\n      dup4\n        /* \"#utility.yul\":9880:9896   */\n      add\n        /* \"#utility.yul\":9873:9900   */\n      mstore\n        /* \"#utility.yul\":9760:9906   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9912:10337   */\n    tag_592:\n        /* \"#utility.yul\":9990:9995   */\n      0x00\n        /* \"#utility.yul\":10015:10081   */\n      tag_768\n        /* \"#utility.yul\":10031:10080   */\n      tag_769\n        /* \"#utility.yul\":10073:10079   */\n      dup5\n        /* \"#utility.yul\":10031:10080   */\n      tag_590\n      jump\t// in\n    tag_769:\n        /* \"#utility.yul\":10015:10081   */\n      tag_582\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":10006:10081   */\n      swap1\n      pop\n        /* \"#utility.yul\":10104:10110   */\n      dup3\n        /* \"#utility.yul\":10097:10102   */\n      dup2\n        /* \"#utility.yul\":10090:10111   */\n      mstore\n        /* \"#utility.yul\":10142:10146   */\n      0x20\n        /* \"#utility.yul\":10135:10140   */\n      dup2\n        /* \"#utility.yul\":10131:10147   */\n      add\n        /* \"#utility.yul\":10180:10183   */\n      dup5\n        /* \"#utility.yul\":10171:10177   */\n      dup5\n        /* \"#utility.yul\":10166:10169   */\n      dup5\n        /* \"#utility.yul\":10162:10178   */\n      add\n        /* \"#utility.yul\":10159:10184   */\n      gt\n        /* \"#utility.yul\":10156:10268   */\n      iszero\n      tag_770\n      jumpi\n        /* \"#utility.yul\":10187:10266   */\n      tag_771\n      tag_589\n      jump\t// in\n    tag_771:\n        /* \"#utility.yul\":10156:10268   */\n    tag_770:\n        /* \"#utility.yul\":10277:10331   */\n      tag_772\n        /* \"#utility.yul\":10324:10330   */\n      dup5\n        /* \"#utility.yul\":10319:10322   */\n      dup3\n        /* \"#utility.yul\":10314:10317   */\n      dup6\n        /* \"#utility.yul\":10277:10331   */\n      tag_591\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":9996:10337   */\n      pop\n        /* \"#utility.yul\":9912:10337   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10357:10697   */\n    tag_593:\n        /* \"#utility.yul\":10413:10418   */\n      0x00\n        /* \"#utility.yul\":10462:10465   */\n      dup3\n        /* \"#utility.yul\":10455:10459   */\n      0x1f\n        /* \"#utility.yul\":10447:10453   */\n      dup4\n        /* \"#utility.yul\":10443:10460   */\n      add\n        /* \"#utility.yul\":10439:10466   */\n      slt\n        /* \"#utility.yul\":10429:10551   */\n      tag_774\n      jumpi\n        /* \"#utility.yul\":10470:10549   */\n      tag_775\n      tag_579\n      jump\t// in\n    tag_775:\n        /* \"#utility.yul\":10429:10551   */\n    tag_774:\n        /* \"#utility.yul\":10587:10593   */\n      dup2\n        /* \"#utility.yul\":10574:10594   */\n      calldataload\n        /* \"#utility.yul\":10612:10691   */\n      tag_776\n        /* \"#utility.yul\":10687:10690   */\n      dup5\n        /* \"#utility.yul\":10679:10685   */\n      dup3\n        /* \"#utility.yul\":10672:10676   */\n      0x20\n        /* \"#utility.yul\":10664:10670   */\n      dup7\n        /* \"#utility.yul\":10660:10677   */\n      add\n        /* \"#utility.yul\":10612:10691   */\n      tag_592\n      jump\t// in\n    tag_776:\n        /* \"#utility.yul\":10603:10691   */\n      swap2\n      pop\n        /* \"#utility.yul\":10419:10697   */\n      pop\n        /* \"#utility.yul\":10357:10697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10703:11974   */\n    tag_165:\n        /* \"#utility.yul\":10818:10824   */\n      0x00\n        /* \"#utility.yul\":10826:10832   */\n      dup1\n        /* \"#utility.yul\":10834:10840   */\n      0x00\n        /* \"#utility.yul\":10842:10848   */\n      dup1\n        /* \"#utility.yul\":10850:10856   */\n      0x00\n        /* \"#utility.yul\":10899:10902   */\n      0xa0\n        /* \"#utility.yul\":10887:10896   */\n      dup7\n        /* \"#utility.yul\":10878:10885   */\n      dup9\n        /* \"#utility.yul\":10874:10897   */\n      sub\n        /* \"#utility.yul\":10870:10903   */\n      slt\n        /* \"#utility.yul\":10867:10987   */\n      iszero\n      tag_778\n      jumpi\n        /* \"#utility.yul\":10906:10985   */\n      tag_779\n      tag_564\n      jump\t// in\n    tag_779:\n        /* \"#utility.yul\":10867:10987   */\n    tag_778:\n        /* \"#utility.yul\":11054:11055   */\n      0x00\n        /* \"#utility.yul\":11043:11052   */\n      dup7\n        /* \"#utility.yul\":11039:11056   */\n      add\n        /* \"#utility.yul\":11026:11057   */\n      calldataload\n        /* \"#utility.yul\":11084:11102   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11076:11082   */\n      dup2\n        /* \"#utility.yul\":11073:11103   */\n      gt\n        /* \"#utility.yul\":11070:11187   */\n      iszero\n      tag_780\n      jumpi\n        /* \"#utility.yul\":11106:11185   */\n      tag_781\n      tag_565\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":11070:11187   */\n    tag_780:\n        /* \"#utility.yul\":11211:11274   */\n      tag_782\n        /* \"#utility.yul\":11266:11273   */\n      dup9\n        /* \"#utility.yul\":11257:11263   */\n      dup3\n        /* \"#utility.yul\":11246:11255   */\n      dup10\n        /* \"#utility.yul\":11242:11264   */\n      add\n        /* \"#utility.yul\":11211:11274   */\n      tag_593\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":11201:11274   */\n      swap6\n      pop\n        /* \"#utility.yul\":10997:11284   */\n      pop\n        /* \"#utility.yul\":11351:11353   */\n      0x20\n        /* \"#utility.yul\":11340:11349   */\n      dup7\n        /* \"#utility.yul\":11336:11354   */\n      add\n        /* \"#utility.yul\":11323:11355   */\n      calldataload\n        /* \"#utility.yul\":11382:11400   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11374:11380   */\n      dup2\n        /* \"#utility.yul\":11371:11401   */\n      gt\n        /* \"#utility.yul\":11368:11485   */\n      iszero\n      tag_783\n      jumpi\n        /* \"#utility.yul\":11404:11483   */\n      tag_784\n      tag_565\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":11368:11485   */\n    tag_783:\n        /* \"#utility.yul\":11509:11572   */\n      tag_785\n        /* \"#utility.yul\":11564:11571   */\n      dup9\n        /* \"#utility.yul\":11555:11561   */\n      dup3\n        /* \"#utility.yul\":11544:11553   */\n      dup10\n        /* \"#utility.yul\":11540:11562   */\n      add\n        /* \"#utility.yul\":11509:11572   */\n      tag_593\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":11499:11572   */\n      swap5\n      pop\n        /* \"#utility.yul\":11294:11582   */\n      pop\n        /* \"#utility.yul\":11621:11623   */\n      0x40\n        /* \"#utility.yul\":11647:11700   */\n      tag_786\n        /* \"#utility.yul\":11692:11699   */\n      dup9\n        /* \"#utility.yul\":11683:11689   */\n      dup3\n        /* \"#utility.yul\":11672:11681   */\n      dup10\n        /* \"#utility.yul\":11668:11690   */\n      add\n        /* \"#utility.yul\":11647:11700   */\n      tag_569\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":11637:11700   */\n      swap4\n      pop\n        /* \"#utility.yul\":11592:11710   */\n      pop\n        /* \"#utility.yul\":11749:11751   */\n      0x60\n        /* \"#utility.yul\":11775:11828   */\n      tag_787\n        /* \"#utility.yul\":11820:11827   */\n      dup9\n        /* \"#utility.yul\":11811:11817   */\n      dup3\n        /* \"#utility.yul\":11800:11809   */\n      dup10\n        /* \"#utility.yul\":11796:11818   */\n      add\n        /* \"#utility.yul\":11775:11828   */\n      tag_569\n      jump\t// in\n    tag_787:\n        /* \"#utility.yul\":11765:11828   */\n      swap3\n      pop\n        /* \"#utility.yul\":11720:11838   */\n      pop\n        /* \"#utility.yul\":11877:11880   */\n      0x80\n        /* \"#utility.yul\":11904:11957   */\n      tag_788\n        /* \"#utility.yul\":11949:11956   */\n      dup9\n        /* \"#utility.yul\":11940:11946   */\n      dup3\n        /* \"#utility.yul\":11929:11938   */\n      dup10\n        /* \"#utility.yul\":11925:11947   */\n      add\n        /* \"#utility.yul\":11904:11957   */\n      tag_569\n      jump\t// in\n    tag_788:\n        /* \"#utility.yul\":11894:11957   */\n      swap2\n      pop\n        /* \"#utility.yul\":11848:11967   */\n      pop\n        /* \"#utility.yul\":10703:11974   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11980:12454   */\n    tag_169:\n        /* \"#utility.yul\":12048:12054   */\n      0x00\n        /* \"#utility.yul\":12056:12062   */\n      dup1\n        /* \"#utility.yul\":12105:12107   */\n      0x40\n        /* \"#utility.yul\":12093:12102   */\n      dup4\n        /* \"#utility.yul\":12084:12091   */\n      dup6\n        /* \"#utility.yul\":12080:12103   */\n      sub\n        /* \"#utility.yul\":12076:12108   */\n      slt\n        /* \"#utility.yul\":12073:12192   */\n      iszero\n      tag_790\n      jumpi\n        /* \"#utility.yul\":12111:12190   */\n      tag_791\n      tag_564\n      jump\t// in\n    tag_791:\n        /* \"#utility.yul\":12073:12192   */\n    tag_790:\n        /* \"#utility.yul\":12231:12232   */\n      0x00\n        /* \"#utility.yul\":12256:12309   */\n      tag_792\n        /* \"#utility.yul\":12301:12308   */\n      dup6\n        /* \"#utility.yul\":12292:12298   */\n      dup3\n        /* \"#utility.yul\":12281:12290   */\n      dup7\n        /* \"#utility.yul\":12277:12299   */\n      add\n        /* \"#utility.yul\":12256:12309   */\n      tag_569\n      jump\t// in\n    tag_792:\n        /* \"#utility.yul\":12246:12309   */\n      swap3\n      pop\n        /* \"#utility.yul\":12202:12319   */\n      pop\n        /* \"#utility.yul\":12358:12360   */\n      0x20\n        /* \"#utility.yul\":12384:12437   */\n      tag_793\n        /* \"#utility.yul\":12429:12436   */\n      dup6\n        /* \"#utility.yul\":12420:12426   */\n      dup3\n        /* \"#utility.yul\":12409:12418   */\n      dup7\n        /* \"#utility.yul\":12405:12427   */\n      add\n        /* \"#utility.yul\":12384:12437   */\n      tag_569\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":12374:12437   */\n      swap2\n      pop\n        /* \"#utility.yul\":12329:12447   */\n      pop\n        /* \"#utility.yul\":11980:12454   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12460:13067   */\n    tag_174:\n        /* \"#utility.yul\":12531:12537   */\n      0x00\n        /* \"#utility.yul\":12539:12545   */\n      dup1\n        /* \"#utility.yul\":12547:12553   */\n      0x00\n        /* \"#utility.yul\":12596:12598   */\n      0x60\n        /* \"#utility.yul\":12584:12593   */\n      dup5\n        /* \"#utility.yul\":12575:12582   */\n      dup7\n        /* \"#utility.yul\":12571:12594   */\n      sub\n        /* \"#utility.yul\":12567:12599   */\n      slt\n        /* \"#utility.yul\":12564:12683   */\n      iszero\n      tag_795\n      jumpi\n        /* \"#utility.yul\":12602:12681   */\n      tag_796\n      tag_564\n      jump\t// in\n    tag_796:\n        /* \"#utility.yul\":12564:12683   */\n    tag_795:\n        /* \"#utility.yul\":12722:12723   */\n      0x00\n        /* \"#utility.yul\":12747:12800   */\n      tag_797\n        /* \"#utility.yul\":12792:12799   */\n      dup7\n        /* \"#utility.yul\":12783:12789   */\n      dup3\n        /* \"#utility.yul\":12772:12781   */\n      dup8\n        /* \"#utility.yul\":12768:12790   */\n      add\n        /* \"#utility.yul\":12747:12800   */\n      tag_569\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":12737:12800   */\n      swap4\n      pop\n        /* \"#utility.yul\":12693:12810   */\n      pop\n        /* \"#utility.yul\":12849:12851   */\n      0x20\n        /* \"#utility.yul\":12875:12925   */\n      tag_798\n        /* \"#utility.yul\":12917:12924   */\n      dup7\n        /* \"#utility.yul\":12908:12914   */\n      dup3\n        /* \"#utility.yul\":12897:12906   */\n      dup8\n        /* \"#utility.yul\":12893:12915   */\n      add\n        /* \"#utility.yul\":12875:12925   */\n      tag_588\n      jump\t// in\n    tag_798:\n        /* \"#utility.yul\":12865:12925   */\n      swap3\n      pop\n        /* \"#utility.yul\":12820:12935   */\n      pop\n        /* \"#utility.yul\":12974:12976   */\n      0x40\n        /* \"#utility.yul\":13000:13050   */\n      tag_799\n        /* \"#utility.yul\":13042:13049   */\n      dup7\n        /* \"#utility.yul\":13033:13039   */\n      dup3\n        /* \"#utility.yul\":13022:13031   */\n      dup8\n        /* \"#utility.yul\":13018:13040   */\n      add\n        /* \"#utility.yul\":13000:13050   */\n      tag_588\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":12990:13050   */\n      swap2\n      pop\n        /* \"#utility.yul\":12945:13060   */\n      pop\n        /* \"#utility.yul\":12460:13067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":13073:13253   */\n    tag_594:\n        /* \"#utility.yul\":13121:13198   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13118:13119   */\n      0x00\n        /* \"#utility.yul\":13111:13199   */\n      mstore\n        /* \"#utility.yul\":13218:13222   */\n      0x22\n        /* \"#utility.yul\":13215:13216   */\n      0x04\n        /* \"#utility.yul\":13208:13223   */\n      mstore\n        /* \"#utility.yul\":13242:13246   */\n      0x24\n        /* \"#utility.yul\":13239:13240   */\n      0x00\n        /* \"#utility.yul\":13232:13247   */\n      revert\n        /* \"#utility.yul\":13259:13579   */\n    tag_190:\n        /* \"#utility.yul\":13303:13309   */\n      0x00\n        /* \"#utility.yul\":13340:13341   */\n      0x02\n        /* \"#utility.yul\":13334:13338   */\n      dup3\n        /* \"#utility.yul\":13330:13342   */\n      div\n        /* \"#utility.yul\":13320:13342   */\n      swap1\n      pop\n        /* \"#utility.yul\":13387:13388   */\n      0x01\n        /* \"#utility.yul\":13381:13385   */\n      dup3\n        /* \"#utility.yul\":13377:13389   */\n      and\n        /* \"#utility.yul\":13408:13426   */\n      dup1\n        /* \"#utility.yul\":13398:13479   */\n      tag_802\n      jumpi\n        /* \"#utility.yul\":13464:13468   */\n      0x7f\n        /* \"#utility.yul\":13456:13462   */\n      dup3\n        /* \"#utility.yul\":13452:13469   */\n      and\n        /* \"#utility.yul\":13442:13469   */\n      swap2\n      pop\n        /* \"#utility.yul\":13398:13479   */\n    tag_802:\n        /* \"#utility.yul\":13526:13528   */\n      0x20\n        /* \"#utility.yul\":13518:13524   */\n      dup3\n        /* \"#utility.yul\":13515:13529   */\n      lt\n        /* \"#utility.yul\":13495:13513   */\n      dup2\n        /* \"#utility.yul\":13492:13530   */\n      sub\n        /* \"#utility.yul\":13489:13573   */\n      tag_803\n      jumpi\n        /* \"#utility.yul\":13545:13563   */\n      tag_804\n      tag_594\n      jump\t// in\n    tag_804:\n        /* \"#utility.yul\":13489:13573   */\n    tag_803:\n        /* \"#utility.yul\":13310:13579   */\n      pop\n        /* \"#utility.yul\":13259:13579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13585:13814   */\n    tag_595:\n        /* \"#utility.yul\":13725:13759   */\n      0x474946543a204e65772061646d696e2063616e6e6f7420626520746865207a65\n        /* \"#utility.yul\":13721:13722   */\n      0x00\n        /* \"#utility.yul\":13713:13719   */\n      dup3\n        /* \"#utility.yul\":13709:13723   */\n      add\n        /* \"#utility.yul\":13702:13760   */\n      mstore\n        /* \"#utility.yul\":13794:13806   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13789:13791   */\n      0x20\n        /* \"#utility.yul\":13781:13787   */\n      dup3\n        /* \"#utility.yul\":13777:13792   */\n      add\n        /* \"#utility.yul\":13770:13807   */\n      mstore\n        /* \"#utility.yul\":13585:13814   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13820:14186   */\n    tag_596:\n        /* \"#utility.yul\":13962:13965   */\n      0x00\n        /* \"#utility.yul\":13983:14050   */\n      tag_807\n        /* \"#utility.yul\":14047:14049   */\n      0x2a\n        /* \"#utility.yul\":14042:14045   */\n      dup4\n        /* \"#utility.yul\":13983:14050   */\n      tag_559\n      jump\t// in\n    tag_807:\n        /* \"#utility.yul\":13976:14050   */\n      swap2\n      pop\n        /* \"#utility.yul\":14059:14152   */\n      tag_808\n        /* \"#utility.yul\":14148:14151   */\n      dup3\n        /* \"#utility.yul\":14059:14152   */\n      tag_595\n      jump\t// in\n    tag_808:\n        /* \"#utility.yul\":14177:14179   */\n      0x40\n        /* \"#utility.yul\":14172:14175   */\n      dup3\n        /* \"#utility.yul\":14168:14180   */\n      add\n        /* \"#utility.yul\":14161:14180   */\n      swap1\n      pop\n        /* \"#utility.yul\":13820:14186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14192:14611   */\n    tag_210:\n        /* \"#utility.yul\":14358:14362   */\n      0x00\n        /* \"#utility.yul\":14396:14398   */\n      0x20\n        /* \"#utility.yul\":14385:14394   */\n      dup3\n        /* \"#utility.yul\":14381:14399   */\n      add\n        /* \"#utility.yul\":14373:14399   */\n      swap1\n      pop\n        /* \"#utility.yul\":14445:14454   */\n      dup2\n        /* \"#utility.yul\":14439:14443   */\n      dup2\n        /* \"#utility.yul\":14435:14455   */\n      sub\n        /* \"#utility.yul\":14431:14432   */\n      0x00\n        /* \"#utility.yul\":14420:14429   */\n      dup4\n        /* \"#utility.yul\":14416:14433   */\n      add\n        /* \"#utility.yul\":14409:14456   */\n      mstore\n        /* \"#utility.yul\":14473:14604   */\n      tag_810\n        /* \"#utility.yul\":14599:14603   */\n      dup2\n        /* \"#utility.yul\":14473:14604   */\n      tag_596\n      jump\t// in\n    tag_810:\n        /* \"#utility.yul\":14465:14604   */\n      swap1\n      pop\n        /* \"#utility.yul\":14192:14611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14617:14843   */\n    tag_597:\n        /* \"#utility.yul\":14757:14791   */\n      0x474946543a207472616e7366657220616d6f756e74206578636565647320616c\n        /* \"#utility.yul\":14753:14754   */\n      0x00\n        /* \"#utility.yul\":14745:14751   */\n      dup3\n        /* \"#utility.yul\":14741:14755   */\n      add\n        /* \"#utility.yul\":14734:14792   */\n      mstore\n        /* \"#utility.yul\":14826:14835   */\n      0x6c6f77616e636500000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14821:14823   */\n      0x20\n        /* \"#utility.yul\":14813:14819   */\n      dup3\n        /* \"#utility.yul\":14809:14824   */\n      add\n        /* \"#utility.yul\":14802:14836   */\n      mstore\n        /* \"#utility.yul\":14617:14843   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14849:15215   */\n    tag_598:\n        /* \"#utility.yul\":14991:14994   */\n      0x00\n        /* \"#utility.yul\":15012:15079   */\n      tag_813\n        /* \"#utility.yul\":15076:15078   */\n      0x27\n        /* \"#utility.yul\":15071:15074   */\n      dup4\n        /* \"#utility.yul\":15012:15079   */\n      tag_559\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":15005:15079   */\n      swap2\n      pop\n        /* \"#utility.yul\":15088:15181   */\n      tag_814\n        /* \"#utility.yul\":15177:15180   */\n      dup3\n        /* \"#utility.yul\":15088:15181   */\n      tag_597\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":15206:15208   */\n      0x40\n        /* \"#utility.yul\":15201:15204   */\n      dup3\n        /* \"#utility.yul\":15197:15209   */\n      add\n        /* \"#utility.yul\":15190:15209   */\n      swap1\n      pop\n        /* \"#utility.yul\":14849:15215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15221:15640   */\n    tag_229:\n        /* \"#utility.yul\":15387:15391   */\n      0x00\n        /* \"#utility.yul\":15425:15427   */\n      0x20\n        /* \"#utility.yul\":15414:15423   */\n      dup3\n        /* \"#utility.yul\":15410:15428   */\n      add\n        /* \"#utility.yul\":15402:15428   */\n      swap1\n      pop\n        /* \"#utility.yul\":15474:15483   */\n      dup2\n        /* \"#utility.yul\":15468:15472   */\n      dup2\n        /* \"#utility.yul\":15464:15484   */\n      sub\n        /* \"#utility.yul\":15460:15461   */\n      0x00\n        /* \"#utility.yul\":15449:15458   */\n      dup4\n        /* \"#utility.yul\":15445:15462   */\n      add\n        /* \"#utility.yul\":15438:15485   */\n      mstore\n        /* \"#utility.yul\":15502:15633   */\n      tag_816\n        /* \"#utility.yul\":15628:15632   */\n      dup2\n        /* \"#utility.yul\":15502:15633   */\n      tag_598\n      jump\t// in\n    tag_816:\n        /* \"#utility.yul\":15494:15633   */\n      swap1\n      pop\n        /* \"#utility.yul\":15221:15640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15646:15873   */\n    tag_599:\n        /* \"#utility.yul\":15786:15820   */\n      0x474946543a2063616c6c6572206973206e6f742074686520737570706c79436f\n        /* \"#utility.yul\":15782:15783   */\n      0x00\n        /* \"#utility.yul\":15774:15780   */\n      dup3\n        /* \"#utility.yul\":15770:15784   */\n      add\n        /* \"#utility.yul\":15763:15821   */\n      mstore\n        /* \"#utility.yul\":15855:15865   */\n      0x6e74726f6c6c6572000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15850:15852   */\n      0x20\n        /* \"#utility.yul\":15842:15848   */\n      dup3\n        /* \"#utility.yul\":15838:15853   */\n      add\n        /* \"#utility.yul\":15831:15866   */\n      mstore\n        /* \"#utility.yul\":15646:15873   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15879:16245   */\n    tag_600:\n        /* \"#utility.yul\":16021:16024   */\n      0x00\n        /* \"#utility.yul\":16042:16109   */\n      tag_819\n        /* \"#utility.yul\":16106:16108   */\n      0x28\n        /* \"#utility.yul\":16101:16104   */\n      dup4\n        /* \"#utility.yul\":16042:16109   */\n      tag_559\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":16035:16109   */\n      swap2\n      pop\n        /* \"#utility.yul\":16118:16211   */\n      tag_820\n        /* \"#utility.yul\":16207:16210   */\n      dup3\n        /* \"#utility.yul\":16118:16211   */\n      tag_599\n      jump\t// in\n    tag_820:\n        /* \"#utility.yul\":16236:16238   */\n      0x40\n        /* \"#utility.yul\":16231:16234   */\n      dup3\n        /* \"#utility.yul\":16227:16239   */\n      add\n        /* \"#utility.yul\":16220:16239   */\n      swap1\n      pop\n        /* \"#utility.yul\":15879:16245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16251:16670   */\n    tag_243:\n        /* \"#utility.yul\":16417:16421   */\n      0x00\n        /* \"#utility.yul\":16455:16457   */\n      0x20\n        /* \"#utility.yul\":16444:16453   */\n      dup3\n        /* \"#utility.yul\":16440:16458   */\n      add\n        /* \"#utility.yul\":16432:16458   */\n      swap1\n      pop\n        /* \"#utility.yul\":16504:16513   */\n      dup2\n        /* \"#utility.yul\":16498:16502   */\n      dup2\n        /* \"#utility.yul\":16494:16514   */\n      sub\n        /* \"#utility.yul\":16490:16491   */\n      0x00\n        /* \"#utility.yul\":16479:16488   */\n      dup4\n        /* \"#utility.yul\":16475:16492   */\n      add\n        /* \"#utility.yul\":16468:16515   */\n      mstore\n        /* \"#utility.yul\":16532:16663   */\n      tag_822\n        /* \"#utility.yul\":16658:16662   */\n      dup2\n        /* \"#utility.yul\":16532:16663   */\n      tag_600\n      jump\t// in\n    tag_822:\n        /* \"#utility.yul\":16524:16663   */\n      swap1\n      pop\n        /* \"#utility.yul\":16251:16670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16676:16856   */\n    tag_262:\n        /* \"#utility.yul\":16724:16801   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16721:16722   */\n      0x00\n        /* \"#utility.yul\":16714:16802   */\n      mstore\n        /* \"#utility.yul\":16821:16825   */\n      0x32\n        /* \"#utility.yul\":16818:16819   */\n      0x04\n        /* \"#utility.yul\":16811:16826   */\n      mstore\n        /* \"#utility.yul\":16845:16849   */\n      0x24\n        /* \"#utility.yul\":16842:16843   */\n      0x00\n        /* \"#utility.yul\":16835:16850   */\n      revert\n        /* \"#utility.yul\":16862:17039   */\n    tag_601:\n        /* \"#utility.yul\":17002:17031   */\n      0x474946543a204c6173742074696572206d757374206265206d61780000000000\n        /* \"#utility.yul\":16998:16999   */\n      0x00\n        /* \"#utility.yul\":16990:16996   */\n      dup3\n        /* \"#utility.yul\":16986:17000   */\n      add\n        /* \"#utility.yul\":16979:17032   */\n      mstore\n        /* \"#utility.yul\":16862:17039   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17045:17411   */\n    tag_602:\n        /* \"#utility.yul\":17187:17190   */\n      0x00\n        /* \"#utility.yul\":17208:17275   */\n      tag_826\n        /* \"#utility.yul\":17272:17274   */\n      0x1b\n        /* \"#utility.yul\":17267:17270   */\n      dup4\n        /* \"#utility.yul\":17208:17275   */\n      tag_559\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":17201:17275   */\n      swap2\n      pop\n        /* \"#utility.yul\":17284:17377   */\n      tag_827\n        /* \"#utility.yul\":17373:17376   */\n      dup3\n        /* \"#utility.yul\":17284:17377   */\n      tag_601\n      jump\t// in\n    tag_827:\n        /* \"#utility.yul\":17402:17404   */\n      0x20\n        /* \"#utility.yul\":17397:17400   */\n      dup3\n        /* \"#utility.yul\":17393:17405   */\n      add\n        /* \"#utility.yul\":17386:17405   */\n      swap1\n      pop\n        /* \"#utility.yul\":17045:17411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17417:17836   */\n    tag_265:\n        /* \"#utility.yul\":17583:17587   */\n      0x00\n        /* \"#utility.yul\":17621:17623   */\n      0x20\n        /* \"#utility.yul\":17610:17619   */\n      dup3\n        /* \"#utility.yul\":17606:17624   */\n      add\n        /* \"#utility.yul\":17598:17624   */\n      swap1\n      pop\n        /* \"#utility.yul\":17670:17679   */\n      dup2\n        /* \"#utility.yul\":17664:17668   */\n      dup2\n        /* \"#utility.yul\":17660:17680   */\n      sub\n        /* \"#utility.yul\":17656:17657   */\n      0x00\n        /* \"#utility.yul\":17645:17654   */\n      dup4\n        /* \"#utility.yul\":17641:17658   */\n      add\n        /* \"#utility.yul\":17634:17681   */\n      mstore\n        /* \"#utility.yul\":17698:17829   */\n      tag_829\n        /* \"#utility.yul\":17824:17828   */\n      dup2\n        /* \"#utility.yul\":17698:17829   */\n      tag_602\n      jump\t// in\n    tag_829:\n        /* \"#utility.yul\":17690:17829   */\n      swap1\n      pop\n        /* \"#utility.yul\":17417:17836   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17842:18021   */\n    tag_603:\n        /* \"#utility.yul\":17982:18013   */\n      0x474946543a205461782070657263656e7461676520746f6f2068696768000000\n        /* \"#utility.yul\":17978:17979   */\n      0x00\n        /* \"#utility.yul\":17970:17976   */\n      dup3\n        /* \"#utility.yul\":17966:17980   */\n      add\n        /* \"#utility.yul\":17959:18014   */\n      mstore\n        /* \"#utility.yul\":17842:18021   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18027:18393   */\n    tag_604:\n        /* \"#utility.yul\":18169:18172   */\n      0x00\n        /* \"#utility.yul\":18190:18257   */\n      tag_832\n        /* \"#utility.yul\":18254:18256   */\n      0x1d\n        /* \"#utility.yul\":18249:18252   */\n      dup4\n        /* \"#utility.yul\":18190:18257   */\n      tag_559\n      jump\t// in\n    tag_832:\n        /* \"#utility.yul\":18183:18257   */\n      swap2\n      pop\n        /* \"#utility.yul\":18266:18359   */\n      tag_833\n        /* \"#utility.yul\":18355:18358   */\n      dup3\n        /* \"#utility.yul\":18266:18359   */\n      tag_603\n      jump\t// in\n    tag_833:\n        /* \"#utility.yul\":18384:18386   */\n      0x20\n        /* \"#utility.yul\":18379:18382   */\n      dup3\n        /* \"#utility.yul\":18375:18387   */\n      add\n        /* \"#utility.yul\":18368:18387   */\n      swap1\n      pop\n        /* \"#utility.yul\":18027:18393   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18399:18818   */\n    tag_273:\n        /* \"#utility.yul\":18565:18569   */\n      0x00\n        /* \"#utility.yul\":18603:18605   */\n      0x20\n        /* \"#utility.yul\":18592:18601   */\n      dup3\n        /* \"#utility.yul\":18588:18606   */\n      add\n        /* \"#utility.yul\":18580:18606   */\n      swap1\n      pop\n        /* \"#utility.yul\":18652:18661   */\n      dup2\n        /* \"#utility.yul\":18646:18650   */\n      dup2\n        /* \"#utility.yul\":18642:18662   */\n      sub\n        /* \"#utility.yul\":18638:18639   */\n      0x00\n        /* \"#utility.yul\":18627:18636   */\n      dup4\n        /* \"#utility.yul\":18623:18640   */\n      add\n        /* \"#utility.yul\":18616:18663   */\n      mstore\n        /* \"#utility.yul\":18680:18811   */\n      tag_835\n        /* \"#utility.yul\":18806:18810   */\n      dup2\n        /* \"#utility.yul\":18680:18811   */\n      tag_604\n      jump\t// in\n    tag_835:\n        /* \"#utility.yul\":18672:18811   */\n      swap1\n      pop\n        /* \"#utility.yul\":18399:18818   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18824:19004   */\n    tag_605:\n        /* \"#utility.yul\":18872:18949   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18869:18870   */\n      0x00\n        /* \"#utility.yul\":18862:18950   */\n      mstore\n        /* \"#utility.yul\":18969:18973   */\n      0x11\n        /* \"#utility.yul\":18966:18967   */\n      0x04\n        /* \"#utility.yul\":18959:18974   */\n      mstore\n        /* \"#utility.yul\":18993:18997   */\n      0x24\n        /* \"#utility.yul\":18990:18991   */\n      0x00\n        /* \"#utility.yul\":18983:18998   */\n      revert\n        /* \"#utility.yul\":19010:19204   */\n    tag_276:\n        /* \"#utility.yul\":19050:19054   */\n      0x00\n        /* \"#utility.yul\":19070:19090   */\n      tag_838\n        /* \"#utility.yul\":19088:19089   */\n      dup3\n        /* \"#utility.yul\":19070:19090   */\n      tag_570\n      jump\t// in\n    tag_838:\n        /* \"#utility.yul\":19065:19090   */\n      swap2\n      pop\n        /* \"#utility.yul\":19104:19124   */\n      tag_839\n        /* \"#utility.yul\":19122:19123   */\n      dup4\n        /* \"#utility.yul\":19104:19124   */\n      tag_570\n      jump\t// in\n    tag_839:\n        /* \"#utility.yul\":19099:19124   */\n      swap3\n      pop\n        /* \"#utility.yul\":19148:19149   */\n      dup3\n        /* \"#utility.yul\":19145:19146   */\n      dup3\n        /* \"#utility.yul\":19141:19150   */\n      sub\n        /* \"#utility.yul\":19133:19150   */\n      swap1\n      pop\n        /* \"#utility.yul\":19172:19173   */\n      dup2\n        /* \"#utility.yul\":19166:19170   */\n      dup2\n        /* \"#utility.yul\":19163:19174   */\n      gt\n        /* \"#utility.yul\":19160:19197   */\n      iszero\n      tag_840\n      jumpi\n        /* \"#utility.yul\":19177:19195   */\n      tag_841\n      tag_605\n      jump\t// in\n    tag_841:\n        /* \"#utility.yul\":19160:19197   */\n    tag_840:\n        /* \"#utility.yul\":19010:19204   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19210:19435   */\n    tag_606:\n        /* \"#utility.yul\":19350:19384   */\n      0x474946543a205469657273206d75737420626520696e20617363656e64696e67\n        /* \"#utility.yul\":19346:19347   */\n      0x00\n        /* \"#utility.yul\":19338:19344   */\n      dup3\n        /* \"#utility.yul\":19334:19348   */\n      add\n        /* \"#utility.yul\":19327:19385   */\n      mstore\n        /* \"#utility.yul\":19419:19427   */\n      0x206f726465720000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19414:19416   */\n      0x20\n        /* \"#utility.yul\":19406:19412   */\n      dup3\n        /* \"#utility.yul\":19402:19417   */\n      add\n        /* \"#utility.yul\":19395:19428   */\n      mstore\n        /* \"#utility.yul\":19210:19435   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19441:19807   */\n    tag_607:\n        /* \"#utility.yul\":19583:19586   */\n      0x00\n        /* \"#utility.yul\":19604:19671   */\n      tag_844\n        /* \"#utility.yul\":19668:19670   */\n      0x26\n        /* \"#utility.yul\":19663:19666   */\n      dup4\n        /* \"#utility.yul\":19604:19671   */\n      tag_559\n      jump\t// in\n    tag_844:\n        /* \"#utility.yul\":19597:19671   */\n      swap2\n      pop\n        /* \"#utility.yul\":19680:19773   */\n      tag_845\n        /* \"#utility.yul\":19769:19772   */\n      dup3\n        /* \"#utility.yul\":19680:19773   */\n      tag_606\n      jump\t// in\n    tag_845:\n        /* \"#utility.yul\":19798:19800   */\n      0x40\n        /* \"#utility.yul\":19793:19796   */\n      dup3\n        /* \"#utility.yul\":19789:19801   */\n      add\n        /* \"#utility.yul\":19782:19801   */\n      swap1\n      pop\n        /* \"#utility.yul\":19441:19807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19813:20232   */\n    tag_283:\n        /* \"#utility.yul\":19979:19983   */\n      0x00\n        /* \"#utility.yul\":20017:20019   */\n      0x20\n        /* \"#utility.yul\":20006:20015   */\n      dup3\n        /* \"#utility.yul\":20002:20020   */\n      add\n        /* \"#utility.yul\":19994:20020   */\n      swap1\n      pop\n        /* \"#utility.yul\":20066:20075   */\n      dup2\n        /* \"#utility.yul\":20060:20064   */\n      dup2\n        /* \"#utility.yul\":20056:20076   */\n      sub\n        /* \"#utility.yul\":20052:20053   */\n      0x00\n        /* \"#utility.yul\":20041:20050   */\n      dup4\n        /* \"#utility.yul\":20037:20054   */\n      add\n        /* \"#utility.yul\":20030:20077   */\n      mstore\n        /* \"#utility.yul\":20094:20225   */\n      tag_847\n        /* \"#utility.yul\":20220:20224   */\n      dup2\n        /* \"#utility.yul\":20094:20225   */\n      tag_607\n      jump\t// in\n    tag_847:\n        /* \"#utility.yul\":20086:20225   */\n      swap1\n      pop\n        /* \"#utility.yul\":19813:20232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20238:20471   */\n    tag_285:\n        /* \"#utility.yul\":20277:20280   */\n      0x00\n        /* \"#utility.yul\":20300:20324   */\n      tag_849\n        /* \"#utility.yul\":20318:20323   */\n      dup3\n        /* \"#utility.yul\":20300:20324   */\n      tag_570\n      jump\t// in\n    tag_849:\n        /* \"#utility.yul\":20291:20324   */\n      swap2\n      pop\n        /* \"#utility.yul\":20346:20412   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20339:20344   */\n      dup3\n        /* \"#utility.yul\":20336:20413   */\n      sub\n        /* \"#utility.yul\":20333:20436   */\n      tag_850\n      jumpi\n        /* \"#utility.yul\":20416:20434   */\n      tag_851\n      tag_605\n      jump\t// in\n    tag_851:\n        /* \"#utility.yul\":20333:20436   */\n    tag_850:\n        /* \"#utility.yul\":20463:20464   */\n      0x01\n        /* \"#utility.yul\":20456:20461   */\n      dup3\n        /* \"#utility.yul\":20452:20465   */\n      add\n        /* \"#utility.yul\":20445:20465   */\n      swap1\n      pop\n        /* \"#utility.yul\":20238:20471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20477:20581   */\n    tag_608:\n        /* \"#utility.yul\":20542:20548   */\n      0x00\n        /* \"#utility.yul\":20570:20574   */\n      0x05\n        /* \"#utility.yul\":20560:20574   */\n      swap1\n      pop\n        /* \"#utility.yul\":20477:20581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20587:20730   */\n    tag_609:\n        /* \"#utility.yul\":20684:20695   */\n      0x00\n        /* \"#utility.yul\":20721:20724   */\n      dup2\n        /* \"#utility.yul\":20706:20724   */\n      swap1\n      pop\n        /* \"#utility.yul\":20587:20730   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20736:20834   */\n    tag_610:\n        /* \"#utility.yul\":20801:20805   */\n      0x00\n        /* \"#utility.yul\":20824:20827   */\n      dup2\n        /* \"#utility.yul\":20816:20827   */\n      swap1\n      pop\n        /* \"#utility.yul\":20736:20834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20840:20948   */\n    tag_611:\n        /* \"#utility.yul\":20917:20941   */\n      tag_856\n        /* \"#utility.yul\":20935:20940   */\n      dup2\n        /* \"#utility.yul\":20917:20941   */\n      tag_570\n      jump\t// in\n    tag_856:\n        /* \"#utility.yul\":20912:20915   */\n      dup3\n        /* \"#utility.yul\":20905:20942   */\n      mstore\n        /* \"#utility.yul\":20840:20948   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20954:21133   */\n    tag_612:\n        /* \"#utility.yul\":21023:21033   */\n      0x00\n        /* \"#utility.yul\":21044:21090   */\n      tag_858\n        /* \"#utility.yul\":21086:21089   */\n      dup4\n        /* \"#utility.yul\":21078:21084   */\n      dup4\n        /* \"#utility.yul\":21044:21090   */\n      tag_611\n      jump\t// in\n    tag_858:\n        /* \"#utility.yul\":21122:21126   */\n      0x20\n        /* \"#utility.yul\":21117:21120   */\n      dup4\n        /* \"#utility.yul\":21113:21127   */\n      add\n        /* \"#utility.yul\":21099:21127   */\n      swap1\n      pop\n        /* \"#utility.yul\":20954:21133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21139:21250   */\n    tag_613:\n        /* \"#utility.yul\":21207:21211   */\n      0x00\n        /* \"#utility.yul\":21239:21243   */\n      0x20\n        /* \"#utility.yul\":21234:21237   */\n      dup3\n        /* \"#utility.yul\":21230:21244   */\n      add\n        /* \"#utility.yul\":21222:21244   */\n      swap1\n      pop\n        /* \"#utility.yul\":21139:21250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21288:21982   */\n    tag_614:\n        /* \"#utility.yul\":21424:21476   */\n      tag_861\n        /* \"#utility.yul\":21470:21475   */\n      dup2\n        /* \"#utility.yul\":21424:21476   */\n      tag_608\n      jump\t// in\n    tag_861:\n        /* \"#utility.yul\":21492:21576   */\n      tag_862\n        /* \"#utility.yul\":21569:21575   */\n      dup2\n        /* \"#utility.yul\":21564:21567   */\n      dup5\n        /* \"#utility.yul\":21492:21576   */\n      tag_609\n      jump\t// in\n    tag_862:\n        /* \"#utility.yul\":21485:21576   */\n      swap3\n      pop\n        /* \"#utility.yul\":21600:21654   */\n      tag_863\n        /* \"#utility.yul\":21648:21653   */\n      dup3\n        /* \"#utility.yul\":21600:21654   */\n      tag_610\n      jump\t// in\n    tag_863:\n        /* \"#utility.yul\":21677:21684   */\n      dup1\n        /* \"#utility.yul\":21708:21709   */\n      0x00\n        /* \"#utility.yul\":21693:21975   */\n    tag_864:\n        /* \"#utility.yul\":21718:21724   */\n      dup4\n        /* \"#utility.yul\":21715:21716   */\n      dup2\n        /* \"#utility.yul\":21712:21725   */\n      lt\n        /* \"#utility.yul\":21693:21975   */\n      iszero\n      tag_866\n      jumpi\n        /* \"#utility.yul\":21794:21800   */\n      dup2\n        /* \"#utility.yul\":21788:21801   */\n      mload\n        /* \"#utility.yul\":21821:21884   */\n      tag_867\n        /* \"#utility.yul\":21880:21883   */\n      dup8\n        /* \"#utility.yul\":21865:21878   */\n      dup3\n        /* \"#utility.yul\":21821:21884   */\n      tag_612\n      jump\t// in\n    tag_867:\n        /* \"#utility.yul\":21814:21884   */\n      swap7\n      pop\n        /* \"#utility.yul\":21907:21965   */\n      tag_868\n        /* \"#utility.yul\":21958:21964   */\n      dup4\n        /* \"#utility.yul\":21907:21965   */\n      tag_613\n      jump\t// in\n    tag_868:\n        /* \"#utility.yul\":21897:21965   */\n      swap3\n      pop\n        /* \"#utility.yul\":21753:21975   */\n      pop\n        /* \"#utility.yul\":21740:21741   */\n      0x01\n        /* \"#utility.yul\":21737:21738   */\n      dup2\n        /* \"#utility.yul\":21733:21742   */\n      add\n        /* \"#utility.yul\":21728:21742   */\n      swap1\n      pop\n        /* \"#utility.yul\":21693:21975   */\n      jump(tag_864)\n    tag_866:\n        /* \"#utility.yul\":21697:21711   */\n      pop\n        /* \"#utility.yul\":21400:21982   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21288:21982   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21988:22506   */\n    tag_290:\n        /* \"#utility.yul\":22201:22205   */\n      0x00\n        /* \"#utility.yul\":22239:22242   */\n      0x0140\n        /* \"#utility.yul\":22228:22237   */\n      dup3\n        /* \"#utility.yul\":22224:22243   */\n      add\n        /* \"#utility.yul\":22216:22243   */\n      swap1\n      pop\n        /* \"#utility.yul\":22253:22370   */\n      tag_870\n        /* \"#utility.yul\":22367:22368   */\n      0x00\n        /* \"#utility.yul\":22356:22365   */\n      dup4\n        /* \"#utility.yul\":22352:22369   */\n      add\n        /* \"#utility.yul\":22343:22349   */\n      dup6\n        /* \"#utility.yul\":22253:22370   */\n      tag_614\n      jump\t// in\n    tag_870:\n        /* \"#utility.yul\":22380:22499   */\n      tag_871\n        /* \"#utility.yul\":22494:22497   */\n      0xa0\n        /* \"#utility.yul\":22483:22492   */\n      dup4\n        /* \"#utility.yul\":22479:22498   */\n      add\n        /* \"#utility.yul\":22470:22476   */\n      dup5\n        /* \"#utility.yul\":22380:22499   */\n      tag_614\n      jump\t// in\n    tag_871:\n        /* \"#utility.yul\":21988:22506   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22512:22734   */\n    tag_615:\n        /* \"#utility.yul\":22652:22686   */\n      0x474946543a206275726e20616d6f756e74206578636565647320616c6c6f7761\n        /* \"#utility.yul\":22648:22649   */\n      0x00\n        /* \"#utility.yul\":22640:22646   */\n      dup3\n        /* \"#utility.yul\":22636:22650   */\n      add\n        /* \"#utility.yul\":22629:22687   */\n      mstore\n        /* \"#utility.yul\":22721:22726   */\n      0x6e63650000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22716:22718   */\n      0x20\n        /* \"#utility.yul\":22708:22714   */\n      dup3\n        /* \"#utility.yul\":22704:22719   */\n      add\n        /* \"#utility.yul\":22697:22727   */\n      mstore\n        /* \"#utility.yul\":22512:22734   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22740:23106   */\n    tag_616:\n        /* \"#utility.yul\":22882:22885   */\n      0x00\n        /* \"#utility.yul\":22903:22970   */\n      tag_874\n        /* \"#utility.yul\":22967:22969   */\n      0x23\n        /* \"#utility.yul\":22962:22965   */\n      dup4\n        /* \"#utility.yul\":22903:22970   */\n      tag_559\n      jump\t// in\n    tag_874:\n        /* \"#utility.yul\":22896:22970   */\n      swap2\n      pop\n        /* \"#utility.yul\":22979:23072   */\n      tag_875\n        /* \"#utility.yul\":23068:23071   */\n      dup3\n        /* \"#utility.yul\":22979:23072   */\n      tag_615\n      jump\t// in\n    tag_875:\n        /* \"#utility.yul\":23097:23099   */\n      0x40\n        /* \"#utility.yul\":23092:23095   */\n      dup3\n        /* \"#utility.yul\":23088:23100   */\n      add\n        /* \"#utility.yul\":23081:23100   */\n      swap1\n      pop\n        /* \"#utility.yul\":22740:23106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23112:23531   */\n    tag_303:\n        /* \"#utility.yul\":23278:23282   */\n      0x00\n        /* \"#utility.yul\":23316:23318   */\n      0x20\n        /* \"#utility.yul\":23305:23314   */\n      dup3\n        /* \"#utility.yul\":23301:23319   */\n      add\n        /* \"#utility.yul\":23293:23319   */\n      swap1\n      pop\n        /* \"#utility.yul\":23365:23374   */\n      dup2\n        /* \"#utility.yul\":23359:23363   */\n      dup2\n        /* \"#utility.yul\":23355:23375   */\n      sub\n        /* \"#utility.yul\":23351:23352   */\n      0x00\n        /* \"#utility.yul\":23340:23349   */\n      dup4\n        /* \"#utility.yul\":23336:23353   */\n      add\n        /* \"#utility.yul\":23329:23376   */\n      mstore\n        /* \"#utility.yul\":23393:23524   */\n      tag_877\n        /* \"#utility.yul\":23519:23523   */\n      dup2\n        /* \"#utility.yul\":23393:23524   */\n      tag_616\n      jump\t// in\n    tag_877:\n        /* \"#utility.yul\":23385:23524   */\n      swap1\n      pop\n        /* \"#utility.yul\":23112:23531   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23537:23622   */\n    tag_617:\n        /* \"#utility.yul\":23582:23589   */\n      0x00\n        /* \"#utility.yul\":23611:23616   */\n      dup2\n        /* \"#utility.yul\":23600:23616   */\n      swap1\n      pop\n        /* \"#utility.yul\":23537:23622   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23628:23729   */\n    tag_618:\n        /* \"#utility.yul\":23664:23671   */\n      0x00\n        /* \"#utility.yul\":23704:23722   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":23697:23702   */\n      dup3\n        /* \"#utility.yul\":23693:23723   */\n      and\n        /* \"#utility.yul\":23682:23723   */\n      swap1\n      pop\n        /* \"#utility.yul\":23628:23729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23735:23795   */\n    tag_619:\n        /* \"#utility.yul\":23763:23766   */\n      0x00\n        /* \"#utility.yul\":23784:23789   */\n      dup2\n        /* \"#utility.yul\":23777:23789   */\n      swap1\n      pop\n        /* \"#utility.yul\":23735:23795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23801:23957   */\n    tag_620:\n        /* \"#utility.yul\":23858:23867   */\n      0x00\n        /* \"#utility.yul\":23891:23951   */\n      tag_882\n        /* \"#utility.yul\":23908:23950   */\n      tag_883\n        /* \"#utility.yul\":23917:23949   */\n      tag_884\n        /* \"#utility.yul\":23943:23948   */\n      dup5\n        /* \"#utility.yul\":23917:23949   */\n      tag_617\n      jump\t// in\n    tag_884:\n        /* \"#utility.yul\":23908:23950   */\n      tag_619\n      jump\t// in\n    tag_883:\n        /* \"#utility.yul\":23891:23951   */\n      tag_618\n      jump\t// in\n    tag_882:\n        /* \"#utility.yul\":23878:23951   */\n      swap1\n      pop\n        /* \"#utility.yul\":23801:23957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23963:24108   */\n    tag_621:\n        /* \"#utility.yul\":24057:24101   */\n      tag_886\n        /* \"#utility.yul\":24095:24100   */\n      dup2\n        /* \"#utility.yul\":24057:24101   */\n      tag_620\n      jump\t// in\n    tag_886:\n        /* \"#utility.yul\":24052:24055   */\n      dup3\n        /* \"#utility.yul\":24045:24102   */\n      mstore\n        /* \"#utility.yul\":23963:24108   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24114:24350   */\n    tag_367:\n        /* \"#utility.yul\":24214:24218   */\n      0x00\n        /* \"#utility.yul\":24252:24254   */\n      0x20\n        /* \"#utility.yul\":24241:24250   */\n      dup3\n        /* \"#utility.yul\":24237:24255   */\n      add\n        /* \"#utility.yul\":24229:24255   */\n      swap1\n      pop\n        /* \"#utility.yul\":24265:24343   */\n      tag_888\n        /* \"#utility.yul\":24340:24341   */\n      0x00\n        /* \"#utility.yul\":24329:24338   */\n      dup4\n        /* \"#utility.yul\":24325:24342   */\n      add\n        /* \"#utility.yul\":24316:24322   */\n      dup5\n        /* \"#utility.yul\":24265:24343   */\n      tag_621\n      jump\t// in\n    tag_888:\n        /* \"#utility.yul\":24114:24350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24356:24664   */\n    tag_374:\n        /* \"#utility.yul\":24465:24469   */\n      0x00\n        /* \"#utility.yul\":24503:24505   */\n      0x40\n        /* \"#utility.yul\":24492:24501   */\n      dup3\n        /* \"#utility.yul\":24488:24506   */\n      add\n        /* \"#utility.yul\":24480:24506   */\n      swap1\n      pop\n        /* \"#utility.yul\":24516:24581   */\n      tag_890\n        /* \"#utility.yul\":24578:24579   */\n      0x00\n        /* \"#utility.yul\":24567:24576   */\n      dup4\n        /* \"#utility.yul\":24563:24580   */\n      add\n        /* \"#utility.yul\":24554:24560   */\n      dup6\n        /* \"#utility.yul\":24516:24581   */\n      tag_574\n      jump\t// in\n    tag_890:\n        /* \"#utility.yul\":24591:24657   */\n      tag_891\n        /* \"#utility.yul\":24653:24655   */\n      0x20\n        /* \"#utility.yul\":24642:24651   */\n      dup4\n        /* \"#utility.yul\":24638:24656   */\n      add\n        /* \"#utility.yul\":24629:24635   */\n      dup5\n        /* \"#utility.yul\":24591:24657   */\n      tag_574\n      jump\t// in\n    tag_891:\n        /* \"#utility.yul\":24356:24664   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24670:24836   */\n    tag_622:\n        /* \"#utility.yul\":24810:24828   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":24806:24807   */\n      0x00\n        /* \"#utility.yul\":24798:24804   */\n      dup3\n        /* \"#utility.yul\":24794:24808   */\n      add\n        /* \"#utility.yul\":24787:24829   */\n      mstore\n        /* \"#utility.yul\":24670:24836   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24842:25208   */\n    tag_623:\n        /* \"#utility.yul\":24984:24987   */\n      0x00\n        /* \"#utility.yul\":25005:25072   */\n      tag_894\n        /* \"#utility.yul\":25069:25071   */\n      0x10\n        /* \"#utility.yul\":25064:25067   */\n      dup4\n        /* \"#utility.yul\":25005:25072   */\n      tag_559\n      jump\t// in\n    tag_894:\n        /* \"#utility.yul\":24998:25072   */\n      swap2\n      pop\n        /* \"#utility.yul\":25081:25174   */\n      tag_895\n        /* \"#utility.yul\":25170:25173   */\n      dup3\n        /* \"#utility.yul\":25081:25174   */\n      tag_622\n      jump\t// in\n    tag_895:\n        /* \"#utility.yul\":25199:25201   */\n      0x20\n        /* \"#utility.yul\":25194:25197   */\n      dup3\n        /* \"#utility.yul\":25190:25202   */\n      add\n        /* \"#utility.yul\":25183:25202   */\n      swap1\n      pop\n        /* \"#utility.yul\":24842:25208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25214:25633   */\n    tag_396:\n        /* \"#utility.yul\":25380:25384   */\n      0x00\n        /* \"#utility.yul\":25418:25420   */\n      0x20\n        /* \"#utility.yul\":25407:25416   */\n      dup3\n        /* \"#utility.yul\":25403:25421   */\n      add\n        /* \"#utility.yul\":25395:25421   */\n      swap1\n      pop\n        /* \"#utility.yul\":25467:25476   */\n      dup2\n        /* \"#utility.yul\":25461:25465   */\n      dup2\n        /* \"#utility.yul\":25457:25477   */\n      sub\n        /* \"#utility.yul\":25453:25454   */\n      0x00\n        /* \"#utility.yul\":25442:25451   */\n      dup4\n        /* \"#utility.yul\":25438:25455   */\n      add\n        /* \"#utility.yul\":25431:25478   */\n      mstore\n        /* \"#utility.yul\":25495:25626   */\n      tag_897\n        /* \"#utility.yul\":25621:25625   */\n      dup2\n        /* \"#utility.yul\":25495:25626   */\n      tag_623\n      jump\t// in\n    tag_897:\n        /* \"#utility.yul\":25487:25626   */\n      swap1\n      pop\n        /* \"#utility.yul\":25214:25633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25639:25830   */\n    tag_399:\n        /* \"#utility.yul\":25679:25682   */\n      0x00\n        /* \"#utility.yul\":25698:25718   */\n      tag_899\n        /* \"#utility.yul\":25716:25717   */\n      dup3\n        /* \"#utility.yul\":25698:25718   */\n      tag_570\n      jump\t// in\n    tag_899:\n        /* \"#utility.yul\":25693:25718   */\n      swap2\n      pop\n        /* \"#utility.yul\":25732:25752   */\n      tag_900\n        /* \"#utility.yul\":25750:25751   */\n      dup4\n        /* \"#utility.yul\":25732:25752   */\n      tag_570\n      jump\t// in\n    tag_900:\n        /* \"#utility.yul\":25727:25752   */\n      swap3\n      pop\n        /* \"#utility.yul\":25775:25776   */\n      dup3\n        /* \"#utility.yul\":25772:25773   */\n      dup3\n        /* \"#utility.yul\":25768:25777   */\n      add\n        /* \"#utility.yul\":25761:25777   */\n      swap1\n      pop\n        /* \"#utility.yul\":25796:25799   */\n      dup1\n        /* \"#utility.yul\":25793:25794   */\n      dup3\n        /* \"#utility.yul\":25790:25800   */\n      gt\n        /* \"#utility.yul\":25787:25823   */\n      iszero\n      tag_901\n      jumpi\n        /* \"#utility.yul\":25803:25821   */\n      tag_902\n      tag_605\n      jump\t// in\n    tag_902:\n        /* \"#utility.yul\":25787:25823   */\n    tag_901:\n        /* \"#utility.yul\":25639:25830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25836:25934   */\n    tag_624:\n        /* \"#utility.yul\":25887:25893   */\n      0x00\n        /* \"#utility.yul\":25921:25926   */\n      dup2\n        /* \"#utility.yul\":25915:25927   */\n      mload\n        /* \"#utility.yul\":25905:25927   */\n      swap1\n      pop\n        /* \"#utility.yul\":25836:25934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25940:26087   */\n    tag_625:\n        /* \"#utility.yul\":26041:26052   */\n      0x00\n        /* \"#utility.yul\":26078:26081   */\n      dup2\n        /* \"#utility.yul\":26063:26081   */\n      swap1\n      pop\n        /* \"#utility.yul\":25940:26087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26093:26479   */\n    tag_626:\n        /* \"#utility.yul\":26197:26200   */\n      0x00\n        /* \"#utility.yul\":26225:26263   */\n      tag_906\n        /* \"#utility.yul\":26257:26262   */\n      dup3\n        /* \"#utility.yul\":26225:26263   */\n      tag_624\n      jump\t// in\n    tag_906:\n        /* \"#utility.yul\":26279:26367   */\n      tag_907\n        /* \"#utility.yul\":26360:26366   */\n      dup2\n        /* \"#utility.yul\":26355:26358   */\n      dup6\n        /* \"#utility.yul\":26279:26367   */\n      tag_625\n      jump\t// in\n    tag_907:\n        /* \"#utility.yul\":26272:26367   */\n      swap4\n      pop\n        /* \"#utility.yul\":26376:26441   */\n      tag_908\n        /* \"#utility.yul\":26434:26440   */\n      dup2\n        /* \"#utility.yul\":26429:26432   */\n      dup6\n        /* \"#utility.yul\":26422:26426   */\n      0x20\n        /* \"#utility.yul\":26415:26420   */\n      dup7\n        /* \"#utility.yul\":26411:26427   */\n      add\n        /* \"#utility.yul\":26376:26441   */\n      tag_560\n      jump\t// in\n    tag_908:\n        /* \"#utility.yul\":26466:26472   */\n      dup1\n        /* \"#utility.yul\":26461:26464   */\n      dup5\n        /* \"#utility.yul\":26457:26473   */\n      add\n        /* \"#utility.yul\":26450:26473   */\n      swap2\n      pop\n        /* \"#utility.yul\":26201:26479   */\n      pop\n        /* \"#utility.yul\":26093:26479   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26485:26756   */\n    tag_403:\n        /* \"#utility.yul\":26615:26618   */\n      0x00\n        /* \"#utility.yul\":26637:26730   */\n      tag_910\n        /* \"#utility.yul\":26726:26729   */\n      dup3\n        /* \"#utility.yul\":26717:26723   */\n      dup5\n        /* \"#utility.yul\":26637:26730   */\n      tag_626\n      jump\t// in\n    tag_910:\n        /* \"#utility.yul\":26630:26730   */\n      swap2\n      pop\n        /* \"#utility.yul\":26747:26750   */\n      dup2\n        /* \"#utility.yul\":26740:26750   */\n      swap1\n      pop\n        /* \"#utility.yul\":26485:26756   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26762:26942   */\n    tag_627:\n        /* \"#utility.yul\":26902:26934   */\n      0x474946543a204661696c656420746f20636865636b2072657365727665730000\n        /* \"#utility.yul\":26898:26899   */\n      0x00\n        /* \"#utility.yul\":26890:26896   */\n      dup3\n        /* \"#utility.yul\":26886:26900   */\n      add\n        /* \"#utility.yul\":26879:26935   */\n      mstore\n        /* \"#utility.yul\":26762:26942   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26948:27314   */\n    tag_628:\n        /* \"#utility.yul\":27090:27093   */\n      0x00\n        /* \"#utility.yul\":27111:27178   */\n      tag_913\n        /* \"#utility.yul\":27175:27177   */\n      0x1e\n        /* \"#utility.yul\":27170:27173   */\n      dup4\n        /* \"#utility.yul\":27111:27178   */\n      tag_559\n      jump\t// in\n    tag_913:\n        /* \"#utility.yul\":27104:27178   */\n      swap2\n      pop\n        /* \"#utility.yul\":27187:27280   */\n      tag_914\n        /* \"#utility.yul\":27276:27279   */\n      dup3\n        /* \"#utility.yul\":27187:27280   */\n      tag_627\n      jump\t// in\n    tag_914:\n        /* \"#utility.yul\":27305:27307   */\n      0x20\n        /* \"#utility.yul\":27300:27303   */\n      dup3\n        /* \"#utility.yul\":27296:27308   */\n      add\n        /* \"#utility.yul\":27289:27308   */\n      swap1\n      pop\n        /* \"#utility.yul\":26948:27314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27320:27739   */\n    tag_409:\n        /* \"#utility.yul\":27486:27490   */\n      0x00\n        /* \"#utility.yul\":27524:27526   */\n      0x20\n        /* \"#utility.yul\":27513:27522   */\n      dup3\n        /* \"#utility.yul\":27509:27527   */\n      add\n        /* \"#utility.yul\":27501:27527   */\n      swap1\n      pop\n        /* \"#utility.yul\":27573:27582   */\n      dup2\n        /* \"#utility.yul\":27567:27571   */\n      dup2\n        /* \"#utility.yul\":27563:27583   */\n      sub\n        /* \"#utility.yul\":27559:27560   */\n      0x00\n        /* \"#utility.yul\":27548:27557   */\n      dup4\n        /* \"#utility.yul\":27544:27561   */\n      add\n        /* \"#utility.yul\":27537:27584   */\n      mstore\n        /* \"#utility.yul\":27601:27732   */\n      tag_916\n        /* \"#utility.yul\":27727:27731   */\n      dup2\n        /* \"#utility.yul\":27601:27732   */\n      tag_628\n      jump\t// in\n    tag_916:\n        /* \"#utility.yul\":27593:27732   */\n      swap1\n      pop\n        /* \"#utility.yul\":27320:27739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27745:27888   */\n    tag_629:\n        /* \"#utility.yul\":27802:27807   */\n      0x00\n        /* \"#utility.yul\":27833:27839   */\n      dup2\n        /* \"#utility.yul\":27827:27840   */\n      mload\n        /* \"#utility.yul\":27818:27840   */\n      swap1\n      pop\n        /* \"#utility.yul\":27849:27882   */\n      tag_918\n        /* \"#utility.yul\":27876:27881   */\n      dup2\n        /* \"#utility.yul\":27849:27882   */\n      tag_571\n      jump\t// in\n    tag_918:\n        /* \"#utility.yul\":27745:27888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27894:28245   */\n    tag_411:\n        /* \"#utility.yul\":27964:27970   */\n      0x00\n        /* \"#utility.yul\":28013:28015   */\n      0x20\n        /* \"#utility.yul\":28001:28010   */\n      dup3\n        /* \"#utility.yul\":27992:27999   */\n      dup5\n        /* \"#utility.yul\":27988:28011   */\n      sub\n        /* \"#utility.yul\":27984:28016   */\n      slt\n        /* \"#utility.yul\":27981:28100   */\n      iszero\n      tag_920\n      jumpi\n        /* \"#utility.yul\":28019:28098   */\n      tag_921\n      tag_564\n      jump\t// in\n    tag_921:\n        /* \"#utility.yul\":27981:28100   */\n    tag_920:\n        /* \"#utility.yul\":28139:28140   */\n      0x00\n        /* \"#utility.yul\":28164:28228   */\n      tag_922\n        /* \"#utility.yul\":28220:28227   */\n      dup5\n        /* \"#utility.yul\":28211:28217   */\n      dup3\n        /* \"#utility.yul\":28200:28209   */\n      dup6\n        /* \"#utility.yul\":28196:28218   */\n      add\n        /* \"#utility.yul\":28164:28228   */\n      tag_629\n      jump\t// in\n    tag_922:\n        /* \"#utility.yul\":28154:28228   */\n      swap2\n      pop\n        /* \"#utility.yul\":28110:28238   */\n      pop\n        /* \"#utility.yul\":27894:28245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28251:28428   */\n    tag_630:\n        /* \"#utility.yul\":28391:28420   */\n      0x474946543a20496e73756666696369656e742072657365727665730000000000\n        /* \"#utility.yul\":28387:28388   */\n      0x00\n        /* \"#utility.yul\":28379:28385   */\n      dup3\n        /* \"#utility.yul\":28375:28389   */\n      add\n        /* \"#utility.yul\":28368:28421   */\n      mstore\n        /* \"#utility.yul\":28251:28428   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28434:28800   */\n    tag_631:\n        /* \"#utility.yul\":28576:28579   */\n      0x00\n        /* \"#utility.yul\":28597:28664   */\n      tag_925\n        /* \"#utility.yul\":28661:28663   */\n      0x1b\n        /* \"#utility.yul\":28656:28659   */\n      dup4\n        /* \"#utility.yul\":28597:28664   */\n      tag_559\n      jump\t// in\n    tag_925:\n        /* \"#utility.yul\":28590:28664   */\n      swap2\n      pop\n        /* \"#utility.yul\":28673:28766   */\n      tag_926\n        /* \"#utility.yul\":28762:28765   */\n      dup3\n        /* \"#utility.yul\":28673:28766   */\n      tag_630\n      jump\t// in\n    tag_926:\n        /* \"#utility.yul\":28791:28793   */\n      0x20\n        /* \"#utility.yul\":28786:28789   */\n      dup3\n        /* \"#utility.yul\":28782:28794   */\n      add\n        /* \"#utility.yul\":28775:28794   */\n      swap1\n      pop\n        /* \"#utility.yul\":28434:28800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28806:29225   */\n    tag_415:\n        /* \"#utility.yul\":28972:28976   */\n      0x00\n        /* \"#utility.yul\":29010:29012   */\n      0x20\n        /* \"#utility.yul\":28999:29008   */\n      dup3\n        /* \"#utility.yul\":28995:29013   */\n      add\n        /* \"#utility.yul\":28987:29013   */\n      swap1\n      pop\n        /* \"#utility.yul\":29059:29068   */\n      dup2\n        /* \"#utility.yul\":29053:29057   */\n      dup2\n        /* \"#utility.yul\":29049:29069   */\n      sub\n        /* \"#utility.yul\":29045:29046   */\n      0x00\n        /* \"#utility.yul\":29034:29043   */\n      dup4\n        /* \"#utility.yul\":29030:29047   */\n      add\n        /* \"#utility.yul\":29023:29070   */\n      mstore\n        /* \"#utility.yul\":29087:29218   */\n      tag_928\n        /* \"#utility.yul\":29213:29217   */\n      dup2\n        /* \"#utility.yul\":29087:29218   */\n      tag_631\n      jump\t// in\n    tag_928:\n        /* \"#utility.yul\":29079:29218   */\n      swap1\n      pop\n        /* \"#utility.yul\":28806:29225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29231:29401   */\n    tag_632:\n        /* \"#utility.yul\":29371:29393   */\n      0x474946543a20496e76616c696420616d6f756e74000000000000000000000000\n        /* \"#utility.yul\":29367:29368   */\n      0x00\n        /* \"#utility.yul\":29359:29365   */\n      dup3\n        /* \"#utility.yul\":29355:29369   */\n      add\n        /* \"#utility.yul\":29348:29394   */\n      mstore\n        /* \"#utility.yul\":29231:29401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29407:29773   */\n    tag_633:\n        /* \"#utility.yul\":29549:29552   */\n      0x00\n        /* \"#utility.yul\":29570:29637   */\n      tag_931\n        /* \"#utility.yul\":29634:29636   */\n      0x14\n        /* \"#utility.yul\":29629:29632   */\n      dup4\n        /* \"#utility.yul\":29570:29637   */\n      tag_559\n      jump\t// in\n    tag_931:\n        /* \"#utility.yul\":29563:29637   */\n      swap2\n      pop\n        /* \"#utility.yul\":29646:29739   */\n      tag_932\n        /* \"#utility.yul\":29735:29738   */\n      dup3\n        /* \"#utility.yul\":29646:29739   */\n      tag_632\n      jump\t// in\n    tag_932:\n        /* \"#utility.yul\":29764:29766   */\n      0x20\n        /* \"#utility.yul\":29759:29762   */\n      dup3\n        /* \"#utility.yul\":29755:29767   */\n      add\n        /* \"#utility.yul\":29748:29767   */\n      swap1\n      pop\n        /* \"#utility.yul\":29407:29773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29779:30198   */\n    tag_500:\n        /* \"#utility.yul\":29945:29949   */\n      0x00\n        /* \"#utility.yul\":29983:29985   */\n      0x20\n        /* \"#utility.yul\":29972:29981   */\n      dup3\n        /* \"#utility.yul\":29968:29986   */\n      add\n        /* \"#utility.yul\":29960:29986   */\n      swap1\n      pop\n        /* \"#utility.yul\":30032:30041   */\n      dup2\n        /* \"#utility.yul\":30026:30030   */\n      dup2\n        /* \"#utility.yul\":30022:30042   */\n      sub\n        /* \"#utility.yul\":30018:30019   */\n      0x00\n        /* \"#utility.yul\":30007:30016   */\n      dup4\n        /* \"#utility.yul\":30003:30020   */\n      add\n        /* \"#utility.yul\":29996:30043   */\n      mstore\n        /* \"#utility.yul\":30060:30191   */\n      tag_934\n        /* \"#utility.yul\":30186:30190   */\n      dup2\n        /* \"#utility.yul\":30060:30191   */\n      tag_633\n      jump\t// in\n    tag_934:\n        /* \"#utility.yul\":30052:30191   */\n      swap1\n      pop\n        /* \"#utility.yul\":29779:30198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30204:30374   */\n    tag_634:\n        /* \"#utility.yul\":30344:30366   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":30340:30341   */\n      0x00\n        /* \"#utility.yul\":30332:30338   */\n      dup3\n        /* \"#utility.yul\":30328:30342   */\n      add\n        /* \"#utility.yul\":30321:30367   */\n      mstore\n        /* \"#utility.yul\":30204:30374   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30380:30746   */\n    tag_635:\n        /* \"#utility.yul\":30522:30525   */\n      0x00\n        /* \"#utility.yul\":30543:30610   */\n      tag_937\n        /* \"#utility.yul\":30607:30609   */\n      0x14\n        /* \"#utility.yul\":30602:30605   */\n      dup4\n        /* \"#utility.yul\":30543:30610   */\n      tag_559\n      jump\t// in\n    tag_937:\n        /* \"#utility.yul\":30536:30610   */\n      swap2\n      pop\n        /* \"#utility.yul\":30619:30712   */\n      tag_938\n        /* \"#utility.yul\":30708:30711   */\n      dup3\n        /* \"#utility.yul\":30619:30712   */\n      tag_634\n      jump\t// in\n    tag_938:\n        /* \"#utility.yul\":30737:30739   */\n      0x20\n        /* \"#utility.yul\":30732:30735   */\n      dup3\n        /* \"#utility.yul\":30728:30740   */\n      add\n        /* \"#utility.yul\":30721:30740   */\n      swap1\n      pop\n        /* \"#utility.yul\":30380:30746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30752:31171   */\n    tag_507:\n        /* \"#utility.yul\":30918:30922   */\n      0x00\n        /* \"#utility.yul\":30956:30958   */\n      0x20\n        /* \"#utility.yul\":30945:30954   */\n      dup3\n        /* \"#utility.yul\":30941:30959   */\n      add\n        /* \"#utility.yul\":30933:30959   */\n      swap1\n      pop\n        /* \"#utility.yul\":31005:31014   */\n      dup2\n        /* \"#utility.yul\":30999:31003   */\n      dup2\n        /* \"#utility.yul\":30995:31015   */\n      sub\n        /* \"#utility.yul\":30991:30992   */\n      0x00\n        /* \"#utility.yul\":30980:30989   */\n      dup4\n        /* \"#utility.yul\":30976:30993   */\n      add\n        /* \"#utility.yul\":30969:31016   */\n      mstore\n        /* \"#utility.yul\":31033:31164   */\n      tag_940\n        /* \"#utility.yul\":31159:31163   */\n      dup2\n        /* \"#utility.yul\":31033:31164   */\n      tag_635\n      jump\t// in\n    tag_940:\n        /* \"#utility.yul\":31025:31164   */\n      swap1\n      pop\n        /* \"#utility.yul\":30752:31171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31177:31619   */\n    tag_515:\n        /* \"#utility.yul\":31326:31330   */\n      0x00\n        /* \"#utility.yul\":31364:31366   */\n      0x60\n        /* \"#utility.yul\":31353:31362   */\n      dup3\n        /* \"#utility.yul\":31349:31367   */\n      add\n        /* \"#utility.yul\":31341:31367   */\n      swap1\n      pop\n        /* \"#utility.yul\":31377:31448   */\n      tag_942\n        /* \"#utility.yul\":31445:31446   */\n      0x00\n        /* \"#utility.yul\":31434:31443   */\n      dup4\n        /* \"#utility.yul\":31430:31447   */\n      add\n        /* \"#utility.yul\":31421:31427   */\n      dup7\n        /* \"#utility.yul\":31377:31448   */\n      tag_578\n      jump\t// in\n    tag_942:\n        /* \"#utility.yul\":31458:31530   */\n      tag_943\n        /* \"#utility.yul\":31526:31528   */\n      0x20\n        /* \"#utility.yul\":31515:31524   */\n      dup4\n        /* \"#utility.yul\":31511:31529   */\n      add\n        /* \"#utility.yul\":31502:31508   */\n      dup6\n        /* \"#utility.yul\":31458:31530   */\n      tag_575\n      jump\t// in\n    tag_943:\n        /* \"#utility.yul\":31540:31612   */\n      tag_944\n        /* \"#utility.yul\":31608:31610   */\n      0x40\n        /* \"#utility.yul\":31597:31606   */\n      dup4\n        /* \"#utility.yul\":31593:31611   */\n      add\n        /* \"#utility.yul\":31584:31590   */\n      dup5\n        /* \"#utility.yul\":31540:31612   */\n      tag_575\n      jump\t// in\n    tag_944:\n        /* \"#utility.yul\":31177:31619   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31625:31766   */\n    tag_636:\n        /* \"#utility.yul\":31674:31678   */\n      0x00\n        /* \"#utility.yul\":31697:31700   */\n      dup2\n        /* \"#utility.yul\":31689:31700   */\n      swap1\n      pop\n        /* \"#utility.yul\":31720:31723   */\n      dup2\n        /* \"#utility.yul\":31717:31718   */\n      0x00\n        /* \"#utility.yul\":31710:31724   */\n      mstore\n        /* \"#utility.yul\":31754:31758   */\n      0x20\n        /* \"#utility.yul\":31751:31752   */\n      0x00\n        /* \"#utility.yul\":31741:31759   */\n      keccak256\n        /* \"#utility.yul\":31733:31759   */\n      swap1\n      pop\n        /* \"#utility.yul\":31625:31766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31772:31865   */\n    tag_637:\n        /* \"#utility.yul\":31809:31815   */\n      0x00\n        /* \"#utility.yul\":31856:31858   */\n      0x20\n        /* \"#utility.yul\":31851:31853   */\n      0x1f\n        /* \"#utility.yul\":31844:31849   */\n      dup4\n        /* \"#utility.yul\":31840:31854   */\n      add\n        /* \"#utility.yul\":31836:31859   */\n      div\n        /* \"#utility.yul\":31826:31859   */\n      swap1\n      pop\n        /* \"#utility.yul\":31772:31865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31871:31978   */\n    tag_638:\n        /* \"#utility.yul\":31915:31923   */\n      0x00\n        /* \"#utility.yul\":31965:31970   */\n      dup3\n        /* \"#utility.yul\":31959:31963   */\n      dup3\n        /* \"#utility.yul\":31955:31971   */\n      shl\n        /* \"#utility.yul\":31934:31971   */\n      swap1\n      pop\n        /* \"#utility.yul\":31871:31978   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31984:32377   */\n    tag_639:\n        /* \"#utility.yul\":32053:32059   */\n      0x00\n        /* \"#utility.yul\":32103:32104   */\n      0x08\n        /* \"#utility.yul\":32091:32101   */\n      dup4\n        /* \"#utility.yul\":32087:32105   */\n      mul\n        /* \"#utility.yul\":32126:32223   */\n      tag_949\n        /* \"#utility.yul\":32156:32222   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":32145:32154   */\n      dup3\n        /* \"#utility.yul\":32126:32223   */\n      tag_638\n      jump\t// in\n    tag_949:\n        /* \"#utility.yul\":32244:32283   */\n      tag_950\n        /* \"#utility.yul\":32274:32282   */\n      dup7\n        /* \"#utility.yul\":32263:32272   */\n      dup4\n        /* \"#utility.yul\":32244:32283   */\n      tag_638\n      jump\t// in\n    tag_950:\n        /* \"#utility.yul\":32232:32283   */\n      swap6\n      pop\n        /* \"#utility.yul\":32316:32320   */\n      dup1\n        /* \"#utility.yul\":32312:32321   */\n      not\n        /* \"#utility.yul\":32305:32310   */\n      dup5\n        /* \"#utility.yul\":32301:32322   */\n      and\n        /* \"#utility.yul\":32292:32322   */\n      swap4\n      pop\n        /* \"#utility.yul\":32365:32369   */\n      dup1\n        /* \"#utility.yul\":32355:32363   */\n      dup7\n        /* \"#utility.yul\":32351:32370   */\n      and\n        /* \"#utility.yul\":32344:32349   */\n      dup5\n        /* \"#utility.yul\":32341:32371   */\n      or\n        /* \"#utility.yul\":32331:32371   */\n      swap3\n      pop\n        /* \"#utility.yul\":32060:32377   */\n      pop\n      pop\n        /* \"#utility.yul\":31984:32377   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32383:32525   */\n    tag_640:\n        /* \"#utility.yul\":32433:32442   */\n      0x00\n        /* \"#utility.yul\":32466:32519   */\n      tag_952\n        /* \"#utility.yul\":32484:32518   */\n      tag_953\n        /* \"#utility.yul\":32493:32517   */\n      tag_954\n        /* \"#utility.yul\":32511:32516   */\n      dup5\n        /* \"#utility.yul\":32493:32517   */\n      tag_570\n      jump\t// in\n    tag_954:\n        /* \"#utility.yul\":32484:32518   */\n      tag_619\n      jump\t// in\n    tag_953:\n        /* \"#utility.yul\":32466:32519   */\n      tag_570\n      jump\t// in\n    tag_952:\n        /* \"#utility.yul\":32453:32519   */\n      swap1\n      pop\n        /* \"#utility.yul\":32383:32525   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32531:32606   */\n    tag_641:\n        /* \"#utility.yul\":32574:32577   */\n      0x00\n        /* \"#utility.yul\":32595:32600   */\n      dup2\n        /* \"#utility.yul\":32588:32600   */\n      swap1\n      pop\n        /* \"#utility.yul\":32531:32606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32612:32881   */\n    tag_642:\n        /* \"#utility.yul\":32722:32761   */\n      tag_957\n        /* \"#utility.yul\":32753:32760   */\n      dup4\n        /* \"#utility.yul\":32722:32761   */\n      tag_640\n      jump\t// in\n    tag_957:\n        /* \"#utility.yul\":32783:32874   */\n      tag_958\n        /* \"#utility.yul\":32832:32873   */\n      tag_959\n        /* \"#utility.yul\":32856:32872   */\n      dup3\n        /* \"#utility.yul\":32832:32873   */\n      tag_641\n      jump\t// in\n    tag_959:\n        /* \"#utility.yul\":32824:32830   */\n      dup5\n        /* \"#utility.yul\":32817:32821   */\n      dup5\n        /* \"#utility.yul\":32811:32822   */\n      sload\n        /* \"#utility.yul\":32783:32874   */\n      tag_639\n      jump\t// in\n    tag_958:\n        /* \"#utility.yul\":32777:32781   */\n      dup3\n        /* \"#utility.yul\":32770:32875   */\n      sstore\n        /* \"#utility.yul\":32688:32881   */\n      pop\n        /* \"#utility.yul\":32612:32881   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32887:32960   */\n    tag_643:\n        /* \"#utility.yul\":32932:32935   */\n      0x00\n        /* \"#utility.yul\":32887:32960   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":32966:33155   */\n    tag_644:\n        /* \"#utility.yul\":33043:33075   */\n      tag_962\n      tag_643\n      jump\t// in\n    tag_962:\n        /* \"#utility.yul\":33084:33149   */\n      tag_963\n        /* \"#utility.yul\":33142:33148   */\n      dup2\n        /* \"#utility.yul\":33134:33140   */\n      dup5\n        /* \"#utility.yul\":33128:33132   */\n      dup5\n        /* \"#utility.yul\":33084:33149   */\n      tag_642\n      jump\t// in\n    tag_963:\n        /* \"#utility.yul\":33019:33155   */\n      pop\n        /* \"#utility.yul\":32966:33155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33161:33347   */\n    tag_645:\n        /* \"#utility.yul\":33221:33341   */\n    tag_965:\n        /* \"#utility.yul\":33238:33241   */\n      dup2\n        /* \"#utility.yul\":33231:33236   */\n      dup2\n        /* \"#utility.yul\":33228:33242   */\n      lt\n        /* \"#utility.yul\":33221:33341   */\n      iszero\n      tag_967\n      jumpi\n        /* \"#utility.yul\":33292:33331   */\n      tag_968\n        /* \"#utility.yul\":33329:33330   */\n      0x00\n        /* \"#utility.yul\":33322:33327   */\n      dup3\n        /* \"#utility.yul\":33292:33331   */\n      tag_644\n      jump\t// in\n    tag_968:\n        /* \"#utility.yul\":33265:33266   */\n      0x01\n        /* \"#utility.yul\":33258:33263   */\n      dup2\n        /* \"#utility.yul\":33254:33267   */\n      add\n        /* \"#utility.yul\":33245:33267   */\n      swap1\n      pop\n        /* \"#utility.yul\":33221:33341   */\n      jump(tag_965)\n    tag_967:\n        /* \"#utility.yul\":33161:33347   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33353:33896   */\n    tag_646:\n        /* \"#utility.yul\":33454:33456   */\n      0x1f\n        /* \"#utility.yul\":33449:33452   */\n      dup3\n        /* \"#utility.yul\":33446:33457   */\n      gt\n        /* \"#utility.yul\":33443:33889   */\n      iszero\n      tag_970\n      jumpi\n        /* \"#utility.yul\":33488:33526   */\n      tag_971\n        /* \"#utility.yul\":33520:33525   */\n      dup2\n        /* \"#utility.yul\":33488:33526   */\n      tag_636\n      jump\t// in\n    tag_971:\n        /* \"#utility.yul\":33572:33601   */\n      tag_972\n        /* \"#utility.yul\":33590:33600   */\n      dup5\n        /* \"#utility.yul\":33572:33601   */\n      tag_637\n      jump\t// in\n    tag_972:\n        /* \"#utility.yul\":33562:33570   */\n      dup2\n        /* \"#utility.yul\":33558:33602   */\n      add\n        /* \"#utility.yul\":33755:33757   */\n      0x20\n        /* \"#utility.yul\":33743:33753   */\n      dup6\n        /* \"#utility.yul\":33740:33758   */\n      lt\n        /* \"#utility.yul\":33737:33786   */\n      iszero\n      tag_973\n      jumpi\n        /* \"#utility.yul\":33776:33784   */\n      dup2\n        /* \"#utility.yul\":33761:33784   */\n      swap1\n      pop\n        /* \"#utility.yul\":33737:33786   */\n    tag_973:\n        /* \"#utility.yul\":33799:33879   */\n      tag_974\n        /* \"#utility.yul\":33855:33877   */\n      tag_975\n        /* \"#utility.yul\":33873:33876   */\n      dup6\n        /* \"#utility.yul\":33855:33877   */\n      tag_637\n      jump\t// in\n    tag_975:\n        /* \"#utility.yul\":33845:33853   */\n      dup4\n        /* \"#utility.yul\":33841:33878   */\n      add\n        /* \"#utility.yul\":33828:33839   */\n      dup3\n        /* \"#utility.yul\":33799:33879   */\n      tag_645\n      jump\t// in\n    tag_974:\n        /* \"#utility.yul\":33458:33889   */\n      pop\n      pop\n        /* \"#utility.yul\":33443:33889   */\n    tag_970:\n        /* \"#utility.yul\":33353:33896   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33902:34019   */\n    tag_647:\n        /* \"#utility.yul\":33956:33964   */\n      0x00\n        /* \"#utility.yul\":34006:34011   */\n      dup3\n        /* \"#utility.yul\":34000:34004   */\n      dup3\n        /* \"#utility.yul\":33996:34012   */\n      shr\n        /* \"#utility.yul\":33975:34012   */\n      swap1\n      pop\n        /* \"#utility.yul\":33902:34019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34025:34194   */\n    tag_648:\n        /* \"#utility.yul\":34069:34075   */\n      0x00\n        /* \"#utility.yul\":34102:34153   */\n      tag_978\n        /* \"#utility.yul\":34150:34151   */\n      0x00\n        /* \"#utility.yul\":34146:34152   */\n      not\n        /* \"#utility.yul\":34138:34143   */\n      dup5\n        /* \"#utility.yul\":34135:34136   */\n      0x08\n        /* \"#utility.yul\":34131:34144   */\n      mul\n        /* \"#utility.yul\":34102:34153   */\n      tag_647\n      jump\t// in\n    tag_978:\n        /* \"#utility.yul\":34098:34154   */\n      not\n        /* \"#utility.yul\":34183:34187   */\n      dup1\n        /* \"#utility.yul\":34177:34181   */\n      dup4\n        /* \"#utility.yul\":34173:34188   */\n      and\n        /* \"#utility.yul\":34163:34188   */\n      swap2\n      pop\n        /* \"#utility.yul\":34076:34194   */\n      pop\n        /* \"#utility.yul\":34025:34194   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34199:34494   */\n    tag_649:\n        /* \"#utility.yul\":34275:34279   */\n      0x00\n        /* \"#utility.yul\":34421:34450   */\n      tag_980\n        /* \"#utility.yul\":34446:34449   */\n      dup4\n        /* \"#utility.yul\":34440:34444   */\n      dup4\n        /* \"#utility.yul\":34421:34450   */\n      tag_648\n      jump\t// in\n    tag_980:\n        /* \"#utility.yul\":34413:34450   */\n      swap2\n      pop\n        /* \"#utility.yul\":34483:34486   */\n      dup3\n        /* \"#utility.yul\":34480:34481   */\n      0x02\n        /* \"#utility.yul\":34476:34487   */\n      mul\n        /* \"#utility.yul\":34470:34474   */\n      dup3\n        /* \"#utility.yul\":34467:34488   */\n      or\n        /* \"#utility.yul\":34459:34488   */\n      swap1\n      pop\n        /* \"#utility.yul\":34199:34494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34499:35894   */\n    tag_528:\n        /* \"#utility.yul\":34616:34653   */\n      tag_982\n        /* \"#utility.yul\":34649:34652   */\n      dup3\n        /* \"#utility.yul\":34616:34653   */\n      tag_558\n      jump\t// in\n    tag_982:\n        /* \"#utility.yul\":34718:34736   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":34710:34716   */\n      dup2\n        /* \"#utility.yul\":34707:34737   */\n      gt\n        /* \"#utility.yul\":34704:34760   */\n      iszero\n      tag_983\n      jumpi\n        /* \"#utility.yul\":34740:34758   */\n      tag_984\n      tag_580\n      jump\t// in\n    tag_984:\n        /* \"#utility.yul\":34704:34760   */\n    tag_983:\n        /* \"#utility.yul\":34784:34822   */\n      tag_985\n        /* \"#utility.yul\":34816:34820   */\n      dup3\n        /* \"#utility.yul\":34810:34821   */\n      sload\n        /* \"#utility.yul\":34784:34822   */\n      tag_190\n      jump\t// in\n    tag_985:\n        /* \"#utility.yul\":34869:34936   */\n      tag_986\n        /* \"#utility.yul\":34929:34935   */\n      dup3\n        /* \"#utility.yul\":34921:34927   */\n      dup3\n        /* \"#utility.yul\":34915:34919   */\n      dup6\n        /* \"#utility.yul\":34869:34936   */\n      tag_646\n      jump\t// in\n    tag_986:\n        /* \"#utility.yul\":34963:34964   */\n      0x00\n        /* \"#utility.yul\":34987:34991   */\n      0x20\n        /* \"#utility.yul\":34974:34991   */\n      swap1\n      pop\n        /* \"#utility.yul\":35019:35021   */\n      0x1f\n        /* \"#utility.yul\":35011:35017   */\n      dup4\n        /* \"#utility.yul\":35008:35022   */\n      gt\n        /* \"#utility.yul\":35036:35037   */\n      0x01\n        /* \"#utility.yul\":35031:35649   */\n      dup2\n      eq\n      tag_988\n      jumpi\n        /* \"#utility.yul\":35693:35694   */\n      0x00\n        /* \"#utility.yul\":35710:35716   */\n      dup5\n        /* \"#utility.yul\":35707:35784   */\n      iszero\n      tag_989\n      jumpi\n        /* \"#utility.yul\":35759:35768   */\n      dup3\n        /* \"#utility.yul\":35754:35757   */\n      dup8\n        /* \"#utility.yul\":35750:35769   */\n      add\n        /* \"#utility.yul\":35744:35770   */\n      mload\n        /* \"#utility.yul\":35735:35770   */\n      swap1\n      pop\n        /* \"#utility.yul\":35707:35784   */\n    tag_989:\n        /* \"#utility.yul\":35810:35877   */\n      tag_990\n        /* \"#utility.yul\":35870:35876   */\n      dup6\n        /* \"#utility.yul\":35863:35868   */\n      dup3\n        /* \"#utility.yul\":35810:35877   */\n      tag_649\n      jump\t// in\n    tag_990:\n        /* \"#utility.yul\":35804:35808   */\n      dup7\n        /* \"#utility.yul\":35797:35878   */\n      sstore\n        /* \"#utility.yul\":35666:35888   */\n      pop\n        /* \"#utility.yul\":35001:35888   */\n      jump(tag_987)\n        /* \"#utility.yul\":35031:35649   */\n    tag_988:\n        /* \"#utility.yul\":35083:35087   */\n      0x1f\n        /* \"#utility.yul\":35079:35088   */\n      not\n        /* \"#utility.yul\":35071:35077   */\n      dup5\n        /* \"#utility.yul\":35067:35089   */\n      and\n        /* \"#utility.yul\":35117:35154   */\n      tag_991\n        /* \"#utility.yul\":35149:35153   */\n      dup7\n        /* \"#utility.yul\":35117:35154   */\n      tag_636\n      jump\t// in\n    tag_991:\n        /* \"#utility.yul\":35176:35177   */\n      0x00\n        /* \"#utility.yul\":35190:35398   */\n    tag_992:\n        /* \"#utility.yul\":35204:35211   */\n      dup3\n        /* \"#utility.yul\":35201:35202   */\n      dup2\n        /* \"#utility.yul\":35198:35212   */\n      lt\n        /* \"#utility.yul\":35190:35398   */\n      iszero\n      tag_994\n      jumpi\n        /* \"#utility.yul\":35283:35292   */\n      dup5\n        /* \"#utility.yul\":35278:35281   */\n      dup10\n        /* \"#utility.yul\":35274:35293   */\n      add\n        /* \"#utility.yul\":35268:35294   */\n      mload\n        /* \"#utility.yul\":35260:35266   */\n      dup3\n        /* \"#utility.yul\":35253:35295   */\n      sstore\n        /* \"#utility.yul\":35334:35335   */\n      0x01\n        /* \"#utility.yul\":35326:35332   */\n      dup3\n        /* \"#utility.yul\":35322:35336   */\n      add\n        /* \"#utility.yul\":35312:35336   */\n      swap2\n      pop\n        /* \"#utility.yul\":35381:35383   */\n      0x20\n        /* \"#utility.yul\":35370:35379   */\n      dup6\n        /* \"#utility.yul\":35366:35384   */\n      add\n        /* \"#utility.yul\":35353:35384   */\n      swap5\n      pop\n        /* \"#utility.yul\":35227:35231   */\n      0x20\n        /* \"#utility.yul\":35224:35225   */\n      dup2\n        /* \"#utility.yul\":35220:35232   */\n      add\n        /* \"#utility.yul\":35215:35232   */\n      swap1\n      pop\n        /* \"#utility.yul\":35190:35398   */\n      jump(tag_992)\n    tag_994:\n        /* \"#utility.yul\":35426:35432   */\n      dup7\n        /* \"#utility.yul\":35417:35424   */\n      dup4\n        /* \"#utility.yul\":35414:35433   */\n      lt\n        /* \"#utility.yul\":35411:35590   */\n      iszero\n      tag_995\n      jumpi\n        /* \"#utility.yul\":35484:35493   */\n      dup5\n        /* \"#utility.yul\":35479:35482   */\n      dup10\n        /* \"#utility.yul\":35475:35494   */\n      add\n        /* \"#utility.yul\":35469:35495   */\n      mload\n        /* \"#utility.yul\":35527:35575   */\n      tag_996\n        /* \"#utility.yul\":35569:35573   */\n      0x1f\n        /* \"#utility.yul\":35561:35567   */\n      dup10\n        /* \"#utility.yul\":35557:35574   */\n      and\n        /* \"#utility.yul\":35546:35555   */\n      dup3\n        /* \"#utility.yul\":35527:35575   */\n      tag_648\n      jump\t// in\n    tag_996:\n        /* \"#utility.yul\":35519:35525   */\n      dup4\n        /* \"#utility.yul\":35512:35576   */\n      sstore\n        /* \"#utility.yul\":35434:35590   */\n      pop\n        /* \"#utility.yul\":35411:35590   */\n    tag_995:\n        /* \"#utility.yul\":35636:35637   */\n      0x01\n        /* \"#utility.yul\":35632:35633   */\n      0x02\n        /* \"#utility.yul\":35624:35630   */\n      dup9\n        /* \"#utility.yul\":35620:35634   */\n      mul\n        /* \"#utility.yul\":35616:35638   */\n      add\n        /* \"#utility.yul\":35610:35614   */\n      dup9\n        /* \"#utility.yul\":35603:35639   */\n      sstore\n        /* \"#utility.yul\":35038:35649   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":35001:35888   */\n    tag_987:\n      pop\n        /* \"#utility.yul\":34591:35894   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":34499:35894   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":35900:36310   */\n    tag_541:\n        /* \"#utility.yul\":35940:35947   */\n      0x00\n        /* \"#utility.yul\":35963:35983   */\n      tag_998\n        /* \"#utility.yul\":35981:35982   */\n      dup3\n        /* \"#utility.yul\":35963:35983   */\n      tag_570\n      jump\t// in\n    tag_998:\n        /* \"#utility.yul\":35958:35983   */\n      swap2\n      pop\n        /* \"#utility.yul\":35997:36017   */\n      tag_999\n        /* \"#utility.yul\":36015:36016   */\n      dup4\n        /* \"#utility.yul\":35997:36017   */\n      tag_570\n      jump\t// in\n    tag_999:\n        /* \"#utility.yul\":35992:36017   */\n      swap3\n      pop\n        /* \"#utility.yul\":36052:36053   */\n      dup3\n        /* \"#utility.yul\":36049:36050   */\n      dup3\n        /* \"#utility.yul\":36045:36054   */\n      mul\n        /* \"#utility.yul\":36074:36104   */\n      tag_1000\n        /* \"#utility.yul\":36092:36103   */\n      dup2\n        /* \"#utility.yul\":36074:36104   */\n      tag_570\n      jump\t// in\n    tag_1000:\n        /* \"#utility.yul\":36063:36104   */\n      swap2\n      pop\n        /* \"#utility.yul\":36253:36254   */\n      dup3\n        /* \"#utility.yul\":36244:36251   */\n      dup3\n        /* \"#utility.yul\":36240:36255   */\n      div\n        /* \"#utility.yul\":36237:36238   */\n      dup5\n        /* \"#utility.yul\":36234:36256   */\n      eq\n        /* \"#utility.yul\":36214:36215   */\n      dup4\n        /* \"#utility.yul\":36207:36216   */\n      iszero\n        /* \"#utility.yul\":36187:36270   */\n      or\n        /* \"#utility.yul\":36164:36303   */\n      tag_1001\n      jumpi\n        /* \"#utility.yul\":36283:36301   */\n      tag_1002\n      tag_605\n      jump\t// in\n    tag_1002:\n        /* \"#utility.yul\":36164:36303   */\n    tag_1001:\n        /* \"#utility.yul\":35948:36310   */\n      pop\n        /* \"#utility.yul\":35900:36310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":36316:36496   */\n    tag_650:\n        /* \"#utility.yul\":36364:36441   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":36361:36362   */\n      0x00\n        /* \"#utility.yul\":36354:36442   */\n      mstore\n        /* \"#utility.yul\":36461:36465   */\n      0x12\n        /* \"#utility.yul\":36458:36459   */\n      0x04\n        /* \"#utility.yul\":36451:36466   */\n      mstore\n        /* \"#utility.yul\":36485:36489   */\n      0x24\n        /* \"#utility.yul\":36482:36483   */\n      0x00\n        /* \"#utility.yul\":36475:36490   */\n      revert\n        /* \"#utility.yul\":36502:36687   */\n    tag_544:\n        /* \"#utility.yul\":36542:36543   */\n      0x00\n        /* \"#utility.yul\":36559:36579   */\n      tag_1005\n        /* \"#utility.yul\":36577:36578   */\n      dup3\n        /* \"#utility.yul\":36559:36579   */\n      tag_570\n      jump\t// in\n    tag_1005:\n        /* \"#utility.yul\":36554:36579   */\n      swap2\n      pop\n        /* \"#utility.yul\":36593:36613   */\n      tag_1006\n        /* \"#utility.yul\":36611:36612   */\n      dup4\n        /* \"#utility.yul\":36593:36613   */\n      tag_570\n      jump\t// in\n    tag_1006:\n        /* \"#utility.yul\":36588:36613   */\n      swap3\n      pop\n        /* \"#utility.yul\":36632:36633   */\n      dup3\n        /* \"#utility.yul\":36622:36657   */\n      tag_1007\n      jumpi\n        /* \"#utility.yul\":36637:36655   */\n      tag_1008\n      tag_650\n      jump\t// in\n    tag_1008:\n        /* \"#utility.yul\":36622:36657   */\n    tag_1007:\n        /* \"#utility.yul\":36679:36680   */\n      dup3\n        /* \"#utility.yul\":36676:36677   */\n      dup3\n        /* \"#utility.yul\":36672:36681   */\n      div\n        /* \"#utility.yul\":36667:36681   */\n      swap1\n      pop\n        /* \"#utility.yul\":36502:36687   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122028005d00b2c87c680778b0200cc630739d6eba3c97893559553eff21767f5c1364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506139f88061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061023b575f3560e01c806379cc679011610139578063c29c669a116100b6578063dd62ed3e1161007a578063dd62ed3e14610665578063e1a8f3f414610695578063e7ba1012146106b1578063e85455d7146106cf578063f2fde38b146106ff5761023b565b8063c29c669a146105d5578063c658a5e3146105f1578063cc7134ba146105fb578063d048d9881461062b578063db0ed6a0146106495761023b565b80638da5cb5b116100fd5780638da5cb5b1461051d57806395d89b411461053b578063a02fba1e14610559578063a9059cbb14610575578063a906c70e146105a55761023b565b806379cc67901461048d57806379e631f4146104a95780638456cb59146104c5578063851f39d4146104cf5780638850b9c2146104ff5761023b565b806338af3eed116101c757806353e4e3cb1161018b57806353e4e3cb146103fb5780635c975abb1461041757806370a082311461043557806370d27fa014610465578063715018a6146104835761023b565b806338af3eed1461037f5780633f4ba83a1461039d57806340c10f19146103a757806342966c68146103c357806352875bc3146103df5761023b565b80631a5e62fd1161020e5780631a5e62fd146102db5780631c31f710146102f757806323b872dd1461031357806324e8933d14610343578063313ce567146103615761023b565b806306fdde031461023f578063095ea7b31461025d578063110c621d1461028d57806318160ddd146102bd575b5f80fd5b61024761071b565b6040516102549190612774565b60405180910390f35b61027760048036038101906102729190612832565b6107b9565b604051610284919061288a565b60405180910390f35b6102a760048036038101906102a291906128a3565b6107db565b6040516102b491906128dd565b60405180910390f35b6102c56107f4565b6040516102d291906128dd565b60405180910390f35b6102f560048036038101906102f091906128f6565b61080b565b005b610311600480360381019061030c91906128f6565b61088d565b005b61032d60048036038101906103289190612921565b61091b565b60405161033a919061288a565b60405180910390f35b61034b6109ca565b60405161035891906128dd565b60405180910390f35b6103696109d0565b604051610376919061298c565b60405180910390f35b6103876109d8565b60405161039491906129b4565b60405180910390f35b6103a56109fd565b005b6103c160048036038101906103bc9190612832565b610a0f565b005b6103dd60048036038101906103d891906128a3565b610ad2565b005b6103f960048036038101906103f491906128f6565b610adf565b005b61041560048036038101906104109190612afb565b610b6d565b005b61041f610d50565b60405161042c919061288a565b60405180910390f35b61044f600480360381019061044a91906128f6565b610d64565b60405161045c91906128dd565b60405180910390f35b61046d610db7565b60405161047a91906128dd565b60405180910390f35b61048b610dbd565b005b6104a760048036038101906104a29190612832565b610dd0565b005b6104c360048036038101906104be91906128f6565b610e3c565b005b6104cd610eca565b005b6104e960048036038101906104e491906128f6565b610edc565b6040516104f6919061288a565b60405180910390f35b610507610ef9565b60405161051491906129b4565b60405180910390f35b610525610f1e565b60405161053291906129b4565b60405180910390f35b610543610f53565b6040516105509190612774565b60405180910390f35b610573600480360381019061056e91906128a3565b610ff1565b005b61058f600480360381019061058a9190612832565b61103a565b60405161059c919061288a565b60405180910390f35b6105bf60048036038101906105ba91906128a3565b611083565b6040516105cc91906128dd565b60405180910390f35b6105ef60048036038101906105ea9190612b64565b61109c565b005b6105f961114a565b005b610615600480360381019061061091906128f6565b61115c565b604051610622919061288a565b60405180910390f35b610633611179565b60405161064091906128dd565b60405180910390f35b610663600480360381019061065e9190612c52565b61117f565b005b61067f600480360381019061067a9190612d01565b6114b4565b60405161068c91906128dd565b60405180910390f35b6106af60048036038101906106aa9190612d3f565b611544565b005b6106b9611649565b6040516106c691906129b4565b60405180910390f35b6106e960048036038101906106e491906128f6565b61166e565b6040516106f6919061288a565b60405180910390f35b610719600480360381019061071491906128f6565b61168b565b005b60605f61072661170f565b905080600301805461073790612dbc565b80601f016020809104026020016040519081016040528092919081815260200182805461076390612dbc565b80156107ae5780601f10610785576101008083540402835291602001916107ae565b820191905f5260205f20905b81548152906001019060200180831161079157829003601f168201915b505050505091505090565b5f806107c3611736565b90506107d081858561173d565b600191505092915050565b603d81600581106107ea575f80fd5b015f915090505481565b5f806107fe61170f565b9050806002015491505090565b61081361174f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087890612e5c565b60405180910390fd5b61088a8161168b565b50565b61089561174f565b8060335f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f04d55a8be181fb8d75b76f2d48aa0b2ee40f47e53d6e61763eeeec46feea8a2460405160405180910390a250565b5f6109246117d6565b61093b60435460425461182090919063ffffffff16565b421061094a57610949611835565b5b5f61095c85610957611736565b6114b4565b9050828110156109a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099890612eea565b60405180910390fd5b6109b5856109ad611736565b85840361173d565b6109c0858585611a43565b9150509392505050565b60425481565b5f6012905090565b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a0561174f565b610a0d611ba7565b565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590612f78565b60405180910390fd5b610ab560435460425461182090919063ffffffff16565b4210610ac457610ac3611835565b5b610ace8282611c07565b5050565b610adc3382611c86565b50565b610ae761174f565b8060325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f915d8b94cdcbf4fa1b4c768b15f63b99aee21096b9d04fe1938f45833036106d60405160405180910390a250565b610b7561174f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82600460058110610baa57610ba9612f96565b5b602002015114610bef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be69061300d565b60405180910390fd5b5f5b6005811015610cee57614e20828260058110610c1057610c0f612f96565b5b60200201511115610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90613075565b60405180910390fd5b5f811115610cdb5782600182610c6c91906130c0565b60058110610c7d57610c7c612f96565b5b6020020151838260058110610c9557610c94612f96565b5b602002015111610cda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd190613163565b60405180910390fd5b5b8080610ce690613181565b915050610bf1565b50816038906005610d00929190612649565b5080603d906005610d12929190612649565b507ffca5dd7612680a40f4851bb137ecc39852bd2a1a3cc176efbb39affa8ce972148282604051610d4492919061326d565b60405180910390a15050565b5f805f9054906101000a900460ff16905090565b5f80610d6e61170f565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b614e2081565b610dc561174f565b610dce5f611d05565b565b5f610ddb83336114b4565b905081811015610e20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1790613305565b60405180910390fd5b610e2d833384840361173d565b610e378383611c86565b505050565b610e4461174f565b8060345f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f25cf73d41a7a2f5baa3ed34b7a72144453377d3d6c59b74db14e0ff168fd1fa960405160405180910390a250565b610ed261174f565b610eda611dd6565b565b6036602052805f5260405f205f915054906101000a900460ff1681565b60345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610f28611e37565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610f5e61170f565b9050806004018054610f6f90612dbc565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9b90612dbc565b8015610fe65780601f10610fbd57610100808354040283529160200191610fe6565b820191905f5260205f20905b815481529060010190602001808311610fc957829003601f168201915b505050505091505090565b610ff961174f565b806043819055507ff759d32ec37fe15560fbb2ad08f9ea31689d826215d24d6a6e2e740c517c66db8160405161102f91906128dd565b60405180910390a150565b5f6110436117d6565b61105a60435460425461182090919063ffffffff16565b421061106957611068611835565b5b61107b611074611736565b8484611a43565b905092915050565b60388160058110611092575f80fd5b015f915090505481565b6110a461174f565b8060375f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ffa4a2b2457d2065452473bed7d55c8fa2f65fc4a1eff1ebdaf14a1b7281e77738260405161113e919061288a565b60405180910390a25050565b61115261174f565b61115a610dbd565b565b6035602052805f5260405f205f915054906101000a900460ff1681565b60435481565b5f611188611e5e565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156111d05750825b90505f60018367ffffffffffffffff1614801561120357505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611211575080155b15611248576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315611295576001855f0160086101000a81548160ff0219169083151502179055505b61129f8a8a611e85565b6112a833611e9b565b6112b0611eaf565b8760325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660335f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560345f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060a00160405280683635c9adc5dea00000815260200169010f0cf064dd59200000815260200169021e19e0c9bab24000008152602001690a968163f0a57b40000081526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81525060389060056113ee929190612649565b506040518060a001604052806103e861ffff16815260200161032061ffff16815260200161025861ffff16815260200161019061ffff16815260200160c861ffff16815250603d906005611443929190612689565b506201518060438190555083156114a8575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161149f9190613378565b60405180910390a15b50505050505050505050565b5f806114be61170f565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b61154c61174f565b8160355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508060365f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167f56ef0fe49f8ee42d7982bb42d42fa7b8d1370ec36d0f8cb83802a7f74215027d838360405161163c929190613391565b60405180910390a2505050565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6037602052805f5260405f205f915054906101000a900460ff1681565b61169361174f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611703575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116fa91906129b4565b60405180910390fd5b61170c81611d05565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b61174a8383836001611ec1565b505050565b611757611736565b73ffffffffffffffffffffffffffffffffffffffff16611775610f1e565b73ffffffffffffffffffffffffffffffffffffffff16146117d457611798611736565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117cb91906129b4565b60405180910390fd5b565b6117de610d50565b1561181e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181590613402565b60405180910390fd5b565b5f818361182d9190613420565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff1660345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a3a575f8060345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f0902f1ac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516119539190613497565b5f60405180830381855afa9150503d805f811461198b576040519150601f19603f3d011682016040523d82523d5f602084013e611990565b606091505b5091509150816119d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119cc906134f7565b60405180910390fd5b5f818060200190518101906119ea9190613529565b9050806119f56107f4565b1115611a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2d9061359e565b60405180910390fd5b5050505b42604281905550565b5f60355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680611adf575060365f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b80611b30575060375f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15611b4557611b4084848461209e565b611b9c565b5f611b4f8361218e565b9050611b7d8560335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361209e565b611b9a8585611b95848761225290919063ffffffff16565b61209e565b505b600190509392505050565b611baf612267565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611bf0611736565b604051611bfd91906129b4565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c77575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c6e91906129b4565b60405180910390fd5b611c825f83836122b0565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cf6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ced91906129b4565b60405180910390fd5b611d01825f836122b0565b5050565b5f611d0e611e37565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b611dde6117d6565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e20611736565b604051611e2d91906129b4565b60405180910390a1565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611e8d6124df565b611e97828261251f565b5050565b611ea36124df565b611eac8161255b565b50565b611eb76124df565b611ebf6125df565b565b5f611eca61170f565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611f3c575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611f3391906129b4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611fac575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611fa391906129b4565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115612097578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161208e91906128dd565b60405180910390a35b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361210e575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161210591906129b4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361217e575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161217591906129b4565b60405180910390fd5b6121898383836122b0565b505050565b5f805f90505b600581101561221157603881600581106121b1576121b0612f96565b5b015483116121fe576121f6620186a06121e8603d84600581106121d7576121d6612f96565b5b01548661260190919063ffffffff16565b61261690919063ffffffff16565b91505061224d565b808061220990613181565b915050612194565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161224490613606565b60405180910390fd5b919050565b5f818361225f91906130c0565b905092915050565b61226f610d50565b6122ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a59061366e565b60405180910390fd5b565b5f6122b961170f565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361230d5781816002015f8282546123019190613420565b925050819055506123df565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015612398578481846040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161238f9392919061368c565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036124285781816002015f8282540392505081905550612474565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124d191906128dd565b60405180910390a350505050565b6124e761262b565b61251d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6125276124df565b5f61253061170f565b9050828160030190816125439190613855565b50818160040190816125559190613855565b50505050565b6125636124df565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125d3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016125ca91906129b4565b60405180910390fd5b6125dc81611d05565b50565b6125e76124df565b5f805f6101000a81548160ff021916908315150217905550565b5f818361260e9190613924565b905092915050565b5f81836126239190613992565b905092915050565b5f612634611e5e565b5f0160089054906101000a900460ff16905090565b8260058101928215612678579160200282015b8281111561267757825182559160200191906001019061265c565b5b50905061268591906126cf565b5090565b82600581019282156126be579160200282015b828111156126bd578251829061ffff1690559160200191906001019061269c565b5b5090506126cb91906126cf565b5090565b5b808211156126e6575f815f9055506001016126d0565b5090565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612721578082015181840152602081019050612706565b5f8484015250505050565b5f601f19601f8301169050919050565b5f612746826126ea565b61275081856126f4565b9350612760818560208601612704565b6127698161272c565b840191505092915050565b5f6020820190508181035f83015261278c818461273c565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6127ce826127a5565b9050919050565b6127de816127c4565b81146127e8575f80fd5b50565b5f813590506127f9816127d5565b92915050565b5f819050919050565b612811816127ff565b811461281b575f80fd5b50565b5f8135905061282c81612808565b92915050565b5f80604083850312156128485761284761279d565b5b5f612855858286016127eb565b92505060206128668582860161281e565b9150509250929050565b5f8115159050919050565b61288481612870565b82525050565b5f60208201905061289d5f83018461287b565b92915050565b5f602082840312156128b8576128b761279d565b5b5f6128c58482850161281e565b91505092915050565b6128d7816127ff565b82525050565b5f6020820190506128f05f8301846128ce565b92915050565b5f6020828403121561290b5761290a61279d565b5b5f612918848285016127eb565b91505092915050565b5f805f606084860312156129385761293761279d565b5b5f612945868287016127eb565b9350506020612956868287016127eb565b92505060406129678682870161281e565b9150509250925092565b5f60ff82169050919050565b61298681612971565b82525050565b5f60208201905061299f5f83018461297d565b92915050565b6129ae816127c4565b82525050565b5f6020820190506129c75f8301846129a5565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612a078261272c565b810181811067ffffffffffffffff82111715612a2657612a256129d1565b5b80604052505050565b5f612a38612794565b9050612a4482826129fe565b919050565b5f67ffffffffffffffff821115612a6357612a626129d1565b5b602082029050919050565b5f80fd5b5f612a84612a7f84612a49565b612a2f565b90508060208402830185811115612a9e57612a9d612a6e565b5b835b81811015612ac75780612ab3888261281e565b845260208401935050602081019050612aa0565b5050509392505050565b5f82601f830112612ae557612ae46129cd565b5b6005612af2848285612a72565b91505092915050565b5f806101408385031215612b1257612b1161279d565b5b5f612b1f85828601612ad1565b92505060a0612b3085828601612ad1565b9150509250929050565b612b4381612870565b8114612b4d575f80fd5b50565b5f81359050612b5e81612b3a565b92915050565b5f8060408385031215612b7a57612b7961279d565b5b5f612b87858286016127eb565b9250506020612b9885828601612b50565b9150509250929050565b5f80fd5b5f67ffffffffffffffff821115612bc057612bbf6129d1565b5b612bc98261272c565b9050602081019050919050565b828183375f83830152505050565b5f612bf6612bf184612ba6565b612a2f565b905082815260208101848484011115612c1257612c11612ba2565b5b612c1d848285612bd6565b509392505050565b5f82601f830112612c3957612c386129cd565b5b8135612c49848260208601612be4565b91505092915050565b5f805f805f60a08688031215612c6b57612c6a61279d565b5b5f86013567ffffffffffffffff811115612c8857612c876127a1565b5b612c9488828901612c25565b955050602086013567ffffffffffffffff811115612cb557612cb46127a1565b5b612cc188828901612c25565b9450506040612cd2888289016127eb565b9350506060612ce3888289016127eb565b9250506080612cf4888289016127eb565b9150509295509295909350565b5f8060408385031215612d1757612d1661279d565b5b5f612d24858286016127eb565b9250506020612d35858286016127eb565b9150509250929050565b5f805f60608486031215612d5657612d5561279d565b5b5f612d63868287016127eb565b9350506020612d7486828701612b50565b9250506040612d8586828701612b50565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612dd357607f821691505b602082108103612de657612de5612d8f565b5b50919050565b7f474946543a204e65772061646d696e2063616e6e6f7420626520746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f612e46602a836126f4565b9150612e5182612dec565b604082019050919050565b5f6020820190508181035f830152612e7381612e3a565b9050919050565b7f474946543a207472616e7366657220616d6f756e74206578636565647320616c5f8201527f6c6f77616e636500000000000000000000000000000000000000000000000000602082015250565b5f612ed46027836126f4565b9150612edf82612e7a565b604082019050919050565b5f6020820190508181035f830152612f0181612ec8565b9050919050565b7f474946543a2063616c6c6572206973206e6f742074686520737570706c79436f5f8201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000602082015250565b5f612f626028836126f4565b9150612f6d82612f08565b604082019050919050565b5f6020820190508181035f830152612f8f81612f56565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f474946543a204c6173742074696572206d757374206265206d617800000000005f82015250565b5f612ff7601b836126f4565b915061300282612fc3565b602082019050919050565b5f6020820190508181035f83015261302481612feb565b9050919050565b7f474946543a205461782070657263656e7461676520746f6f20686967680000005f82015250565b5f61305f601d836126f4565b915061306a8261302b565b602082019050919050565b5f6020820190508181035f83015261308c81613053565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6130ca826127ff565b91506130d5836127ff565b92508282039050818111156130ed576130ec613093565b5b92915050565b7f474946543a205469657273206d75737420626520696e20617363656e64696e675f8201527f206f726465720000000000000000000000000000000000000000000000000000602082015250565b5f61314d6026836126f4565b9150613158826130f3565b604082019050919050565b5f6020820190508181035f83015261317a81613141565b9050919050565b5f61318b826127ff565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036131bd576131bc613093565b5b600182019050919050565b5f60059050919050565b5f81905092915050565b5f819050919050565b6131ee816127ff565b82525050565b5f6131ff83836131e5565b60208301905092915050565b5f602082019050919050565b613220816131c8565b61322a81846131d2565b9250613235826131dc565b805f5b8381101561326557815161324c87826131f4565b96506132578361320b565b925050600181019050613238565b505050505050565b5f610140820190506132815f830185613217565b61328e60a0830184613217565b9392505050565b7f474946543a206275726e20616d6f756e74206578636565647320616c6c6f77615f8201527f6e63650000000000000000000000000000000000000000000000000000000000602082015250565b5f6132ef6023836126f4565b91506132fa82613295565b604082019050919050565b5f6020820190508181035f83015261331c816132e3565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61336261335d61335884613323565b61333f565b61332c565b9050919050565b61337281613348565b82525050565b5f60208201905061338b5f830184613369565b92915050565b5f6040820190506133a45f83018561287b565b6133b1602083018461287b565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6133ec6010836126f4565b91506133f7826133b8565b602082019050919050565b5f6020820190508181035f830152613419816133e0565b9050919050565b5f61342a826127ff565b9150613435836127ff565b925082820190508082111561344d5761344c613093565b5b92915050565b5f81519050919050565b5f81905092915050565b5f61347182613453565b61347b818561345d565b935061348b818560208601612704565b80840191505092915050565b5f6134a28284613467565b915081905092915050565b7f474946543a204661696c656420746f20636865636b20726573657276657300005f82015250565b5f6134e1601e836126f4565b91506134ec826134ad565b602082019050919050565b5f6020820190508181035f83015261350e816134d5565b9050919050565b5f8151905061352381612808565b92915050565b5f6020828403121561353e5761353d61279d565b5b5f61354b84828501613515565b91505092915050565b7f474946543a20496e73756666696369656e7420726573657276657300000000005f82015250565b5f613588601b836126f4565b915061359382613554565b602082019050919050565b5f6020820190508181035f8301526135b58161357c565b9050919050565b7f474946543a20496e76616c696420616d6f756e740000000000000000000000005f82015250565b5f6135f06014836126f4565b91506135fb826135bc565b602082019050919050565b5f6020820190508181035f83015261361d816135e4565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6136586014836126f4565b915061366382613624565b602082019050919050565b5f6020820190508181035f8301526136858161364c565b9050919050565b5f60608201905061369f5f8301866129a5565b6136ac60208301856128ce565b6136b960408301846128ce565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261371d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826136e2565b61372786836136e2565b95508019841693508086168417925050509392505050565b5f61375961375461374f846127ff565b61333f565b6127ff565b9050919050565b5f819050919050565b6137728361373f565b61378661377e82613760565b8484546136ee565b825550505050565b5f90565b61379a61378e565b6137a5818484613769565b505050565b5b818110156137c8576137bd5f82613792565b6001810190506137ab565b5050565b601f82111561380d576137de816136c1565b6137e7846136d3565b810160208510156137f6578190505b61380a613802856136d3565b8301826137aa565b50505b505050565b5f82821c905092915050565b5f61382d5f1984600802613812565b1980831691505092915050565b5f613845838361381e565b9150826002028217905092915050565b61385e826126ea565b67ffffffffffffffff811115613877576138766129d1565b5b6138818254612dbc565b61388c8282856137cc565b5f60209050601f8311600181146138bd575f84156138ab578287015190505b6138b5858261383a565b86555061391c565b601f1984166138cb866136c1565b5f5b828110156138f2578489015182556001820191506020850194506020810190506138cd565b8683101561390f578489015161390b601f89168261381e565b8355505b6001600288020188555050505b505050505050565b5f61392e826127ff565b9150613939836127ff565b9250828202613947816127ff565b9150828204841483151761395e5761395d613093565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61399c826127ff565b91506139a7836127ff565b9250826139b7576139b6613965565b5b82820490509291505056fea264697066735822122028005d00b2c87c680778b0200cc630739d6eba3c97893559553eff21767f5c1364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F8 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xC29C669A GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xE1A8F3F4 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xE7BA1012 EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xE85455D7 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6FF JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0xC29C669A EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xC658A5E3 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0xCC7134BA EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0xD048D988 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xDB0ED6A0 EQ PUSH2 0x649 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xA02FBA1E EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xA906C70E EQ PUSH2 0x5A5 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x79E631F4 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x851F39D4 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x8850B9C2 EQ PUSH2 0x4FF JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x38AF3EED GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x53E4E3CB GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x53E4E3CB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x70D27FA0 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x483 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x52875BC3 EQ PUSH2 0x3DF JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x1A5E62FD GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x1A5E62FD EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x1C31F710 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x24E8933D EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x361 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x110C621D EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x247 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2921 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x2832 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2AFB JUMP JUMPDEST PUSH2 0xB6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46D PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48B PUSH2 0xDBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x2832 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CD PUSH2 0xECA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x507 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x525 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0xFF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F9 PUSH2 0x114A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x615 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x633 PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x663 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH2 0x117F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH2 0x1544 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B9 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x719 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x168B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x726 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x737 SWAP1 PUSH2 0x2DBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x763 SWAP1 PUSH2 0x2DBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x785 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x791 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7C3 PUSH2 0x1736 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 DUP2 DUP6 DUP6 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3D DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x7EA JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7FE PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x813 PUSH2 0x174F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x168B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x895 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x33 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4D55A8BE181FB8D75B76F2D48AA0B2EE40F47E53D6E61763EEEEC46FEEA8A24 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH2 0x924 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x93B PUSH1 0x43 SLOAD PUSH1 0x42 SLOAD PUSH2 0x1820 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT PUSH2 0x94A JUMPI PUSH2 0x949 PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x95C DUP6 PUSH2 0x957 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP1 PUSH2 0x2EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B5 DUP6 PUSH2 0x9AD PUSH2 0x1736 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x173D JUMP JUMPDEST PUSH2 0x9C0 DUP6 DUP6 DUP6 PUSH2 0x1A43 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x42 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA05 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xA0D PUSH2 0x1BA7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB5 PUSH1 0x43 SLOAD PUSH1 0x42 SLOAD PUSH2 0x1820 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT PUSH2 0xAC4 JUMPI PUSH2 0xAC3 PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH2 0xACE DUP3 DUP3 PUSH2 0x1C07 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xADC CALLER DUP3 PUSH2 0x1C86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAE7 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x915D8B94CDCBF4FA1B4C768B15F63B99AEE21096B9D04FE1938F45833036106D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xB75 PUSH2 0x174F JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x4 PUSH1 0x5 DUP2 LT PUSH2 0xBAA JUMPI PUSH2 0xBA9 PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD EQ PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE6 SWAP1 PUSH2 0x300D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xCEE JUMPI PUSH2 0x4E20 DUP3 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0xC10 JUMPI PUSH2 0xC0F PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD GT ISZERO PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4D SWAP1 PUSH2 0x3075 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0xCDB JUMPI DUP3 PUSH1 0x1 DUP3 PUSH2 0xC6C SWAP2 SWAP1 PUSH2 0x30C0 JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD GT PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0xCE6 SWAP1 PUSH2 0x3181 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBF1 JUMP JUMPDEST POP DUP2 PUSH1 0x38 SWAP1 PUSH1 0x5 PUSH2 0xD00 SWAP3 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST POP DUP1 PUSH1 0x3D SWAP1 PUSH1 0x5 PUSH2 0xD12 SWAP3 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST POP PUSH32 0xFCA5DD7612680A40F4851BB137ECC39852BD2A1A3CC176EFBB39AFFA8CE97214 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD44 SWAP3 SWAP2 SWAP1 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD6E PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E20 DUP2 JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xDCE PUSH0 PUSH2 0x1D05 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xDDB DUP4 CALLER PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE17 SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2D DUP4 CALLER DUP5 DUP5 SUB PUSH2 0x173D JUMP JUMPDEST PUSH2 0xE37 DUP4 DUP4 PUSH2 0x1C86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE44 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x34 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25CF73D41A7A2F5BAA3ED34B7A72144453377D3D6C59B74DB14E0FF168FD1FA9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xED2 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xEDA PUSH2 0x1DD6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF28 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xF5E PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xF6F SWAP1 PUSH2 0x2DBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF9B SWAP1 PUSH2 0x2DBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFBD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xFF9 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x43 DUP2 SWAP1 SSTORE POP PUSH32 0xF759D32EC37FE15560FBB2AD08F9EA31689D826215D24D6A6E2E740C517C66DB DUP2 PUSH1 0x40 MLOAD PUSH2 0x102F SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1043 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x105A PUSH1 0x43 SLOAD PUSH1 0x42 SLOAD PUSH2 0x1820 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1069 JUMPI PUSH2 0x1068 PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH2 0x107B PUSH2 0x1074 PUSH2 0x1736 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1A43 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x38 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x1092 JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x37 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA4A2B2457D2065452473BED7D55C8FA2F65FC4A1EFF1EBDAF14A1B7281E7773 DUP3 PUSH1 0x40 MLOAD PUSH2 0x113E SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1152 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x115A PUSH2 0xDBD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x43 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1188 PUSH2 0x1E5E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x11D0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1203 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1211 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1295 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x129F DUP11 DUP11 PUSH2 0x1E85 JUMP JUMPDEST PUSH2 0x12A8 CALLER PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x12B0 PUSH2 0x1EAF JUMP JUMPDEST DUP8 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x33 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x34 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x10F0CF064DD59200000 DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0xA968163F0A57B400000 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MSTORE POP PUSH1 0x38 SWAP1 PUSH1 0x5 PUSH2 0x13EE SWAP3 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3E8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x258 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC8 PUSH2 0xFFFF AND DUP2 MSTORE POP PUSH1 0x3D SWAP1 PUSH1 0x5 PUSH2 0x1443 SWAP3 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST POP PUSH3 0x15180 PUSH1 0x43 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x14A8 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x149F SWAP2 SWAP1 PUSH2 0x3378 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14BE PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x154C PUSH2 0x174F JUMP JUMPDEST DUP2 PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56EF0FE49F8EE42D7982BB42D42FA7B8D1370EC36D0F8CB83802A7F74215027D DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x163C SWAP3 SWAP2 SWAP1 PUSH2 0x3391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x37 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1693 PUSH2 0x174F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1703 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x170C DUP2 PUSH2 0x1D05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x174A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1757 PUSH2 0x1736 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1775 PUSH2 0xF1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D4 JUMPI PUSH2 0x1798 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CB SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17DE PUSH2 0xD50 JUMP JUMPDEST ISZERO PUSH2 0x181E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1815 SWAP1 PUSH2 0x3402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x182D SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A3A JUMPI PUSH0 DUP1 PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x902F1AC00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x3497 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x198B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x19D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CC SWAP1 PUSH2 0x34F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x19EA SWAP2 SWAP1 PUSH2 0x3529 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x19F5 PUSH2 0x7F4 JUMP JUMPDEST GT ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2D SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMPDEST TIMESTAMP PUSH1 0x42 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1ADF JUMPI POP PUSH1 0x36 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x1B30 JUMPI POP PUSH1 0x37 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B45 JUMPI PUSH2 0x1B40 DUP5 DUP5 DUP5 PUSH2 0x209E JUMP JUMPDEST PUSH2 0x1B9C JUMP JUMPDEST PUSH0 PUSH2 0x1B4F DUP4 PUSH2 0x218E JUMP JUMPDEST SWAP1 POP PUSH2 0x1B7D DUP6 PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x209E JUMP JUMPDEST PUSH2 0x1B9A DUP6 DUP6 PUSH2 0x1B95 DUP5 DUP8 PUSH2 0x2252 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x209E JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BAF PUSH2 0x2267 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1BF0 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BFD SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C77 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C6E SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C82 PUSH0 DUP4 DUP4 PUSH2 0x22B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CED SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D01 DUP3 PUSH0 DUP4 PUSH2 0x22B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0E PUSH2 0x1E37 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1DDE PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1E20 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2D SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E8D PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x1E97 DUP3 DUP3 PUSH2 0x251F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1EA3 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x1EAC DUP2 PUSH2 0x255B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EB7 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x1EBF PUSH2 0x25DF JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1ECA PUSH2 0x170F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F33 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FAC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA3 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x2097 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x208E SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x210E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2105 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x217E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2175 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2189 DUP4 DUP4 DUP4 PUSH2 0x22B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2211 JUMPI PUSH1 0x38 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP4 GT PUSH2 0x21FE JUMPI PUSH2 0x21F6 PUSH3 0x186A0 PUSH2 0x21E8 PUSH1 0x3D DUP5 PUSH1 0x5 DUP2 LT PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP7 PUSH2 0x2601 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2616 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x224D JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2209 SWAP1 PUSH2 0x3181 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2194 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2244 SWAP1 PUSH2 0x3606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x225F SWAP2 SWAP1 PUSH2 0x30C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x226F PUSH2 0xD50 JUMP JUMPDEST PUSH2 0x22AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A5 SWAP1 PUSH2 0x366E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x22B9 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x230D JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2301 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x23DF JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x2398 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x368C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2428 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2474 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x24D1 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x24E7 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x251D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2527 PUSH2 0x24DF JUMP JUMPDEST PUSH0 PUSH2 0x2530 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2543 SWAP2 SWAP1 PUSH2 0x3855 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2555 SWAP2 SWAP1 PUSH2 0x3855 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2563 PUSH2 0x24DF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25CA SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25DC DUP2 PUSH2 0x1D05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25E7 PUSH2 0x24DF JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x260E SWAP2 SWAP1 PUSH2 0x3924 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x2623 SWAP2 SWAP1 PUSH2 0x3992 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2634 PUSH2 0x1E5E JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2678 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2677 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x265C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2685 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x26BE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x26BD JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0xFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x269C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x26CB SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x26E6 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x26D0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2721 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2706 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2746 DUP3 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x2750 DUP2 DUP6 PUSH2 0x26F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2760 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2704 JUMP JUMPDEST PUSH2 0x2769 DUP2 PUSH2 0x272C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x278C DUP2 DUP5 PUSH2 0x273C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27CE DUP3 PUSH2 0x27A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27DE DUP2 PUSH2 0x27C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x27E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27F9 DUP2 PUSH2 0x27D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2811 DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP2 EQ PUSH2 0x281B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x282C DUP2 PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2848 JUMPI PUSH2 0x2847 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2855 DUP6 DUP3 DUP7 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2866 DUP6 DUP3 DUP7 ADD PUSH2 0x281E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2884 DUP2 PUSH2 0x2870 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x289D PUSH0 DUP4 ADD DUP5 PUSH2 0x287B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28B8 JUMPI PUSH2 0x28B7 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C5 DUP5 DUP3 DUP6 ADD PUSH2 0x281E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D7 DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x28CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x290B JUMPI PUSH2 0x290A PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2918 DUP5 DUP3 DUP6 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2938 JUMPI PUSH2 0x2937 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2945 DUP7 DUP3 DUP8 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2956 DUP7 DUP3 DUP8 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2967 DUP7 DUP3 DUP8 ADD PUSH2 0x281E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2986 DUP2 PUSH2 0x2971 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x299F PUSH0 DUP4 ADD DUP5 PUSH2 0x297D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29AE DUP2 PUSH2 0x27C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x29A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2A07 DUP3 PUSH2 0x272C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A26 JUMPI PUSH2 0x2A25 PUSH2 0x29D1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A38 PUSH2 0x2794 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A44 DUP3 DUP3 PUSH2 0x29FE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A63 JUMPI PUSH2 0x2A62 PUSH2 0x29D1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x2A84 PUSH2 0x2A7F DUP5 PUSH2 0x2A49 JUMP JUMPDEST PUSH2 0x2A2F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2A9E JUMPI PUSH2 0x2A9D PUSH2 0x2A6E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AC7 JUMPI DUP1 PUSH2 0x2AB3 DUP9 DUP3 PUSH2 0x281E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AA0 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AE5 JUMPI PUSH2 0x2AE4 PUSH2 0x29CD JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH2 0x2AF2 DUP5 DUP3 DUP6 PUSH2 0x2A72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x140 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B12 JUMPI PUSH2 0x2B11 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B1F DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2B30 DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B43 DUP2 PUSH2 0x2870 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B5E DUP2 PUSH2 0x2B3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B7A JUMPI PUSH2 0x2B79 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B87 DUP6 DUP3 DUP7 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B98 DUP6 DUP3 DUP7 ADD PUSH2 0x2B50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC0 JUMPI PUSH2 0x2BBF PUSH2 0x29D1 JUMP JUMPDEST JUMPDEST PUSH2 0x2BC9 DUP3 PUSH2 0x272C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BF6 PUSH2 0x2BF1 DUP5 PUSH2 0x2BA6 JUMP JUMPDEST PUSH2 0x2A2F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C12 JUMPI PUSH2 0x2C11 PUSH2 0x2BA2 JUMP JUMPDEST JUMPDEST PUSH2 0x2C1D DUP5 DUP3 DUP6 PUSH2 0x2BD6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C39 JUMPI PUSH2 0x2C38 PUSH2 0x29CD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C49 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C6B JUMPI PUSH2 0x2C6A PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C88 JUMPI PUSH2 0x2C87 PUSH2 0x27A1 JUMP JUMPDEST JUMPDEST PUSH2 0x2C94 DUP9 DUP3 DUP10 ADD PUSH2 0x2C25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB5 JUMPI PUSH2 0x2CB4 PUSH2 0x27A1 JUMP JUMPDEST JUMPDEST PUSH2 0x2CC1 DUP9 DUP3 DUP10 ADD PUSH2 0x2C25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2CD2 DUP9 DUP3 DUP10 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2CE3 DUP9 DUP3 DUP10 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2CF4 DUP9 DUP3 DUP10 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D17 JUMPI PUSH2 0x2D16 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D24 DUP6 DUP3 DUP7 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D35 DUP6 DUP3 DUP7 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D56 JUMPI PUSH2 0x2D55 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D63 DUP7 DUP3 DUP8 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2D74 DUP7 DUP3 DUP8 ADD PUSH2 0x2B50 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D85 DUP7 DUP3 DUP8 ADD PUSH2 0x2B50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2DD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2DE6 JUMPI PUSH2 0x2DE5 PUSH2 0x2D8F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A204E65772061646D696E2063616E6E6F7420626520746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E46 PUSH1 0x2A DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E51 DUP3 PUSH2 0x2DEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E73 DUP2 PUSH2 0x2E3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A207472616E7366657220616D6F756E74206578636565647320616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6F77616E636500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2ED4 PUSH1 0x27 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EDF DUP3 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F01 DUP2 PUSH2 0x2EC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A2063616C6C6572206973206E6F742074686520737570706C79436F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74726F6C6C6572000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F62 PUSH1 0x28 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6D DUP3 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F8F DUP2 PUSH2 0x2F56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x474946543A204C6173742074696572206D757374206265206D61780000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FF7 PUSH1 0x1B DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3002 DUP3 PUSH2 0x2FC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3024 DUP2 PUSH2 0x2FEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A205461782070657263656E7461676520746F6F2068696768000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x305F PUSH1 0x1D DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x306A DUP3 PUSH2 0x302B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x308C DUP2 PUSH2 0x3053 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x30CA DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH2 0x30D5 DUP4 PUSH2 0x27FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x30ED JUMPI PUSH2 0x30EC PUSH2 0x3093 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x474946543A205469657273206D75737420626520696E20617363656E64696E67 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F726465720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x314D PUSH1 0x26 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3158 DUP3 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x317A DUP2 PUSH2 0x3141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x318B DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x31BD JUMPI PUSH2 0x31BC PUSH2 0x3093 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31EE DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31FF DUP4 DUP4 PUSH2 0x31E5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3220 DUP2 PUSH2 0x31C8 JUMP JUMPDEST PUSH2 0x322A DUP2 DUP5 PUSH2 0x31D2 JUMP JUMPDEST SWAP3 POP PUSH2 0x3235 DUP3 PUSH2 0x31DC JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3265 JUMPI DUP2 MLOAD PUSH2 0x324C DUP8 DUP3 PUSH2 0x31F4 JUMP JUMPDEST SWAP7 POP PUSH2 0x3257 DUP4 PUSH2 0x320B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3238 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x3281 PUSH0 DUP4 ADD DUP6 PUSH2 0x3217 JUMP JUMPDEST PUSH2 0x328E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3217 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x474946543A206275726E20616D6F756E74206578636565647320616C6C6F7761 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E63650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32EF PUSH1 0x23 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x32FA DUP3 PUSH2 0x3295 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x331C DUP2 PUSH2 0x32E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3362 PUSH2 0x335D PUSH2 0x3358 DUP5 PUSH2 0x3323 JUMP JUMPDEST PUSH2 0x333F JUMP JUMPDEST PUSH2 0x332C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3372 DUP2 PUSH2 0x3348 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x338B PUSH0 DUP4 ADD DUP5 PUSH2 0x3369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33A4 PUSH0 DUP4 ADD DUP6 PUSH2 0x287B JUMP JUMPDEST PUSH2 0x33B1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x287B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x33EC PUSH1 0x10 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x33F7 DUP3 PUSH2 0x33B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3419 DUP2 PUSH2 0x33E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x342A DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH2 0x3435 DUP4 PUSH2 0x27FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x344D JUMPI PUSH2 0x344C PUSH2 0x3093 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3471 DUP3 PUSH2 0x3453 JUMP JUMPDEST PUSH2 0x347B DUP2 DUP6 PUSH2 0x345D JUMP JUMPDEST SWAP4 POP PUSH2 0x348B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2704 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x34A2 DUP3 DUP5 PUSH2 0x3467 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x474946543A204661696C656420746F20636865636B2072657365727665730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x34E1 PUSH1 0x1E DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x34EC DUP3 PUSH2 0x34AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x350E DUP2 PUSH2 0x34D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3523 DUP2 PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x353E JUMPI PUSH2 0x353D PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x354B DUP5 DUP3 DUP6 ADD PUSH2 0x3515 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x474946543A20496E73756666696369656E742072657365727665730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3588 PUSH1 0x1B DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3593 DUP3 PUSH2 0x3554 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35B5 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A20496E76616C696420616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35F0 PUSH1 0x14 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x35FB DUP3 PUSH2 0x35BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x361D DUP2 PUSH2 0x35E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3658 PUSH1 0x14 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3663 DUP3 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3685 DUP2 PUSH2 0x364C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x369F PUSH0 DUP4 ADD DUP7 PUSH2 0x29A5 JUMP JUMPDEST PUSH2 0x36AC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x28CE JUMP JUMPDEST PUSH2 0x36B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x28CE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x371D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x36E2 JUMP JUMPDEST PUSH2 0x3727 DUP7 DUP4 PUSH2 0x36E2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3759 PUSH2 0x3754 PUSH2 0x374F DUP5 PUSH2 0x27FF JUMP JUMPDEST PUSH2 0x333F JUMP JUMPDEST PUSH2 0x27FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3772 DUP4 PUSH2 0x373F JUMP JUMPDEST PUSH2 0x3786 PUSH2 0x377E DUP3 PUSH2 0x3760 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x36EE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x379A PUSH2 0x378E JUMP JUMPDEST PUSH2 0x37A5 DUP2 DUP5 DUP5 PUSH2 0x3769 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37C8 JUMPI PUSH2 0x37BD PUSH0 DUP3 PUSH2 0x3792 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x380D JUMPI PUSH2 0x37DE DUP2 PUSH2 0x36C1 JUMP JUMPDEST PUSH2 0x37E7 DUP5 PUSH2 0x36D3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x37F6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x380A PUSH2 0x3802 DUP6 PUSH2 0x36D3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x37AA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x382D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3812 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3845 DUP4 DUP4 PUSH2 0x381E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x385E DUP3 PUSH2 0x26EA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3877 JUMPI PUSH2 0x3876 PUSH2 0x29D1 JUMP JUMPDEST JUMPDEST PUSH2 0x3881 DUP3 SLOAD PUSH2 0x2DBC JUMP JUMPDEST PUSH2 0x388C DUP3 DUP3 DUP6 PUSH2 0x37CC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x38BD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x38AB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x38B5 DUP6 DUP3 PUSH2 0x383A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x391C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x38CB DUP7 PUSH2 0x36C1 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38F2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38CD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x390F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x390B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x381E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x392E DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH2 0x3939 DUP4 PUSH2 0x27FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3947 DUP2 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x395E JUMPI PUSH2 0x395D PUSH2 0x3093 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x399C DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH2 0x39A7 DUP4 PUSH2 0x27FF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x39B7 JUMPI PUSH2 0x39B6 PUSH2 0x3965 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 STOP 0x5D STOP 0xB2 0xC8 PUSH29 0x680778B0200CC630739D6EBA3C97893559553EFF21767F5C1364736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "384:7347:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_TAX_PERCENTAGE_1836": {
									"entryPoint": 3511,
									"id": 1836,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_644": {
									"entryPoint": 7813,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_672": {
									"entryPoint": 9503,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 7835,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 9563,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_480": {
									"entryPoint": 7855,
									"id": 480,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_490": {
									"entryPoint": 9695,
									"id": 490,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1076": {
									"entryPoint": 5949,
									"id": 1076,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1144": {
									"entryPoint": 7873,
									"id": 1144,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1058": {
									"entryPoint": 7302,
									"id": 1058,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 9439,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 5967,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkReserves_2471": {
									"entryPoint": 6197,
									"id": 2471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_computeTax_2419": {
									"entryPoint": 8590,
									"id": 2419,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getERC20Storage_628": {
									"entryPoint": 5903,
									"id": 628,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 7774,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 7735,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 9771,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1025": {
									"entryPoint": 7175,
									"id": 1025,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1221": {
									"entryPoint": 5942,
									"id": 1221,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_554": {
									"entryPoint": 7638,
									"id": 554,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_527": {
									"entryPoint": 6102,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_538": {
									"entryPoint": 8807,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferGIFT_2378": {
									"entryPoint": 6723,
									"id": 2378,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 7429,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_900": {
									"entryPoint": 8350,
									"id": 900,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_570": {
									"entryPoint": 7079,
									"id": 570,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_992": {
									"entryPoint": 8880,
									"id": 992,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1415": {
									"entryPoint": 6176,
									"id": 1415,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_797": {
									"entryPoint": 5300,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_821": {
									"entryPoint": 1977,
									"id": 821,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_749": {
									"entryPoint": 3428,
									"id": 749,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@beneficiary_1811": {
									"entryPoint": 2520,
									"id": 1811,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burnFrom_2235": {
									"entryPoint": 3536,
									"id": 2235,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_2197": {
									"entryPoint": 2770,
									"id": 2197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_713": {
									"entryPoint": 2512,
									"id": 713,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1460": {
									"entryPoint": 9750,
									"id": 1460,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_1975": {
									"entryPoint": 4479,
									"id": 1975,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@isExcludedFromInboundFees_1821": {
									"entryPoint": 3804,
									"id": 1821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromOutboundFees_1817": {
									"entryPoint": 4444,
									"id": 1817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isLiquidityPool_1825": {
									"entryPoint": 5742,
									"id": 1825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastReserveCheck_1838": {
									"entryPoint": 2506,
									"id": 1838,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_2185": {
									"entryPoint": 2575,
									"id": 2185,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1445": {
									"entryPoint": 9729,
									"id": 1445,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_688": {
									"entryPoint": 1819,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 3870,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2244": {
									"entryPoint": 3786,
									"id": 2244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_515": {
									"entryPoint": 3408,
									"id": 515,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceAdminControl_2525": {
									"entryPoint": 4426,
									"id": 2525,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_136": {
									"entryPoint": 3517,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveCheckPeriod_1840": {
									"entryPoint": 4473,
									"id": 1840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveConsumer_1813": {
									"entryPoint": 3833,
									"id": 1813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBeneficiary_2085": {
									"entryPoint": 2189,
									"id": 2085,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeExclusion_2115": {
									"entryPoint": 5444,
									"id": 2115,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setLiquidityPool_2136": {
									"entryPoint": 4252,
									"id": 2136,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setReserveCheckPeriod_2168": {
									"entryPoint": 4081,
									"id": 2168,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setReserveConsumer_2152": {
									"entryPoint": 3644,
									"id": 2152,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSupplyController_2069": {
									"entryPoint": 2783,
									"id": 2069,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxParameters_2053": {
									"entryPoint": 2925,
									"id": 2053,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_1430": {
									"entryPoint": 8786,
									"id": 1430,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supplyController_1809": {
									"entryPoint": 5705,
									"id": 1809,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_704": {
									"entryPoint": 3923,
									"id": 704,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxPercentages_1833": {
									"entryPoint": 2011,
									"id": 1833,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@taxTiers_1829": {
									"entryPoint": 4227,
									"id": 1829,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_729": {
									"entryPoint": 2036,
									"id": 729,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferAdminControl_2516": {
									"entryPoint": 2059,
									"id": 2516,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferFrom_2323": {
									"entryPoint": 2331,
									"id": 2323,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 5771,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_2275": {
									"entryPoint": 4154,
									"id": 2275,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_2253": {
									"entryPoint": 2557,
									"id": 2253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 10866,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 11236,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 10219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 10961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 11088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 11301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 13589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 11521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10529,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 11108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_boolt_bool": {
									"entryPoint": 11583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$5_memory_ptrt_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 11003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_address": {
									"entryPoint": 11346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 13609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 12788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 12823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 10363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 13161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 13027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 12773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 10621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13964,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed": {
									"entryPoint": 12909,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 13201,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 13176,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 13061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 10636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 10132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 10825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 11174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 12764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 14017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 12744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 13395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$5_memory_ptr": {
									"entryPoint": 12811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack": {
									"entryPoint": 12754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 13405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 13344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 14738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 14628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 14284,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 10180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 13091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 13100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 14250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 13128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 14143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 14421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 11222,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9988,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 14035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 11708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 14394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 10750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 13119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 12673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 14366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 12435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 14693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 11663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 14176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 10701,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 10862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 11170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 10145,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10141,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 10028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 14050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 14354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 14226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 13860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63": {
									"entryPoint": 12227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2": {
									"entryPoint": 13485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d": {
									"entryPoint": 13652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 13240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48": {
									"entryPoint": 12531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4": {
									"entryPoint": 11756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac": {
									"entryPoint": 12040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda": {
									"entryPoint": 12331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1": {
									"entryPoint": 13756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f": {
									"entryPoint": 12949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e": {
									"entryPoint": 11898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 14062,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 14185,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 14222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:36690:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:10",
																"statements": []
															},
															"src": "378:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:10",
														"type": ""
													}
												],
												"src": "539:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:10",
														"type": ""
													}
												],
												"src": "647:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:10",
														"type": ""
													}
												],
												"src": "1030:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:10",
														"type": ""
													}
												],
												"src": "1349:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:10",
														"type": ""
													}
												],
												"src": "1676:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:10",
														"type": ""
													}
												],
												"src": "1808:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:10"
															},
															"nodeType": "YulIf",
															"src": "1963:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:10",
														"type": ""
													}
												],
												"src": "1910:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:10",
														"type": ""
													}
												],
												"src": "2038:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:10",
														"type": ""
													}
												],
												"src": "2183:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:10"
															},
															"nodeType": "YulIf",
															"src": "2319:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:10",
														"type": ""
													}
												],
												"src": "2266:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:10",
														"type": ""
													}
												],
												"src": "2394:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:10"
															},
															"nodeType": "YulIf",
															"src": "2632:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:10",
														"type": ""
													}
												],
												"src": "2539:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:10",
														"type": ""
													}
												],
												"src": "3019:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:10",
														"type": ""
													}
												],
												"src": "3115:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:10",
														"type": ""
													}
												],
												"src": "3230:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3512:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3558:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3560:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3560:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3560:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3533:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3542:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3529:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3554:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:32:10"
															},
															"nodeType": "YulIf",
															"src": "3522:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3651:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3666:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3680:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3670:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3695:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3730:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3741:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3726:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3726:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3750:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3705:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3695:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3482:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3493:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3505:6:10",
														"type": ""
													}
												],
												"src": "3446:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3846:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3863:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3886:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3868:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3868:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3856:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3856:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3856:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3834:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3841:3:10",
														"type": ""
													}
												],
												"src": "3781:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4003:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4013:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4025:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4021:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4013:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4093:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4117:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4102:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4102:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4049:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4049:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3975:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3987:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3998:4:10",
														"type": ""
													}
												],
												"src": "3905:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4199:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4245:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4247:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4247:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4247:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4220:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4229:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4216:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4216:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4241:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4212:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:32:10"
															},
															"nodeType": "YulIf",
															"src": "4209:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4338:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4353:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4367:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4357:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4382:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4417:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4428:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4413:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4413:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4437:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4392:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4392:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4382:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4169:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4180:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4192:6:10",
														"type": ""
													}
												],
												"src": "4133:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4568:519:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4614:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4616:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4616:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4616:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4589:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4598:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4585:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4585:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4610:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4581:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4581:32:10"
															},
															"nodeType": "YulIf",
															"src": "4578:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4707:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4722:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4736:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4726:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4751:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4786:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4797:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4782:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4782:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4806:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4761:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4751:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4834:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4849:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4863:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4853:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4879:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4914:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4925:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4910:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4910:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4934:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4889:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4889:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4879:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4962:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4977:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4991:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5007:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5042:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5053:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5038:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5038:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5062:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5017:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5017:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5007:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4522:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4533:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4545:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4553:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4561:6:10",
														"type": ""
													}
												],
												"src": "4468:619:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5136:43:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5146:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5161:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5168:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5157:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5157:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5146:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5118:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5128:7:10",
														"type": ""
													}
												],
												"src": "5093:86:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5246:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5284:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5268:15:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5268:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5256:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5256:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5256:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5241:3:10",
														"type": ""
													}
												],
												"src": "5185:112:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5397:120:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5407:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5419:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5430:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5415:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5415:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5407:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5483:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5496:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5507:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5443:39:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5443:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5443:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5369:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5381:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5392:4:10",
														"type": ""
													}
												],
												"src": "5303:214:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5576:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:10",
														"type": ""
													}
												],
												"src": "5523:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:10",
														"type": ""
													}
												],
												"src": "5647:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5964:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5981:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5984:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5974:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5974:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5875:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6026:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6043:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6046:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6036:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6036:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6036:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6140:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6143:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6133:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6133:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6133:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6164:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6167:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6157:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6157:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5998:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6227:238:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6237:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6259:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6289:4:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6267:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6267:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6255:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6241:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6406:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6408:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6408:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6408:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6349:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6361:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6346:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6346:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6385:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6397:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6382:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6382:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6343:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6343:62:10"
															},
															"nodeType": "YulIf",
															"src": "6340:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6444:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6448:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6437:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6437:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6437:22:10"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6213:6:10",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6221:4:10",
														"type": ""
													}
												],
												"src": "6184:281:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6512:88:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6522:30:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6532:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:20:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6522:6:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6581:6:10"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6589:4:10"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6561:19:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6561:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6561:33:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6496:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6505:6:10",
														"type": ""
													}
												],
												"src": "6471:129:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6686:169:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6791:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6793:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6793:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6793:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6763:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6771:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6760:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6760:30:10"
															},
															"nodeType": "YulIf",
															"src": "6757:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6835:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6843:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6831:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:17:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6823:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6670:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6681:4:10",
														"type": ""
													}
												],
												"src": "6606:249:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6950:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6970:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6960:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6960:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6960:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "6861:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7102:543:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7112:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7192:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$5_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7137:54:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7137:62:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7121:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7121:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7112:5:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7209:16:10",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "7220:5:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7213:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7235:44:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7253:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7265:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7273:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7261:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7261:17:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7249:30:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7239:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7307:103:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "7321:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7321:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7321:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7294:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7302:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7291:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7291:15:10"
															},
															"nodeType": "YulIf",
															"src": "7288:122:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7495:144:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7510:21:10",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "7528:3:10"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "7514:10:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7552:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "7578:10:10"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "7590:3:10"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "7557:20:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7557:37:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7545:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7545:50:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7545:50:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7608:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7619:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7624:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7615:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7615:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7608:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7448:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7453:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7445:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7461:25:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7463:21:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7474:3:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7479:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7470:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7470:14:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7463:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7423:21:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7425:17:10",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "7436:6:10"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "7429:3:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7419:220:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7072:6:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7080:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7088:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7096:5:10",
														"type": ""
													}
												],
												"src": "7002:643:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7744:264:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7793:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7795:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7795:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7795:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7772:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7780:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7768:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7768:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7787:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7764:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7764:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7757:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7757:35:10"
															},
															"nodeType": "YulIf",
															"src": "7754:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7885:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7899:4:10",
																"type": "",
																"value": "0x05"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7889:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7912:90:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7990:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7998:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7921:60:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:81:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7912:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7722:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7730:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7738:5:10",
														"type": ""
													}
												],
												"src": "7669:339:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8143:439:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8190:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8192:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8192:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8192:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8164:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8173:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8160:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8160:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8185:3:10",
																		"type": "",
																		"value": "320"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8156:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8156:33:10"
															},
															"nodeType": "YulIf",
															"src": "8153:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "8283:140:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8298:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8312:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8302:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8327:86:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8385:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8396:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8381:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8381:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8405:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$5_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8337:43:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8337:76:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8327:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8433:142:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8448:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8462:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8452:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8479:86:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8537:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8548:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8533:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8533:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8557:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$5_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8489:43:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8489:76:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8479:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$5_memory_ptrt_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8105:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8116:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8128:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8136:6:10",
														"type": ""
													}
												],
												"src": "8014:568:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8628:76:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8682:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8691:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8694:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8684:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8684:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8684:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8651:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8673:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "8658:14:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8658:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8648:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8648:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8641:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8641:40:10"
															},
															"nodeType": "YulIf",
															"src": "8638:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8621:5:10",
														"type": ""
													}
												],
												"src": "8588:116:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:84:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8769:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8791:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8778:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8778:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8831:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8807:23:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8807:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8807:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8753:5:10",
														"type": ""
													}
												],
												"src": "8710:133:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8929:388:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8975:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8977:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8977:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8977:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8950:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8959:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8946:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8946:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8971:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8942:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8942:32:10"
															},
															"nodeType": "YulIf",
															"src": "8939:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "9068:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9083:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9097:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9087:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9112:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9147:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9158:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9143:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9143:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9167:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9122:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9122:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9112:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9195:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9210:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9224:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9214:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9240:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9272:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9283:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9268:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9268:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9292:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "9250:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9250:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9240:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8891:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8902:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8914:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8922:6:10",
														"type": ""
													}
												],
												"src": "8849:468:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9412:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9429:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9432:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9422:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9422:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9422:12:10"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "9323:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9513:241:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9618:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9620:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9620:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9620:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9590:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9598:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9587:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9587:30:10"
															},
															"nodeType": "YulIf",
															"src": "9584:56:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9650:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9680:6:10"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9658:21:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9658:29:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9650:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9724:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9736:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9742:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9732:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9732:15:10"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9724:4:10"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9497:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9508:4:10",
														"type": ""
													}
												],
												"src": "9446:308:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9824:82:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9847:3:10"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9852:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9857:6:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "9834:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9834:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9834:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9884:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9889:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9880:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9880:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9898:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9873:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9873:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9873:27:10"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9806:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9811:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9816:6:10",
														"type": ""
													}
												],
												"src": "9760:146:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9996:341:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10006:75:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10073:6:10"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10031:41:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10031:49:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10015:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10015:66:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10006:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10097:5:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10104:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10090:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10090:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10120:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10135:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10142:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10131:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10131:16:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10124:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10185:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "10187:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10187:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10187:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10166:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10171:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10162:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10162:16:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10180:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10159:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10159:25:10"
															},
															"nodeType": "YulIf",
															"src": "10156:112:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10314:3:10"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10319:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10324:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10277:36:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10277:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10277:54:10"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9969:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9974:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9982:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9990:5:10",
														"type": ""
													}
												],
												"src": "9912:425:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10419:278:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10468:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "10470:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10470:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10470:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10447:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10455:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10443:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10443:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10462:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10439:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10439:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10432:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10432:35:10"
															},
															"nodeType": "YulIf",
															"src": "10429:122:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10560:34:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10587:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10574:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10574:20:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10564:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10603:88:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10664:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10672:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10660:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10660:17:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10679:6:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10687:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10612:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10612:79:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10603:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10397:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10405:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10413:5:10",
														"type": ""
													}
												],
												"src": "10357:340:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10857:1117:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10904:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10906:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10906:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10906:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10878:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10887:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10874:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10874:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10899:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10870:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10870:33:10"
															},
															"nodeType": "YulIf",
															"src": "10867:120:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "10997:287:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11012:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11043:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11054:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11039:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11039:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11026:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11026:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11016:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11104:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11106:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11106:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11106:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11076:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11084:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11073:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11073:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "11070:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11201:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11246:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11257:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11242:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11242:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11266:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11211:30:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11211:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11201:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11294:288:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11309:46:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11340:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11351:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11336:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11336:18:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11323:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11323:32:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11313:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11402:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11404:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11404:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11404:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11374:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11382:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11371:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11371:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "11368:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11499:73:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11544:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11555:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11540:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11540:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11564:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11509:30:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11509:63:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11499:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11592:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11607:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11621:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11611:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11637:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11672:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11683:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11668:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11668:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11692:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11647:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11647:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11637:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11720:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11735:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11749:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11739:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11765:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11800:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11811:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11796:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11796:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11820:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11775:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11775:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "11765:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11848:119:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11863:17:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11877:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11867:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11894:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11929:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11940:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11925:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11925:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11949:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11904:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11904:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "11894:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10795:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10806:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10818:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10826:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10834:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10842:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10850:6:10",
														"type": ""
													}
												],
												"src": "10703:1271:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12063:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12109:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12111:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12111:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12111:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12084:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12093:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12080:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12080:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12105:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12076:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12076:32:10"
															},
															"nodeType": "YulIf",
															"src": "12073:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "12202:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12217:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12231:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12221:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12246:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12281:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12292:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12277:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12277:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12301:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12256:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12256:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12246:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12329:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12344:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12358:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12348:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12374:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12409:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12420:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12405:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12405:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12429:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12384:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12384:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12374:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12025:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12036:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12048:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12056:6:10",
														"type": ""
													}
												],
												"src": "11980:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12554:513:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12600:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12602:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12602:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12602:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12575:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12584:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12571:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12571:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12596:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12567:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12567:32:10"
															},
															"nodeType": "YulIf",
															"src": "12564:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "12693:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12708:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12722:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12712:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12737:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12772:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12783:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12768:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12768:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12792:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12747:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12747:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12737:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12820:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12835:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12849:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12839:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12865:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12897:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12908:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12893:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12893:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12917:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "12875:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12875:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12865:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12945:115:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12960:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12974:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12964:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12990:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13022:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13033:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13018:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13018:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13042:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "13000:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13000:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "12990:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_boolt_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12508:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12519:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12531:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12539:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12547:6:10",
														"type": ""
													}
												],
												"src": "12460:607:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13101:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13118:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13121:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13111:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13111:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13111:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13215:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13218:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13208:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13208:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13208:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13239:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13242:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13232:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13232:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13232:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "13073:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13310:269:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13320:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13334:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13340:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13330:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13330:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13320:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13351:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13381:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13387:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13377:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13377:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "13355:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13428:51:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13442:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "13456:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13464:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "13452:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13452:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13442:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13408:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13401:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13401:26:10"
															},
															"nodeType": "YulIf",
															"src": "13398:81:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13531:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "13545:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13545:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13545:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13495:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13518:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13526:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "13515:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13515:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13492:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13492:38:10"
															},
															"nodeType": "YulIf",
															"src": "13489:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13294:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13303:6:10",
														"type": ""
													}
												],
												"src": "13259:320:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13691:123:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13713:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13721:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13709:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13709:14:10"
																	},
																	{
																		"hexValue": "474946543a204e65772061646d696e2063616e6e6f7420626520746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13725:34:10",
																		"type": "",
																		"value": "GIFT: New admin cannot be the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13702:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13702:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13702:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13781:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13789:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13777:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13777:15:10"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13794:12:10",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13770:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13770:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13770:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13683:6:10",
														"type": ""
													}
												],
												"src": "13585:229:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13966:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13976:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14042:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14047:2:10",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13983:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13983:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13976:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14148:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4",
																	"nodeType": "YulIdentifier",
																	"src": "14059:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14059:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14059:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14161:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14172:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14177:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14168:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14168:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14161:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13954:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13962:3:10",
														"type": ""
													}
												],
												"src": "13820:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14363:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14373:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14385:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14396:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14381:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14381:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14373:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14420:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14431:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14416:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14416:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14439:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14445:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14435:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14435:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14409:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14409:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14409:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14465:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14599:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14473:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14473:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14465:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14343:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14358:4:10",
														"type": ""
													}
												],
												"src": "14192:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14723:120:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14745:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14753:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14741:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14741:14:10"
																	},
																	{
																		"hexValue": "474946543a207472616e7366657220616d6f756e74206578636565647320616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14757:34:10",
																		"type": "",
																		"value": "GIFT: transfer amount exceeds al"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14734:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14734:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14734:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14813:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14821:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14809:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14809:15:10"
																	},
																	{
																		"hexValue": "6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14826:9:10",
																		"type": "",
																		"value": "lowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14802:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14802:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14802:34:10"
														}
													]
												},
												"name": "store_literal_in_memory_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14715:6:10",
														"type": ""
													}
												],
												"src": "14617:226:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14995:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15005:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15071:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15076:2:10",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15012:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15012:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15005:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15177:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e",
																	"nodeType": "YulIdentifier",
																	"src": "15088:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15088:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15088:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15190:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15201:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15206:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15197:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15197:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15190:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14983:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14991:3:10",
														"type": ""
													}
												],
												"src": "14849:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15392:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15402:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15414:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15425:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15410:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15410:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15402:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15449:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15460:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15445:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15445:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15468:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15474:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15464:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15464:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15438:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15438:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15438:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15494:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15628:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15502:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15502:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15494:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15372:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15387:4:10",
														"type": ""
													}
												],
												"src": "15221:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15752:121:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15774:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15782:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15770:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15770:14:10"
																	},
																	{
																		"hexValue": "474946543a2063616c6c6572206973206e6f742074686520737570706c79436f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15786:34:10",
																		"type": "",
																		"value": "GIFT: caller is not the supplyCo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15763:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15763:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15763:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15842:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15850:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15838:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15838:15:10"
																	},
																	{
																		"hexValue": "6e74726f6c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15855:10:10",
																		"type": "",
																		"value": "ntroller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15831:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15831:35:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15831:35:10"
														}
													]
												},
												"name": "store_literal_in_memory_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15744:6:10",
														"type": ""
													}
												],
												"src": "15646:227:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16025:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16035:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16101:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16106:2:10",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16042:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16042:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16035:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16207:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac",
																	"nodeType": "YulIdentifier",
																	"src": "16118:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16118:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16118:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16220:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16231:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16236:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16227:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16227:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16220:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16013:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16021:3:10",
														"type": ""
													}
												],
												"src": "15879:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16422:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16432:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16444:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16455:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16440:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16440:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16432:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16479:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16490:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16475:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16475:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16498:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16504:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16494:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16494:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16468:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16468:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16468:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16524:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16658:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16532:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16532:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16524:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16402:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16417:4:10",
														"type": ""
													}
												],
												"src": "16251:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16704:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16721:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16724:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16714:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16714:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16714:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16818:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16821:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16811:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16811:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16811:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16842:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16845:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16835:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16835:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16835:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16676:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16968:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16990:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16998:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16986:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16986:14:10"
																	},
																	{
																		"hexValue": "474946543a204c6173742074696572206d757374206265206d6178",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17002:29:10",
																		"type": "",
																		"value": "GIFT: Last tier must be max"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16979:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16979:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16979:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16960:6:10",
														"type": ""
													}
												],
												"src": "16862:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17191:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17201:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17267:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17272:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17208:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17208:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17201:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17373:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63",
																	"nodeType": "YulIdentifier",
																	"src": "17284:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17284:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17284:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17386:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17397:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17402:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17393:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17393:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17386:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17179:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17187:3:10",
														"type": ""
													}
												],
												"src": "17045:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17588:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17598:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17610:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17621:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17606:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17606:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17598:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17645:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17656:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17641:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17641:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17664:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17670:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17660:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17660:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17634:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17634:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17634:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17690:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17824:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17698:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17698:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17690:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17568:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17583:4:10",
														"type": ""
													}
												],
												"src": "17417:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17948:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17970:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17978:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17966:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17966:14:10"
																	},
																	{
																		"hexValue": "474946543a205461782070657263656e7461676520746f6f2068696768",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17982:31:10",
																		"type": "",
																		"value": "GIFT: Tax percentage too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17959:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17959:55:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17959:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17940:6:10",
														"type": ""
													}
												],
												"src": "17842:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18173:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18183:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18249:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18254:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18190:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18190:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18183:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18355:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda",
																	"nodeType": "YulIdentifier",
																	"src": "18266:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18266:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18266:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18368:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18379:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18384:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18375:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18375:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18368:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18161:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18169:3:10",
														"type": ""
													}
												],
												"src": "18027:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18570:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18580:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18592:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18603:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18588:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18588:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18580:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18627:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18638:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18623:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18623:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18646:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18642:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18642:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18616:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18616:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18616:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18672:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18806:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18680:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18680:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18672:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18550:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18565:4:10",
														"type": ""
													}
												],
												"src": "18399:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18852:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18869:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18872:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18862:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18862:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18862:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18966:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18969:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18959:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18959:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18959:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18990:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18993:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18983:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18983:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18983:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "18824:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19055:149:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19065:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19088:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19070:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19070:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "19065:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19099:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19122:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "19104:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19104:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "19099:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19133:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19145:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19148:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "19141:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19141:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "19133:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19175:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19177:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19177:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19177:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "19166:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19172:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19163:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19163:11:10"
															},
															"nodeType": "YulIf",
															"src": "19160:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19041:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19044:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "19050:4:10",
														"type": ""
													}
												],
												"src": "19010:194:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19316:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19338:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19346:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19334:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19334:14:10"
																	},
																	{
																		"hexValue": "474946543a205469657273206d75737420626520696e20617363656e64696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19350:34:10",
																		"type": "",
																		"value": "GIFT: Tiers must be in ascending"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19327:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19327:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19327:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19406:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19414:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19402:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19402:15:10"
																	},
																	{
																		"hexValue": "206f72646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19419:8:10",
																		"type": "",
																		"value": " order"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19395:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19395:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19395:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19308:6:10",
														"type": ""
													}
												],
												"src": "19210:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19587:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19597:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19663:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19668:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19604:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19604:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19597:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19769:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48",
																	"nodeType": "YulIdentifier",
																	"src": "19680:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19680:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19680:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19782:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19793:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19798:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19789:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19789:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19782:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19575:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19583:3:10",
														"type": ""
													}
												],
												"src": "19441:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19984:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19994:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20006:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20017:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20002:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20002:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19994:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20041:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20052:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20037:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20037:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20060:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20066:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20056:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20056:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20030:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20030:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20030:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20086:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20220:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20094:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20094:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20086:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19964:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19979:4:10",
														"type": ""
													}
												],
												"src": "19813:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20281:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20291:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20318:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20300:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20300:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20291:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20414:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20416:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20416:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20416:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20339:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20346:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20336:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20336:77:10"
															},
															"nodeType": "YulIf",
															"src": "20333:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20445:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20456:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20463:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20452:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20452:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20445:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20267:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20277:3:10",
														"type": ""
													}
												],
												"src": "20238:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20549:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20560:14:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "20570:4:10",
																"type": "",
																"value": "0x05"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20560:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20532:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20542:6:10",
														"type": ""
													}
												],
												"src": "20477:104:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20696:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20706:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20721:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "20706:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20668:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20673:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "20684:11:10",
														"type": ""
													}
												],
												"src": "20587:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20806:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20816:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "20824:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "20816:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "20793:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20801:4:10",
														"type": ""
													}
												],
												"src": "20736:98:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20895:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20912:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20935:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20917:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20917:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20905:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20905:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20905:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20883:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20890:3:10",
														"type": ""
													}
												],
												"src": "20840:108:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21034:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21078:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21086:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21044:33:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21044:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21044:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21099:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21117:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21122:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21113:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21113:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "21099:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21007:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21015:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "21023:10:10",
														"type": ""
													}
												],
												"src": "20954:179:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21212:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21222:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "21234:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21239:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21230:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21230:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "21222:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "21199:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "21207:4:10",
														"type": ""
													}
												],
												"src": "21139:111:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21400:582:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21410:66:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21470:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21424:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21424:52:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21414:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21485:91:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21564:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21569:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21492:71:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21492:84:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21485:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21585:69:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21648:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$5_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "21600:47:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21600:54:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "21589:7:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21663:21:10",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "21677:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "21667:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21753:222:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "21767:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "21794:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "21788:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21788:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "21771:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "21814:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "21865:13:10"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "21880:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "21821:43:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21821:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "21814:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "21897:68:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "21958:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$5_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "21907:50:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21907:58:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21897:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "21715:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21718:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "21712:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21712:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "21726:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21728:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "21737:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21740:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "21733:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21733:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "21728:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "21697:14:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "21699:10:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "21708:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "21703:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "21693:282:10"
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21387:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21394:3:10",
														"type": ""
													}
												],
												"src": "21288:694:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22206:300:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22216:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22228:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22239:3:10",
																		"type": "",
																		"value": "320"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22224:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22224:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22216:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22343:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22356:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22367:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22352:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22352:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22253:89:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22253:117:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22253:117:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22470:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22483:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22494:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22479:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22479:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22380:89:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22380:119:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22380:119:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22170:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22182:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22190:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22201:4:10",
														"type": ""
													}
												],
												"src": "21988:518:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22618:116:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22640:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22648:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22636:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22636:14:10"
																	},
																	{
																		"hexValue": "474946543a206275726e20616d6f756e74206578636565647320616c6c6f7761",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22652:34:10",
																		"type": "",
																		"value": "GIFT: burn amount exceeds allowa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22629:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22629:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22629:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22708:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22716:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22704:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22704:15:10"
																	},
																	{
																		"hexValue": "6e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22721:5:10",
																		"type": "",
																		"value": "nce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22697:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22697:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22697:30:10"
														}
													]
												},
												"name": "store_literal_in_memory_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22610:6:10",
														"type": ""
													}
												],
												"src": "22512:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22886:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22896:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22962:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22967:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22903:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22903:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22896:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23068:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f",
																	"nodeType": "YulIdentifier",
																	"src": "22979:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22979:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22979:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23081:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23092:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23097:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23088:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23088:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23081:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22874:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22882:3:10",
														"type": ""
													}
												],
												"src": "22740:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23283:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23293:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23305:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23316:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23301:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23301:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23293:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23340:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23351:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23336:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23336:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23359:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23365:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23355:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23329:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23329:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23329:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23385:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23519:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23393:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23393:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23385:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23263:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23278:4:10",
														"type": ""
													}
												],
												"src": "23112:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23590:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23600:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23611:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23600:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23572:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23582:7:10",
														"type": ""
													}
												],
												"src": "23537:85:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23672:57:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23682:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23697:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23704:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "23693:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23693:30:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "23682:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23654:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "23664:7:10",
														"type": ""
													}
												],
												"src": "23628:101:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23767:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23777:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "23784:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23777:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23753:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23763:3:10",
														"type": ""
													}
												],
												"src": "23735:60:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23868:89:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23878:73:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "23943:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "23917:25:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23917:32:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "23908:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23908:42:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nodeType": "YulIdentifier",
																	"src": "23891:16:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23891:60:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "23878:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23848:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "23858:9:10",
														"type": ""
													}
												],
												"src": "23801:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24035:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24052:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24095:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nodeType": "YulIdentifier",
																			"src": "24057:37:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24057:44:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24045:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24045:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24045:57:10"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24023:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24030:3:10",
														"type": ""
													}
												],
												"src": "23963:145:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24219:131:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24229:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24241:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24252:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24237:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24237:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24229:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24316:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24329:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24340:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24325:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24325:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24265:50:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24265:78:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24265:78:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24191:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24203:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24214:4:10",
														"type": ""
													}
												],
												"src": "24114:236:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24470:194:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24480:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24492:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24503:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24488:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24488:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24480:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24554:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24567:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24578:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24563:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24563:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24516:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24516:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24516:65:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24629:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24642:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24653:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24638:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24638:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24591:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24591:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24591:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24434:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24446:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24454:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24465:4:10",
														"type": ""
													}
												],
												"src": "24356:308:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24776:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24798:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24806:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24794:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24794:14:10"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24810:18:10",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24787:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24787:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24787:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24768:6:10",
														"type": ""
													}
												],
												"src": "24670:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24988:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24998:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25064:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25069:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25005:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25005:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24998:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25170:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "25081:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25081:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25081:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25183:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25194:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25199:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25190:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25190:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25183:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24976:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24984:3:10",
														"type": ""
													}
												],
												"src": "24842:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25385:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25395:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25407:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25418:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25403:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25403:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25395:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25442:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25453:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25438:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25438:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25461:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25467:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25457:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25457:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25431:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25431:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25431:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25487:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25621:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25495:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25495:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25487:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25365:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25380:4:10",
														"type": ""
													}
												],
												"src": "25214:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25683:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25693:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25716:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25698:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25698:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25693:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25727:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25750:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25732:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25732:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25727:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25761:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25772:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25775:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25768:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25768:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "25761:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25801:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25803:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25803:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25803:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25793:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "25796:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25790:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25790:10:10"
															},
															"nodeType": "YulIf",
															"src": "25787:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25670:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25673:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "25679:3:10",
														"type": ""
													}
												],
												"src": "25639:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25894:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25905:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25921:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25915:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25915:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "25905:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25877:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "25887:6:10",
														"type": ""
													}
												],
												"src": "25836:98:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26053:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26063:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "26078:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "26063:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26025:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26030:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "26041:11:10",
														"type": ""
													}
												],
												"src": "25940:147:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26201:278:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26211:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26257:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26225:31:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26225:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26215:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26272:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26355:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26360:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26279:75:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26279:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26272:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26415:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26422:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26411:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26411:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26429:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26434:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "26376:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26376:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26376:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26450:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26461:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26466:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26457:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26457:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26450:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26182:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26189:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26197:3:10",
														"type": ""
													}
												],
												"src": "26093:386:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26619:137:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26630:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26717:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26726:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26637:79:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26637:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26630:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26740:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "26747:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26740:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26598:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26604:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26615:3:10",
														"type": ""
													}
												],
												"src": "26485:271:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26868:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26890:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26898:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26886:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26886:14:10"
																	},
																	{
																		"hexValue": "474946543a204661696c656420746f20636865636b207265736572766573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26902:32:10",
																		"type": "",
																		"value": "GIFT: Failed to check reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26879:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "26879:56:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26879:56:10"
														}
													]
												},
												"name": "store_literal_in_memory_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26860:6:10",
														"type": ""
													}
												],
												"src": "26762:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27094:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27104:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27170:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27175:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27111:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27111:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27104:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27276:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2",
																	"nodeType": "YulIdentifier",
																	"src": "27187:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27187:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27187:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27289:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27300:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27305:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27296:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27296:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27289:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27082:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27090:3:10",
														"type": ""
													}
												],
												"src": "26948:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27491:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27501:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27513:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27524:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27509:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27509:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27501:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27548:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27559:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27544:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27544:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27567:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27573:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27563:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27563:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27537:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27537:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27537:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27593:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27727:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27601:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27601:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27593:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27471:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27486:4:10",
														"type": ""
													}
												],
												"src": "27320:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27808:80:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27818:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "27833:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27827:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27827:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "27818:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27876:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "27849:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27849:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27849:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "27786:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27794:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27802:5:10",
														"type": ""
													}
												],
												"src": "27745:143:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27971:274:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "28017:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "28019:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "28019:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "28019:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27992:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28001:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27988:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27988:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28013:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "27984:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "27984:32:10"
															},
															"nodeType": "YulIf",
															"src": "27981:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "28110:128:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "28125:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28139:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "28129:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "28154:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "28200:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "28211:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28196:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28196:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28220:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "28164:31:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28164:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "28154:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27941:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "27952:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27964:6:10",
														"type": ""
													}
												],
												"src": "27894:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28357:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28379:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28387:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28375:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28375:14:10"
																	},
																	{
																		"hexValue": "474946543a20496e73756666696369656e74207265736572766573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28391:29:10",
																		"type": "",
																		"value": "GIFT: Insufficient reserves"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28368:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28368:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28368:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28349:6:10",
														"type": ""
													}
												],
												"src": "28251:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28580:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28590:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28656:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28661:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28597:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28597:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28590:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28762:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d",
																	"nodeType": "YulIdentifier",
																	"src": "28673:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28673:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28673:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28775:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28786:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28791:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28782:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28782:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28775:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28568:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28576:3:10",
														"type": ""
													}
												],
												"src": "28434:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28977:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28987:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28999:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29010:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28995:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "28995:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28987:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29034:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29045:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29030:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29030:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29053:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29059:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29049:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29049:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29023:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29023:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29023:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29079:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29213:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29087:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29087:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29079:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28957:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28972:4:10",
														"type": ""
													}
												],
												"src": "28806:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29337:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29359:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29367:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29355:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29355:14:10"
																	},
																	{
																		"hexValue": "474946543a20496e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29371:22:10",
																		"type": "",
																		"value": "GIFT: Invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29348:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29348:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29348:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29329:6:10",
														"type": ""
													}
												],
												"src": "29231:170:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29553:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29563:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29629:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29634:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29570:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29570:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29563:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29735:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1",
																	"nodeType": "YulIdentifier",
																	"src": "29646:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29646:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29646:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29748:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29759:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29764:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29755:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29755:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29748:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29541:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29549:3:10",
														"type": ""
													}
												],
												"src": "29407:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29950:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29960:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29972:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29983:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29968:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29968:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29960:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30007:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30018:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30003:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30003:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30026:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30032:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30022:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30022:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29996:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "29996:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29996:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30052:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30186:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30060:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30060:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30052:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29930:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29945:4:10",
														"type": ""
													}
												],
												"src": "29779:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30310:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30332:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30340:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30328:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30328:14:10"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30344:22:10",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30321:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30321:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30321:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30302:6:10",
														"type": ""
													}
												],
												"src": "30204:170:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30526:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30536:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30602:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30607:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30543:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30543:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30536:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30708:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nodeType": "YulIdentifier",
																	"src": "30619:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30619:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30619:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30721:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30732:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30737:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30728:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30728:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30721:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30514:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30522:3:10",
														"type": ""
													}
												],
												"src": "30380:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30923:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30933:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30945:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30956:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30941:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30941:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30933:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30980:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30991:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30976:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30976:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30999:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31005:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30995:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30995:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30969:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "30969:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30969:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31025:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31159:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31033:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31033:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31025:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30903:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30918:4:10",
														"type": ""
													}
												],
												"src": "30752:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31331:288:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31341:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31353:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31364:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31349:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31349:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31341:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "31421:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31434:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31445:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31430:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31430:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31377:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31377:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31377:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "31502:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31515:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31526:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31511:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31511:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31458:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31458:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31458:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "31584:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31597:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31608:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31593:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31593:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31540:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31540:72:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31540:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31287:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "31299:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "31307:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31315:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31326:4:10",
														"type": ""
													}
												],
												"src": "31177:442:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31679:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31689:11:10",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "31697:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "31689:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31717:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "31720:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31710:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31710:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31710:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31733:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31751:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31754:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "31741:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31741:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "31733:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "31666:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "31674:4:10",
														"type": ""
													}
												],
												"src": "31625:141:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31816:49:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31826:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31844:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31851:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31840:14:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31856:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "31836:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31836:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "31826:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31799:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "31809:6:10",
														"type": ""
													}
												],
												"src": "31772:93:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31924:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31934:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "31959:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31965:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "31955:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "31955:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "31934:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "31899:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31905:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "31915:8:10",
														"type": ""
													}
												],
												"src": "31871:107:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32060:317:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32070:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "32091:10:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32103:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "32087:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32087:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "32074:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32114:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "32145:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32156:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "32126:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32126:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "32118:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32232:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "32263:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "32274:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "32244:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32244:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "32232:8:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32292:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32305:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "32316:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "32312:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32312:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "32301:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32301:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "32292:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32331:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32344:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "32355:8:10"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "32365:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "32351:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32351:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "32341:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32341:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "32331:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32021:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "32028:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "32040:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "32053:6:10",
														"type": ""
													}
												],
												"src": "31984:393:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32443:82:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32453:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "32511:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "32493:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32493:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "32484:8:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32484:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "32466:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32466:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "32453:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32423:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "32433:9:10",
														"type": ""
													}
												],
												"src": "32383:142:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32578:28:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32588:12:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "32595:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "32588:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32564:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "32574:3:10",
														"type": ""
													}
												],
												"src": "32531:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32688:193:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32698:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "32753:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "32722:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32722:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "32702:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "32777:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "32817:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "32811:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32811:11:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "32824:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "32856:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "32832:23:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32832:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "32783:27:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32783:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "32770:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "32770:105:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32770:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "32665:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "32671:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "32679:7:10",
														"type": ""
													}
												],
												"src": "32612:269:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32936:24:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32946:8:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "32953:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "32946:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "32932:3:10",
														"type": ""
													}
												],
												"src": "32887:73:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33019:136:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "33029:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "33043:30:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33043:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "33033:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "33128:4:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "33134:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "33142:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "33084:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33084:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33084:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "33005:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "33011:6:10",
														"type": ""
													}
												],
												"src": "32966:189:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33211:136:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33278:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "33322:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33329:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "33292:29:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33292:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33292:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "33231:5:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "33238:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "33228:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33228:14:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "33243:26:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "33245:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "33258:5:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33265:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "33254:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33254:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "33245:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "33225:2:10",
																"statements": []
															},
															"src": "33221:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "33199:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "33206:3:10",
														"type": ""
													}
												],
												"src": "33161:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33432:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "33458:431:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "33472:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "33520:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "33488:31:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33488:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "33476:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "33539:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "33562:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "33590:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "33572:17:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "33572:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "33558:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33558:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "33543:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "33759:27:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "33761:23:10",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "33776:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "33761:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "33743:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "33755:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "33740:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33740:18:10"
																		},
																		"nodeType": "YulIf",
																		"src": "33737:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "33828:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "33845:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "33873:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "33855:17:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "33855:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "33841:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "33841:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "33799:28:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "33799:80:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "33799:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "33449:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33454:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "33446:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33446:11:10"
															},
															"nodeType": "YulIf",
															"src": "33443:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "33408:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "33415:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "33420:10:10",
														"type": ""
													}
												],
												"src": "33353:543:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33965:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33975:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "34000:4:10"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "34006:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "33996:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "33996:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "33975:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "33940:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33946:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "33956:8:10",
														"type": ""
													}
												],
												"src": "33902:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34076:118:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34086:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "34135:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "34138:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "34131:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34131:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "34150:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "34146:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "34146:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "34102:28:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34102:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "34098:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "34098:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "34090:4:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34163:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "34177:4:10"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "34183:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "34173:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "34173:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "34163:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "34053:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "34059:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "34069:6:10",
														"type": ""
													}
												],
												"src": "34025:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34280:214:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34413:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "34440:4:10"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "34446:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "34421:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "34421:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "34413:4:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34459:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "34470:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34480:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "34483:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "34476:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34476:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "34467:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "34467:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "34459:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "34261:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "34267:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "34275:4:10",
														"type": ""
													}
												],
												"src": "34199:295:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34591:1303:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34602:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "34649:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "34616:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "34616:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "34606:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "34738:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "34740:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "34740:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "34740:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "34710:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34718:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "34707:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "34707:30:10"
															},
															"nodeType": "YulIf",
															"src": "34704:56:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34770:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "34816:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "34810:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34810:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "34784:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "34784:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "34774:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "34915:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "34921:6:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "34929:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "34869:45:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "34869:67:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34869:67:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "34946:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "34963:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "34950:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "34974:17:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "34987:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "34974:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "35038:611:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "35052:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "35071:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "35083:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "35079:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "35079:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "35067:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "35067:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "35056:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "35103:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "35149:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "35117:31:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "35117:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "35107:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "35167:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35176:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "35171:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "35235:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "35260:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "35278:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "35283:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "35274:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "35274:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "35268:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "35268:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "35253:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "35253:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "35253:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "35312:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "35326:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "35334:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "35322:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "35322:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "35312:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "35353:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "35370:9:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "35381:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "35366:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "35366:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "35353:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "35201:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "35204:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "35198:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "35198:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "35213:21:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "35215:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "35224:1:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "35227:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "35220:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "35220:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "35215:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "35194:3:10",
																					"statements": []
																				},
																				"src": "35190:208:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "35434:156:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "35452:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "35479:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "35484:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "35475:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "35475:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "35469:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "35469:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "35456:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "35519:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "35546:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "35561:6:10"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "35569:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "35557:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "35557:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "35527:18:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "35527:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "35512:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "35512:64:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "35512:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "35417:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "35426:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "35414:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "35414:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "35411:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "35610:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "35624:6:10"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "35632:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "35620:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "35620:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "35636:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "35616:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "35616:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "35603:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "35603:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "35603:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "35031:618:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35036:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "35666:222:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "35680:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "35693:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "35684:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "35717:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "35735:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "35754:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "35759:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "35750:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "35750:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "35744:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "35744:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "35735:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "35710:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "35707:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "35804:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "35863:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "35870:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "35810:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "35810:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "35797:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "35797:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "35797:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "35658:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "35011:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "35019:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "35008:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "35008:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "35001:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "34580:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "34586:3:10",
														"type": ""
													}
												],
												"src": "34499:1395:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "35948:362:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "35958:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "35981:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "35963:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "35963:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "35958:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "35992:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "36015:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "35997:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "35997:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "35992:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "36026:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "36049:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "36052:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "36045:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36045:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "36030:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "36063:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "36092:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "36074:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36074:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "36063:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36281:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "36283:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "36283:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "36283:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "36214:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "36207:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "36207:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "36237:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "36244:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "36253:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "36240:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "36240:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "36234:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "36234:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "36187:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "36187:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "36167:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36167:113:10"
															},
															"nodeType": "YulIf",
															"src": "36164:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "35931:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "35934:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "35940:7:10",
														"type": ""
													}
												],
												"src": "35900:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36344:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36361:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36364:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36354:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36354:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36354:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36458:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36461:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "36451:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36451:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36451:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36482:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "36485:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "36475:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36475:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "36475:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "36316:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "36544:143:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "36554:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "36577:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "36559:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36559:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "36554:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "36588:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "36611:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "36593:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36593:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "36588:1:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "36635:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "36637:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "36637:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "36637:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "36632:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "36625:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36625:9:10"
															},
															"nodeType": "YulIf",
															"src": "36622:35:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "36667:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "36676:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "36679:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "36672:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "36672:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "36667:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "36533:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "36536:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "36542:1:10",
														"type": ""
													}
												],
												"src": "36502:185:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$5_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[5]\n    function abi_decode_available_length_t_array$_t_uint256_$5_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$5_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[5]\n    function abi_decode_t_array$_t_uint256_$5_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x05\n        array := abi_decode_available_length_t_array$_t_uint256_$5_memory_ptr(offset, length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$5_memory_ptrt_array$_t_uint256_$5_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 320) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_uint256_$5_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value1 := abi_decode_t_array$_t_uint256_$5_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_boolt_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: New admin cannot be the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: transfer amount exceeds al\")\n\n        mstore(add(memPtr, 32), \"lowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: caller is not the supplyCo\")\n\n        mstore(add(memPtr, 32), \"ntroller\")\n\n    }\n\n    function abi_encode_t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: Last tier must be max\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: Tax percentage too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: Tiers must be in ascending\")\n\n        mstore(add(memPtr, 32), \" order\")\n\n    }\n\n    function abi_encode_t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_array$_t_uint256_$5_memory_ptr(value) -> length {\n\n        length := 0x05\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$5_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$5_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[5] -> uint256[5]\n    function abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$5_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$5_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$5_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$5_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$5_memory_ptr_t_array$_t_uint256_$5_memory_ptr__to_t_array$_t_uint256_$5_memory_ptr_t_array$_t_uint256_$5_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_array$_t_uint256_$5_memory_ptr_to_t_array$_t_uint256_$5_memory_ptr_fromStack(value1,  add(headStart, 160))\n\n    }\n\n    function store_literal_in_memory_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: burn amount exceeds allowa\")\n\n        mstore(add(memPtr, 32), \"nce\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: Failed to check reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: Insufficient reserves\")\n\n    }\n\n    function abi_encode_t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"GIFT: Invalid amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061023b575f3560e01c806379cc679011610139578063c29c669a116100b6578063dd62ed3e1161007a578063dd62ed3e14610665578063e1a8f3f414610695578063e7ba1012146106b1578063e85455d7146106cf578063f2fde38b146106ff5761023b565b8063c29c669a146105d5578063c658a5e3146105f1578063cc7134ba146105fb578063d048d9881461062b578063db0ed6a0146106495761023b565b80638da5cb5b116100fd5780638da5cb5b1461051d57806395d89b411461053b578063a02fba1e14610559578063a9059cbb14610575578063a906c70e146105a55761023b565b806379cc67901461048d57806379e631f4146104a95780638456cb59146104c5578063851f39d4146104cf5780638850b9c2146104ff5761023b565b806338af3eed116101c757806353e4e3cb1161018b57806353e4e3cb146103fb5780635c975abb1461041757806370a082311461043557806370d27fa014610465578063715018a6146104835761023b565b806338af3eed1461037f5780633f4ba83a1461039d57806340c10f19146103a757806342966c68146103c357806352875bc3146103df5761023b565b80631a5e62fd1161020e5780631a5e62fd146102db5780631c31f710146102f757806323b872dd1461031357806324e8933d14610343578063313ce567146103615761023b565b806306fdde031461023f578063095ea7b31461025d578063110c621d1461028d57806318160ddd146102bd575b5f80fd5b61024761071b565b6040516102549190612774565b60405180910390f35b61027760048036038101906102729190612832565b6107b9565b604051610284919061288a565b60405180910390f35b6102a760048036038101906102a291906128a3565b6107db565b6040516102b491906128dd565b60405180910390f35b6102c56107f4565b6040516102d291906128dd565b60405180910390f35b6102f560048036038101906102f091906128f6565b61080b565b005b610311600480360381019061030c91906128f6565b61088d565b005b61032d60048036038101906103289190612921565b61091b565b60405161033a919061288a565b60405180910390f35b61034b6109ca565b60405161035891906128dd565b60405180910390f35b6103696109d0565b604051610376919061298c565b60405180910390f35b6103876109d8565b60405161039491906129b4565b60405180910390f35b6103a56109fd565b005b6103c160048036038101906103bc9190612832565b610a0f565b005b6103dd60048036038101906103d891906128a3565b610ad2565b005b6103f960048036038101906103f491906128f6565b610adf565b005b61041560048036038101906104109190612afb565b610b6d565b005b61041f610d50565b60405161042c919061288a565b60405180910390f35b61044f600480360381019061044a91906128f6565b610d64565b60405161045c91906128dd565b60405180910390f35b61046d610db7565b60405161047a91906128dd565b60405180910390f35b61048b610dbd565b005b6104a760048036038101906104a29190612832565b610dd0565b005b6104c360048036038101906104be91906128f6565b610e3c565b005b6104cd610eca565b005b6104e960048036038101906104e491906128f6565b610edc565b6040516104f6919061288a565b60405180910390f35b610507610ef9565b60405161051491906129b4565b60405180910390f35b610525610f1e565b60405161053291906129b4565b60405180910390f35b610543610f53565b6040516105509190612774565b60405180910390f35b610573600480360381019061056e91906128a3565b610ff1565b005b61058f600480360381019061058a9190612832565b61103a565b60405161059c919061288a565b60405180910390f35b6105bf60048036038101906105ba91906128a3565b611083565b6040516105cc91906128dd565b60405180910390f35b6105ef60048036038101906105ea9190612b64565b61109c565b005b6105f961114a565b005b610615600480360381019061061091906128f6565b61115c565b604051610622919061288a565b60405180910390f35b610633611179565b60405161064091906128dd565b60405180910390f35b610663600480360381019061065e9190612c52565b61117f565b005b61067f600480360381019061067a9190612d01565b6114b4565b60405161068c91906128dd565b60405180910390f35b6106af60048036038101906106aa9190612d3f565b611544565b005b6106b9611649565b6040516106c691906129b4565b60405180910390f35b6106e960048036038101906106e491906128f6565b61166e565b6040516106f6919061288a565b60405180910390f35b610719600480360381019061071491906128f6565b61168b565b005b60605f61072661170f565b905080600301805461073790612dbc565b80601f016020809104026020016040519081016040528092919081815260200182805461076390612dbc565b80156107ae5780601f10610785576101008083540402835291602001916107ae565b820191905f5260205f20905b81548152906001019060200180831161079157829003601f168201915b505050505091505090565b5f806107c3611736565b90506107d081858561173d565b600191505092915050565b603d81600581106107ea575f80fd5b015f915090505481565b5f806107fe61170f565b9050806002015491505090565b61081361174f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087890612e5c565b60405180910390fd5b61088a8161168b565b50565b61089561174f565b8060335f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f04d55a8be181fb8d75b76f2d48aa0b2ee40f47e53d6e61763eeeec46feea8a2460405160405180910390a250565b5f6109246117d6565b61093b60435460425461182090919063ffffffff16565b421061094a57610949611835565b5b5f61095c85610957611736565b6114b4565b9050828110156109a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099890612eea565b60405180910390fd5b6109b5856109ad611736565b85840361173d565b6109c0858585611a43565b9150509392505050565b60425481565b5f6012905090565b60335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a0561174f565b610a0d611ba7565b565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9590612f78565b60405180910390fd5b610ab560435460425461182090919063ffffffff16565b4210610ac457610ac3611835565b5b610ace8282611c07565b5050565b610adc3382611c86565b50565b610ae761174f565b8060325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f915d8b94cdcbf4fa1b4c768b15f63b99aee21096b9d04fe1938f45833036106d60405160405180910390a250565b610b7561174f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82600460058110610baa57610ba9612f96565b5b602002015114610bef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be69061300d565b60405180910390fd5b5f5b6005811015610cee57614e20828260058110610c1057610c0f612f96565b5b60200201511115610c56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4d90613075565b60405180910390fd5b5f811115610cdb5782600182610c6c91906130c0565b60058110610c7d57610c7c612f96565b5b6020020151838260058110610c9557610c94612f96565b5b602002015111610cda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd190613163565b60405180910390fd5b5b8080610ce690613181565b915050610bf1565b50816038906005610d00929190612649565b5080603d906005610d12929190612649565b507ffca5dd7612680a40f4851bb137ecc39852bd2a1a3cc176efbb39affa8ce972148282604051610d4492919061326d565b60405180910390a15050565b5f805f9054906101000a900460ff16905090565b5f80610d6e61170f565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b614e2081565b610dc561174f565b610dce5f611d05565b565b5f610ddb83336114b4565b905081811015610e20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1790613305565b60405180910390fd5b610e2d833384840361173d565b610e378383611c86565b505050565b610e4461174f565b8060345f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f25cf73d41a7a2f5baa3ed34b7a72144453377d3d6c59b74db14e0ff168fd1fa960405160405180910390a250565b610ed261174f565b610eda611dd6565b565b6036602052805f5260405f205f915054906101000a900460ff1681565b60345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80610f28611e37565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f610f5e61170f565b9050806004018054610f6f90612dbc565b80601f0160208091040260200160405190810160405280929190818152602001828054610f9b90612dbc565b8015610fe65780601f10610fbd57610100808354040283529160200191610fe6565b820191905f5260205f20905b815481529060010190602001808311610fc957829003601f168201915b505050505091505090565b610ff961174f565b806043819055507ff759d32ec37fe15560fbb2ad08f9ea31689d826215d24d6a6e2e740c517c66db8160405161102f91906128dd565b60405180910390a150565b5f6110436117d6565b61105a60435460425461182090919063ffffffff16565b421061106957611068611835565b5b61107b611074611736565b8484611a43565b905092915050565b60388160058110611092575f80fd5b015f915090505481565b6110a461174f565b8060375f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ffa4a2b2457d2065452473bed7d55c8fa2f65fc4a1eff1ebdaf14a1b7281e77738260405161113e919061288a565b60405180910390a25050565b61115261174f565b61115a610dbd565b565b6035602052805f5260405f205f915054906101000a900460ff1681565b60435481565b5f611188611e5e565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156111d05750825b90505f60018367ffffffffffffffff1614801561120357505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611211575080155b15611248576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315611295576001855f0160086101000a81548160ff0219169083151502179055505b61129f8a8a611e85565b6112a833611e9b565b6112b0611eaf565b8760325f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660335f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560345f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060a00160405280683635c9adc5dea00000815260200169010f0cf064dd59200000815260200169021e19e0c9bab24000008152602001690a968163f0a57b40000081526020017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81525060389060056113ee929190612649565b506040518060a001604052806103e861ffff16815260200161032061ffff16815260200161025861ffff16815260200161019061ffff16815260200160c861ffff16815250603d906005611443929190612689565b506201518060438190555083156114a8575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2600160405161149f9190613378565b60405180910390a15b50505050505050505050565b5f806114be61170f565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b61154c61174f565b8160355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508060365f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167f56ef0fe49f8ee42d7982bb42d42fa7b8d1370ec36d0f8cb83802a7f74215027d838360405161163c929190613391565b60405180910390a2505050565b60325f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6037602052805f5260405f205f915054906101000a900460ff1681565b61169361174f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611703575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116fa91906129b4565b60405180910390fd5b61170c81611d05565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b61174a8383836001611ec1565b505050565b611757611736565b73ffffffffffffffffffffffffffffffffffffffff16611775610f1e565b73ffffffffffffffffffffffffffffffffffffffff16146117d457611798611736565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117cb91906129b4565b60405180910390fd5b565b6117de610d50565b1561181e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161181590613402565b60405180910390fd5b565b5f818361182d9190613420565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff1660345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a3a575f8060345f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f0902f1ac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516119539190613497565b5f60405180830381855afa9150503d805f811461198b576040519150601f19603f3d011682016040523d82523d5f602084013e611990565b606091505b5091509150816119d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119cc906134f7565b60405180910390fd5b5f818060200190518101906119ea9190613529565b9050806119f56107f4565b1115611a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2d9061359e565b60405180910390fd5b5050505b42604281905550565b5f60355f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1680611adf575060365f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b80611b30575060375f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b15611b4557611b4084848461209e565b611b9c565b5f611b4f8361218e565b9050611b7d8560335f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168361209e565b611b9a8585611b95848761225290919063ffffffff16565b61209e565b505b600190509392505050565b611baf612267565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611bf0611736565b604051611bfd91906129b4565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611c77575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611c6e91906129b4565b60405180910390fd5b611c825f83836122b0565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611cf6575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611ced91906129b4565b60405180910390fd5b611d01825f836122b0565b5050565b5f611d0e611e37565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b611dde6117d6565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611e20611736565b604051611e2d91906129b4565b60405180910390a1565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611e8d6124df565b611e97828261251f565b5050565b611ea36124df565b611eac8161255b565b50565b611eb76124df565b611ebf6125df565b565b5f611eca61170f565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611f3c575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611f3391906129b4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611fac575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611fa391906129b4565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115612097578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161208e91906128dd565b60405180910390a35b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361210e575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161210591906129b4565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361217e575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161217591906129b4565b60405180910390fd5b6121898383836122b0565b505050565b5f805f90505b600581101561221157603881600581106121b1576121b0612f96565b5b015483116121fe576121f6620186a06121e8603d84600581106121d7576121d6612f96565b5b01548661260190919063ffffffff16565b61261690919063ffffffff16565b91505061224d565b808061220990613181565b915050612194565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161224490613606565b60405180910390fd5b919050565b5f818361225f91906130c0565b905092915050565b61226f610d50565b6122ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122a59061366e565b60405180910390fd5b565b5f6122b961170f565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361230d5781816002015f8282546123019190613420565b925050819055506123df565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015612398578481846040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161238f9392919061368c565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036124285781816002015f8282540392505081905550612474565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124d191906128dd565b60405180910390a350505050565b6124e761262b565b61251d576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6125276124df565b5f61253061170f565b9050828160030190816125439190613855565b50818160040190816125559190613855565b50505050565b6125636124df565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036125d3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016125ca91906129b4565b60405180910390fd5b6125dc81611d05565b50565b6125e76124df565b5f805f6101000a81548160ff021916908315150217905550565b5f818361260e9190613924565b905092915050565b5f81836126239190613992565b905092915050565b5f612634611e5e565b5f0160089054906101000a900460ff16905090565b8260058101928215612678579160200282015b8281111561267757825182559160200191906001019061265c565b5b50905061268591906126cf565b5090565b82600581019282156126be579160200282015b828111156126bd578251829061ffff1690559160200191906001019061269c565b5b5090506126cb91906126cf565b5090565b5b808211156126e6575f815f9055506001016126d0565b5090565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612721578082015181840152602081019050612706565b5f8484015250505050565b5f601f19601f8301169050919050565b5f612746826126ea565b61275081856126f4565b9350612760818560208601612704565b6127698161272c565b840191505092915050565b5f6020820190508181035f83015261278c818461273c565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6127ce826127a5565b9050919050565b6127de816127c4565b81146127e8575f80fd5b50565b5f813590506127f9816127d5565b92915050565b5f819050919050565b612811816127ff565b811461281b575f80fd5b50565b5f8135905061282c81612808565b92915050565b5f80604083850312156128485761284761279d565b5b5f612855858286016127eb565b92505060206128668582860161281e565b9150509250929050565b5f8115159050919050565b61288481612870565b82525050565b5f60208201905061289d5f83018461287b565b92915050565b5f602082840312156128b8576128b761279d565b5b5f6128c58482850161281e565b91505092915050565b6128d7816127ff565b82525050565b5f6020820190506128f05f8301846128ce565b92915050565b5f6020828403121561290b5761290a61279d565b5b5f612918848285016127eb565b91505092915050565b5f805f606084860312156129385761293761279d565b5b5f612945868287016127eb565b9350506020612956868287016127eb565b92505060406129678682870161281e565b9150509250925092565b5f60ff82169050919050565b61298681612971565b82525050565b5f60208201905061299f5f83018461297d565b92915050565b6129ae816127c4565b82525050565b5f6020820190506129c75f8301846129a5565b92915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b612a078261272c565b810181811067ffffffffffffffff82111715612a2657612a256129d1565b5b80604052505050565b5f612a38612794565b9050612a4482826129fe565b919050565b5f67ffffffffffffffff821115612a6357612a626129d1565b5b602082029050919050565b5f80fd5b5f612a84612a7f84612a49565b612a2f565b90508060208402830185811115612a9e57612a9d612a6e565b5b835b81811015612ac75780612ab3888261281e565b845260208401935050602081019050612aa0565b5050509392505050565b5f82601f830112612ae557612ae46129cd565b5b6005612af2848285612a72565b91505092915050565b5f806101408385031215612b1257612b1161279d565b5b5f612b1f85828601612ad1565b92505060a0612b3085828601612ad1565b9150509250929050565b612b4381612870565b8114612b4d575f80fd5b50565b5f81359050612b5e81612b3a565b92915050565b5f8060408385031215612b7a57612b7961279d565b5b5f612b87858286016127eb565b9250506020612b9885828601612b50565b9150509250929050565b5f80fd5b5f67ffffffffffffffff821115612bc057612bbf6129d1565b5b612bc98261272c565b9050602081019050919050565b828183375f83830152505050565b5f612bf6612bf184612ba6565b612a2f565b905082815260208101848484011115612c1257612c11612ba2565b5b612c1d848285612bd6565b509392505050565b5f82601f830112612c3957612c386129cd565b5b8135612c49848260208601612be4565b91505092915050565b5f805f805f60a08688031215612c6b57612c6a61279d565b5b5f86013567ffffffffffffffff811115612c8857612c876127a1565b5b612c9488828901612c25565b955050602086013567ffffffffffffffff811115612cb557612cb46127a1565b5b612cc188828901612c25565b9450506040612cd2888289016127eb565b9350506060612ce3888289016127eb565b9250506080612cf4888289016127eb565b9150509295509295909350565b5f8060408385031215612d1757612d1661279d565b5b5f612d24858286016127eb565b9250506020612d35858286016127eb565b9150509250929050565b5f805f60608486031215612d5657612d5561279d565b5b5f612d63868287016127eb565b9350506020612d7486828701612b50565b9250506040612d8586828701612b50565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612dd357607f821691505b602082108103612de657612de5612d8f565b5b50919050565b7f474946543a204e65772061646d696e2063616e6e6f7420626520746865207a655f8201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b5f612e46602a836126f4565b9150612e5182612dec565b604082019050919050565b5f6020820190508181035f830152612e7381612e3a565b9050919050565b7f474946543a207472616e7366657220616d6f756e74206578636565647320616c5f8201527f6c6f77616e636500000000000000000000000000000000000000000000000000602082015250565b5f612ed46027836126f4565b9150612edf82612e7a565b604082019050919050565b5f6020820190508181035f830152612f0181612ec8565b9050919050565b7f474946543a2063616c6c6572206973206e6f742074686520737570706c79436f5f8201527f6e74726f6c6c6572000000000000000000000000000000000000000000000000602082015250565b5f612f626028836126f4565b9150612f6d82612f08565b604082019050919050565b5f6020820190508181035f830152612f8f81612f56565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f474946543a204c6173742074696572206d757374206265206d617800000000005f82015250565b5f612ff7601b836126f4565b915061300282612fc3565b602082019050919050565b5f6020820190508181035f83015261302481612feb565b9050919050565b7f474946543a205461782070657263656e7461676520746f6f20686967680000005f82015250565b5f61305f601d836126f4565b915061306a8261302b565b602082019050919050565b5f6020820190508181035f83015261308c81613053565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6130ca826127ff565b91506130d5836127ff565b92508282039050818111156130ed576130ec613093565b5b92915050565b7f474946543a205469657273206d75737420626520696e20617363656e64696e675f8201527f206f726465720000000000000000000000000000000000000000000000000000602082015250565b5f61314d6026836126f4565b9150613158826130f3565b604082019050919050565b5f6020820190508181035f83015261317a81613141565b9050919050565b5f61318b826127ff565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036131bd576131bc613093565b5b600182019050919050565b5f60059050919050565b5f81905092915050565b5f819050919050565b6131ee816127ff565b82525050565b5f6131ff83836131e5565b60208301905092915050565b5f602082019050919050565b613220816131c8565b61322a81846131d2565b9250613235826131dc565b805f5b8381101561326557815161324c87826131f4565b96506132578361320b565b925050600181019050613238565b505050505050565b5f610140820190506132815f830185613217565b61328e60a0830184613217565b9392505050565b7f474946543a206275726e20616d6f756e74206578636565647320616c6c6f77615f8201527f6e63650000000000000000000000000000000000000000000000000000000000602082015250565b5f6132ef6023836126f4565b91506132fa82613295565b604082019050919050565b5f6020820190508181035f83015261331c816132e3565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61336261335d61335884613323565b61333f565b61332c565b9050919050565b61337281613348565b82525050565b5f60208201905061338b5f830184613369565b92915050565b5f6040820190506133a45f83018561287b565b6133b1602083018461287b565b9392505050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6133ec6010836126f4565b91506133f7826133b8565b602082019050919050565b5f6020820190508181035f830152613419816133e0565b9050919050565b5f61342a826127ff565b9150613435836127ff565b925082820190508082111561344d5761344c613093565b5b92915050565b5f81519050919050565b5f81905092915050565b5f61347182613453565b61347b818561345d565b935061348b818560208601612704565b80840191505092915050565b5f6134a28284613467565b915081905092915050565b7f474946543a204661696c656420746f20636865636b20726573657276657300005f82015250565b5f6134e1601e836126f4565b91506134ec826134ad565b602082019050919050565b5f6020820190508181035f83015261350e816134d5565b9050919050565b5f8151905061352381612808565b92915050565b5f6020828403121561353e5761353d61279d565b5b5f61354b84828501613515565b91505092915050565b7f474946543a20496e73756666696369656e7420726573657276657300000000005f82015250565b5f613588601b836126f4565b915061359382613554565b602082019050919050565b5f6020820190508181035f8301526135b58161357c565b9050919050565b7f474946543a20496e76616c696420616d6f756e740000000000000000000000005f82015250565b5f6135f06014836126f4565b91506135fb826135bc565b602082019050919050565b5f6020820190508181035f83015261361d816135e4565b9050919050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6136586014836126f4565b915061366382613624565b602082019050919050565b5f6020820190508181035f8301526136858161364c565b9050919050565b5f60608201905061369f5f8301866129a5565b6136ac60208301856128ce565b6136b960408301846128ce565b949350505050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261371d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826136e2565b61372786836136e2565b95508019841693508086168417925050509392505050565b5f61375961375461374f846127ff565b61333f565b6127ff565b9050919050565b5f819050919050565b6137728361373f565b61378661377e82613760565b8484546136ee565b825550505050565b5f90565b61379a61378e565b6137a5818484613769565b505050565b5b818110156137c8576137bd5f82613792565b6001810190506137ab565b5050565b601f82111561380d576137de816136c1565b6137e7846136d3565b810160208510156137f6578190505b61380a613802856136d3565b8301826137aa565b50505b505050565b5f82821c905092915050565b5f61382d5f1984600802613812565b1980831691505092915050565b5f613845838361381e565b9150826002028217905092915050565b61385e826126ea565b67ffffffffffffffff811115613877576138766129d1565b5b6138818254612dbc565b61388c8282856137cc565b5f60209050601f8311600181146138bd575f84156138ab578287015190505b6138b5858261383a565b86555061391c565b601f1984166138cb866136c1565b5f5b828110156138f2578489015182556001820191506020850194506020810190506138cd565b8683101561390f578489015161390b601f89168261381e565b8355505b6001600288020188555050505b505050505050565b5f61392e826127ff565b9150613939836127ff565b9250828202613947816127ff565b9150828204841483151761395e5761395d613093565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61399c826127ff565b91506139a7836127ff565b9250826139b7576139b6613965565b5b82820490509291505056fea264697066735822122028005d00b2c87c680778b0200cc630739d6eba3c97893559553eff21767f5c1364736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79CC6790 GT PUSH2 0x139 JUMPI DUP1 PUSH4 0xC29C669A GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0xE1A8F3F4 EQ PUSH2 0x695 JUMPI DUP1 PUSH4 0xE7BA1012 EQ PUSH2 0x6B1 JUMPI DUP1 PUSH4 0xE85455D7 EQ PUSH2 0x6CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6FF JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0xC29C669A EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xC658A5E3 EQ PUSH2 0x5F1 JUMPI DUP1 PUSH4 0xCC7134BA EQ PUSH2 0x5FB JUMPI DUP1 PUSH4 0xD048D988 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xDB0ED6A0 EQ PUSH2 0x649 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xA02FBA1E EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xA906C70E EQ PUSH2 0x5A5 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x48D JUMPI DUP1 PUSH4 0x79E631F4 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0x851F39D4 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x8850B9C2 EQ PUSH2 0x4FF JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x38AF3EED GT PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x53E4E3CB GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x53E4E3CB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x70D27FA0 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x483 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x52875BC3 EQ PUSH2 0x3DF JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x1A5E62FD GT PUSH2 0x20E JUMPI DUP1 PUSH4 0x1A5E62FD EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x1C31F710 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0x24E8933D EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x361 JUMPI PUSH2 0x23B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x110C621D EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2BD JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x247 PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x7B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x80B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x2921 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x369 PUSH2 0x9D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x298C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x387 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x394 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH2 0x9FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x2832 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0xAD2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F4 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x415 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x410 SWAP2 SWAP1 PUSH2 0x2AFB JUMP JUMPDEST PUSH2 0xB6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41F PUSH2 0xD50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42C SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44A SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0xD64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x46D PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48B PUSH2 0xDBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x2832 JUMP JUMPDEST PUSH2 0xDD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0xE3C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CD PUSH2 0xECA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x507 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x514 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x525 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x543 PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x573 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0xFF1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58A SWAP2 SWAP1 PUSH2 0x2832 JUMP JUMPDEST PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5BA SWAP2 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x2B64 JUMP JUMPDEST PUSH2 0x109C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F9 PUSH2 0x114A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x615 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x115C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x622 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x633 PUSH2 0x1179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x640 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x663 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x2C52 JUMP JUMPDEST PUSH2 0x117F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x67F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x67A SWAP2 SWAP1 PUSH2 0x2D01 JUMP JUMPDEST PUSH2 0x14B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68C SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x2D3F JUMP JUMPDEST PUSH2 0x1544 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6B9 PUSH2 0x1649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6C6 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x166E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x719 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x28F6 JUMP JUMPDEST PUSH2 0x168B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x726 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x737 SWAP1 PUSH2 0x2DBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x763 SWAP1 PUSH2 0x2DBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x785 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x791 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7C3 PUSH2 0x1736 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D0 DUP2 DUP6 DUP6 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3D DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x7EA JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x7FE PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x813 PUSH2 0x174F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x881 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x878 SWAP1 PUSH2 0x2E5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x88A DUP2 PUSH2 0x168B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x895 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x33 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4D55A8BE181FB8D75B76F2D48AA0B2EE40F47E53D6E61763EEEEC46FEEA8A24 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH2 0x924 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x93B PUSH1 0x43 SLOAD PUSH1 0x42 SLOAD PUSH2 0x1820 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT PUSH2 0x94A JUMPI PUSH2 0x949 PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x95C DUP6 PUSH2 0x957 PUSH2 0x1736 JUMP JUMPDEST PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x998 SWAP1 PUSH2 0x2EEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B5 DUP6 PUSH2 0x9AD PUSH2 0x1736 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x173D JUMP JUMPDEST PUSH2 0x9C0 DUP6 DUP6 DUP6 PUSH2 0x1A43 JUMP JUMPDEST SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x42 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA05 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xA0D PUSH2 0x1BA7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA95 SWAP1 PUSH2 0x2F78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB5 PUSH1 0x43 SLOAD PUSH1 0x42 SLOAD PUSH2 0x1820 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT PUSH2 0xAC4 JUMPI PUSH2 0xAC3 PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH2 0xACE DUP3 DUP3 PUSH2 0x1C07 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xADC CALLER DUP3 PUSH2 0x1C86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAE7 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x915D8B94CDCBF4FA1B4C768B15F63B99AEE21096B9D04FE1938F45833036106D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xB75 PUSH2 0x174F JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH1 0x4 PUSH1 0x5 DUP2 LT PUSH2 0xBAA JUMPI PUSH2 0xBA9 PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD EQ PUSH2 0xBEF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE6 SWAP1 PUSH2 0x300D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0xCEE JUMPI PUSH2 0x4E20 DUP3 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0xC10 JUMPI PUSH2 0xC0F PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD GT ISZERO PUSH2 0xC56 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4D SWAP1 PUSH2 0x3075 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0xCDB JUMPI DUP3 PUSH1 0x1 DUP3 PUSH2 0xC6C SWAP2 SWAP1 PUSH2 0x30C0 JUMP JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0xC7D JUMPI PUSH2 0xC7C PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 DUP3 PUSH1 0x5 DUP2 LT PUSH2 0xC95 JUMPI PUSH2 0xC94 PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD GT PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0xCE6 SWAP1 PUSH2 0x3181 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBF1 JUMP JUMPDEST POP DUP2 PUSH1 0x38 SWAP1 PUSH1 0x5 PUSH2 0xD00 SWAP3 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST POP DUP1 PUSH1 0x3D SWAP1 PUSH1 0x5 PUSH2 0xD12 SWAP3 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST POP PUSH32 0xFCA5DD7612680A40F4851BB137ECC39852BD2A1A3CC176EFBB39AFFA8CE97214 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xD44 SWAP3 SWAP2 SWAP1 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD6E PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E20 DUP2 JUMP JUMPDEST PUSH2 0xDC5 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xDCE PUSH0 PUSH2 0x1D05 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xDDB DUP4 CALLER PUSH2 0x14B4 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE17 SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2D DUP4 CALLER DUP5 DUP5 SUB PUSH2 0x173D JUMP JUMPDEST PUSH2 0xE37 DUP4 DUP4 PUSH2 0x1C86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE44 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x34 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25CF73D41A7A2F5BAA3ED34B7A72144453377D3D6C59B74DB14E0FF168FD1FA9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xED2 PUSH2 0x174F JUMP JUMPDEST PUSH2 0xEDA PUSH2 0x1DD6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x36 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xF28 PUSH2 0x1E37 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xF5E PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0xF6F SWAP1 PUSH2 0x2DBC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF9B SWAP1 PUSH2 0x2DBC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xFE6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xFBD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFE6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xFC9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xFF9 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x43 DUP2 SWAP1 SSTORE POP PUSH32 0xF759D32EC37FE15560FBB2AD08F9EA31689D826215D24D6A6E2E740C517C66DB DUP2 PUSH1 0x40 MLOAD PUSH2 0x102F SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1043 PUSH2 0x17D6 JUMP JUMPDEST PUSH2 0x105A PUSH1 0x43 SLOAD PUSH1 0x42 SLOAD PUSH2 0x1820 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1069 JUMPI PUSH2 0x1068 PUSH2 0x1835 JUMP JUMPDEST JUMPDEST PUSH2 0x107B PUSH2 0x1074 PUSH2 0x1736 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x1A43 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x38 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x1092 JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x10A4 PUSH2 0x174F JUMP JUMPDEST DUP1 PUSH1 0x37 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA4A2B2457D2065452473BED7D55C8FA2F65FC4A1EFF1EBDAF14A1B7281E7773 DUP3 PUSH1 0x40 MLOAD PUSH2 0x113E SWAP2 SWAP1 PUSH2 0x288A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x1152 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x115A PUSH2 0xDBD JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x43 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x1188 PUSH2 0x1E5E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x11D0 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1203 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1211 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x1295 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x129F DUP11 DUP11 PUSH2 0x1E85 JUMP JUMPDEST PUSH2 0x12A8 CALLER PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x12B0 PUSH2 0x1EAF JUMP JUMPDEST DUP8 PUSH1 0x32 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x33 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0x34 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x10F0CF064DD59200000 DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0xA968163F0A57B400000 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MSTORE POP PUSH1 0x38 SWAP1 PUSH1 0x5 PUSH2 0x13EE SWAP3 SWAP2 SWAP1 PUSH2 0x2649 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x3E8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x320 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x258 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xC8 PUSH2 0xFFFF AND DUP2 MSTORE POP PUSH1 0x3D SWAP1 PUSH1 0x5 PUSH2 0x1443 SWAP3 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST POP PUSH3 0x15180 PUSH1 0x43 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x14A8 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x149F SWAP2 SWAP1 PUSH2 0x3378 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x14BE PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x154C PUSH2 0x174F JUMP JUMPDEST DUP2 PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x36 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56EF0FE49F8EE42D7982BB42D42FA7B8D1370EC36D0F8CB83802A7F74215027D DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x163C SWAP3 SWAP2 SWAP1 PUSH2 0x3391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x32 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x37 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x1693 PUSH2 0x174F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1703 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x170C DUP2 PUSH2 0x1D05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x174A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EC1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1757 PUSH2 0x1736 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1775 PUSH2 0xF1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17D4 JUMPI PUSH2 0x1798 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17CB SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17DE PUSH2 0xD50 JUMP JUMPDEST ISZERO PUSH2 0x181E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1815 SWAP1 PUSH2 0x3402 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x182D SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A3A JUMPI PUSH0 DUP1 PUSH1 0x34 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x902F1AC00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x3497 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x198B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1990 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x19D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19CC SWAP1 PUSH2 0x34F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x19EA SWAP2 SWAP1 PUSH2 0x3529 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x19F5 PUSH2 0x7F4 JUMP JUMPDEST GT ISZERO PUSH2 0x1A36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2D SWAP1 PUSH2 0x359E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMPDEST TIMESTAMP PUSH1 0x42 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x35 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1ADF JUMPI POP PUSH1 0x36 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x1B30 JUMPI POP PUSH1 0x37 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B45 JUMPI PUSH2 0x1B40 DUP5 DUP5 DUP5 PUSH2 0x209E JUMP JUMPDEST PUSH2 0x1B9C JUMP JUMPDEST PUSH0 PUSH2 0x1B4F DUP4 PUSH2 0x218E JUMP JUMPDEST SWAP1 POP PUSH2 0x1B7D DUP6 PUSH1 0x33 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x209E JUMP JUMPDEST PUSH2 0x1B9A DUP6 DUP6 PUSH2 0x1B95 DUP5 DUP8 PUSH2 0x2252 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x209E JUMP JUMPDEST POP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1BAF PUSH2 0x2267 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1BF0 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BFD SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C77 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C6E SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C82 PUSH0 DUP4 DUP4 PUSH2 0x22B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CF6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CED SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D01 DUP3 PUSH0 DUP4 PUSH2 0x22B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D0E PUSH2 0x1E37 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1DDE PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1E20 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E2D SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1E8D PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x1E97 DUP3 DUP3 PUSH2 0x251F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1EA3 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x1EAC DUP2 PUSH2 0x255B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1EB7 PUSH2 0x24DF JUMP JUMPDEST PUSH2 0x1EBF PUSH2 0x25DF JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1ECA PUSH2 0x170F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F33 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FAC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FA3 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x2097 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x208E SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x210E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2105 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x217E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2175 SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2189 DUP4 DUP4 DUP4 PUSH2 0x22B0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2211 JUMPI PUSH1 0x38 DUP2 PUSH1 0x5 DUP2 LT PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP4 GT PUSH2 0x21FE JUMPI PUSH2 0x21F6 PUSH3 0x186A0 PUSH2 0x21E8 PUSH1 0x3D DUP5 PUSH1 0x5 DUP2 LT PUSH2 0x21D7 JUMPI PUSH2 0x21D6 PUSH2 0x2F96 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP7 PUSH2 0x2601 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2616 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x224D JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2209 SWAP1 PUSH2 0x3181 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2194 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2244 SWAP1 PUSH2 0x3606 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x225F SWAP2 SWAP1 PUSH2 0x30C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x226F PUSH2 0xD50 JUMP JUMPDEST PUSH2 0x22AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22A5 SWAP1 PUSH2 0x366E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x22B9 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x230D JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2301 SWAP2 SWAP1 PUSH2 0x3420 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x23DF JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x2398 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x238F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x368C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2428 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2474 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x24D1 SWAP2 SWAP1 PUSH2 0x28DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x24E7 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x251D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2527 PUSH2 0x24DF JUMP JUMPDEST PUSH0 PUSH2 0x2530 PUSH2 0x170F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x2543 SWAP2 SWAP1 PUSH2 0x3855 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x2555 SWAP2 SWAP1 PUSH2 0x3855 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2563 PUSH2 0x24DF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x25D3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25CA SWAP2 SWAP1 PUSH2 0x29B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25DC DUP2 PUSH2 0x1D05 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x25E7 PUSH2 0x24DF JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x260E SWAP2 SWAP1 PUSH2 0x3924 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x2623 SWAP2 SWAP1 PUSH2 0x3992 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2634 PUSH2 0x1E5E JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2678 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2677 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x265C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2685 SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x5 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x26BE JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x26BD JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0xFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x269C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x26CB SWAP2 SWAP1 PUSH2 0x26CF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x26E6 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x26D0 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2721 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2706 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2746 DUP3 PUSH2 0x26EA JUMP JUMPDEST PUSH2 0x2750 DUP2 DUP6 PUSH2 0x26F4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2760 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2704 JUMP JUMPDEST PUSH2 0x2769 DUP2 PUSH2 0x272C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x278C DUP2 DUP5 PUSH2 0x273C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27CE DUP3 PUSH2 0x27A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27DE DUP2 PUSH2 0x27C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x27E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27F9 DUP2 PUSH2 0x27D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2811 DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP2 EQ PUSH2 0x281B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x282C DUP2 PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2848 JUMPI PUSH2 0x2847 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2855 DUP6 DUP3 DUP7 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2866 DUP6 DUP3 DUP7 ADD PUSH2 0x281E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2884 DUP2 PUSH2 0x2870 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x289D PUSH0 DUP4 ADD DUP5 PUSH2 0x287B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28B8 JUMPI PUSH2 0x28B7 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28C5 DUP5 DUP3 DUP6 ADD PUSH2 0x281E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D7 DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28F0 PUSH0 DUP4 ADD DUP5 PUSH2 0x28CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x290B JUMPI PUSH2 0x290A PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2918 DUP5 DUP3 DUP6 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2938 JUMPI PUSH2 0x2937 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2945 DUP7 DUP3 DUP8 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2956 DUP7 DUP3 DUP8 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2967 DUP7 DUP3 DUP8 ADD PUSH2 0x281E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2986 DUP2 PUSH2 0x2971 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x299F PUSH0 DUP4 ADD DUP5 PUSH2 0x297D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29AE DUP2 PUSH2 0x27C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29C7 PUSH0 DUP4 ADD DUP5 PUSH2 0x29A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2A07 DUP3 PUSH2 0x272C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A26 JUMPI PUSH2 0x2A25 PUSH2 0x29D1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A38 PUSH2 0x2794 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A44 DUP3 DUP3 PUSH2 0x29FE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A63 JUMPI PUSH2 0x2A62 PUSH2 0x29D1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x2A84 PUSH2 0x2A7F DUP5 PUSH2 0x2A49 JUMP JUMPDEST PUSH2 0x2A2F JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2A9E JUMPI PUSH2 0x2A9D PUSH2 0x2A6E JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AC7 JUMPI DUP1 PUSH2 0x2AB3 DUP9 DUP3 PUSH2 0x281E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2AA0 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AE5 JUMPI PUSH2 0x2AE4 PUSH2 0x29CD JUMP JUMPDEST JUMPDEST PUSH1 0x5 PUSH2 0x2AF2 DUP5 DUP3 DUP6 PUSH2 0x2A72 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x140 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B12 JUMPI PUSH2 0x2B11 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B1F DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x2B30 DUP6 DUP3 DUP7 ADD PUSH2 0x2AD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B43 DUP2 PUSH2 0x2870 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B4D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B5E DUP2 PUSH2 0x2B3A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B7A JUMPI PUSH2 0x2B79 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B87 DUP6 DUP3 DUP7 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B98 DUP6 DUP3 DUP7 ADD PUSH2 0x2B50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BC0 JUMPI PUSH2 0x2BBF PUSH2 0x29D1 JUMP JUMPDEST JUMPDEST PUSH2 0x2BC9 DUP3 PUSH2 0x272C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2BF6 PUSH2 0x2BF1 DUP5 PUSH2 0x2BA6 JUMP JUMPDEST PUSH2 0x2A2F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C12 JUMPI PUSH2 0x2C11 PUSH2 0x2BA2 JUMP JUMPDEST JUMPDEST PUSH2 0x2C1D DUP5 DUP3 DUP6 PUSH2 0x2BD6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C39 JUMPI PUSH2 0x2C38 PUSH2 0x29CD JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C49 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2C6B JUMPI PUSH2 0x2C6A PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C88 JUMPI PUSH2 0x2C87 PUSH2 0x27A1 JUMP JUMPDEST JUMPDEST PUSH2 0x2C94 DUP9 DUP3 DUP10 ADD PUSH2 0x2C25 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB5 JUMPI PUSH2 0x2CB4 PUSH2 0x27A1 JUMP JUMPDEST JUMPDEST PUSH2 0x2CC1 DUP9 DUP3 DUP10 ADD PUSH2 0x2C25 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2CD2 DUP9 DUP3 DUP10 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2CE3 DUP9 DUP3 DUP10 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2CF4 DUP9 DUP3 DUP10 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D17 JUMPI PUSH2 0x2D16 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D24 DUP6 DUP3 DUP7 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D35 DUP6 DUP3 DUP7 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D56 JUMPI PUSH2 0x2D55 PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D63 DUP7 DUP3 DUP8 ADD PUSH2 0x27EB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2D74 DUP7 DUP3 DUP8 ADD PUSH2 0x2B50 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D85 DUP7 DUP3 DUP8 ADD PUSH2 0x2B50 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2DD3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2DE6 JUMPI PUSH2 0x2DE5 PUSH2 0x2D8F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A204E65772061646D696E2063616E6E6F7420626520746865207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E46 PUSH1 0x2A DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E51 DUP3 PUSH2 0x2DEC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E73 DUP2 PUSH2 0x2E3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A207472616E7366657220616D6F756E74206578636565647320616C PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6F77616E636500000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2ED4 PUSH1 0x27 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EDF DUP3 PUSH2 0x2E7A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F01 DUP2 PUSH2 0x2EC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A2063616C6C6572206973206E6F742074686520737570706C79436F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E74726F6C6C6572000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F62 PUSH1 0x28 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6D DUP3 PUSH2 0x2F08 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F8F DUP2 PUSH2 0x2F56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x474946543A204C6173742074696572206D757374206265206D61780000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FF7 PUSH1 0x1B DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3002 DUP3 PUSH2 0x2FC3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3024 DUP2 PUSH2 0x2FEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A205461782070657263656E7461676520746F6F2068696768000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x305F PUSH1 0x1D DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x306A DUP3 PUSH2 0x302B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x308C DUP2 PUSH2 0x3053 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x30CA DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH2 0x30D5 DUP4 PUSH2 0x27FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x30ED JUMPI PUSH2 0x30EC PUSH2 0x3093 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x474946543A205469657273206D75737420626520696E20617363656E64696E67 PUSH0 DUP3 ADD MSTORE PUSH32 0x206F726465720000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x314D PUSH1 0x26 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3158 DUP3 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x317A DUP2 PUSH2 0x3141 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x318B DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x31BD JUMPI PUSH2 0x31BC PUSH2 0x3093 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31EE DUP2 PUSH2 0x27FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x31FF DUP4 DUP4 PUSH2 0x31E5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3220 DUP2 PUSH2 0x31C8 JUMP JUMPDEST PUSH2 0x322A DUP2 DUP5 PUSH2 0x31D2 JUMP JUMPDEST SWAP3 POP PUSH2 0x3235 DUP3 PUSH2 0x31DC JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3265 JUMPI DUP2 MLOAD PUSH2 0x324C DUP8 DUP3 PUSH2 0x31F4 JUMP JUMPDEST SWAP7 POP PUSH2 0x3257 DUP4 PUSH2 0x320B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3238 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH2 0x3281 PUSH0 DUP4 ADD DUP6 PUSH2 0x3217 JUMP JUMPDEST PUSH2 0x328E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x3217 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x474946543A206275726E20616D6F756E74206578636565647320616C6C6F7761 PUSH0 DUP3 ADD MSTORE PUSH32 0x6E63650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x32EF PUSH1 0x23 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x32FA DUP3 PUSH2 0x3295 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x331C DUP2 PUSH2 0x32E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3362 PUSH2 0x335D PUSH2 0x3358 DUP5 PUSH2 0x3323 JUMP JUMPDEST PUSH2 0x333F JUMP JUMPDEST PUSH2 0x332C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3372 DUP2 PUSH2 0x3348 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x338B PUSH0 DUP4 ADD DUP5 PUSH2 0x3369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33A4 PUSH0 DUP4 ADD DUP6 PUSH2 0x287B JUMP JUMPDEST PUSH2 0x33B1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x287B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x33EC PUSH1 0x10 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x33F7 DUP3 PUSH2 0x33B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3419 DUP2 PUSH2 0x33E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x342A DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH2 0x3435 DUP4 PUSH2 0x27FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x344D JUMPI PUSH2 0x344C PUSH2 0x3093 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3471 DUP3 PUSH2 0x3453 JUMP JUMPDEST PUSH2 0x347B DUP2 DUP6 PUSH2 0x345D JUMP JUMPDEST SWAP4 POP PUSH2 0x348B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2704 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x34A2 DUP3 DUP5 PUSH2 0x3467 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x474946543A204661696C656420746F20636865636B2072657365727665730000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x34E1 PUSH1 0x1E DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x34EC DUP3 PUSH2 0x34AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x350E DUP2 PUSH2 0x34D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3523 DUP2 PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x353E JUMPI PUSH2 0x353D PUSH2 0x279D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x354B DUP5 DUP3 DUP6 ADD PUSH2 0x3515 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x474946543A20496E73756666696369656E742072657365727665730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3588 PUSH1 0x1B DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3593 DUP3 PUSH2 0x3554 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35B5 DUP2 PUSH2 0x357C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x474946543A20496E76616C696420616D6F756E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x35F0 PUSH1 0x14 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x35FB DUP3 PUSH2 0x35BC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x361D DUP2 PUSH2 0x35E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3658 PUSH1 0x14 DUP4 PUSH2 0x26F4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3663 DUP3 PUSH2 0x3624 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3685 DUP2 PUSH2 0x364C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x369F PUSH0 DUP4 ADD DUP7 PUSH2 0x29A5 JUMP JUMPDEST PUSH2 0x36AC PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x28CE JUMP JUMPDEST PUSH2 0x36B9 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x28CE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x371D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x36E2 JUMP JUMPDEST PUSH2 0x3727 DUP7 DUP4 PUSH2 0x36E2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3759 PUSH2 0x3754 PUSH2 0x374F DUP5 PUSH2 0x27FF JUMP JUMPDEST PUSH2 0x333F JUMP JUMPDEST PUSH2 0x27FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3772 DUP4 PUSH2 0x373F JUMP JUMPDEST PUSH2 0x3786 PUSH2 0x377E DUP3 PUSH2 0x3760 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x36EE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x379A PUSH2 0x378E JUMP JUMPDEST PUSH2 0x37A5 DUP2 DUP5 DUP5 PUSH2 0x3769 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x37C8 JUMPI PUSH2 0x37BD PUSH0 DUP3 PUSH2 0x3792 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x37AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x380D JUMPI PUSH2 0x37DE DUP2 PUSH2 0x36C1 JUMP JUMPDEST PUSH2 0x37E7 DUP5 PUSH2 0x36D3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x37F6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x380A PUSH2 0x3802 DUP6 PUSH2 0x36D3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x37AA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x382D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3812 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3845 DUP4 DUP4 PUSH2 0x381E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x385E DUP3 PUSH2 0x26EA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3877 JUMPI PUSH2 0x3876 PUSH2 0x29D1 JUMP JUMPDEST JUMPDEST PUSH2 0x3881 DUP3 SLOAD PUSH2 0x2DBC JUMP JUMPDEST PUSH2 0x388C DUP3 DUP3 DUP6 PUSH2 0x37CC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x38BD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x38AB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x38B5 DUP6 DUP3 PUSH2 0x383A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x391C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x38CB DUP7 PUSH2 0x36C1 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x38F2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38CD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x390F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x390B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x381E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x392E DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH2 0x3939 DUP4 PUSH2 0x27FF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3947 DUP2 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x395E JUMPI PUSH2 0x395D PUSH2 0x3093 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x399C DUP3 PUSH2 0x27FF JUMP JUMPDEST SWAP2 POP PUSH2 0x39A7 DUP4 PUSH2 0x27FF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x39B7 JUMPI PUSH2 0x39B6 PUSH2 0x3965 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 STOP 0x5D STOP 0xB2 0xC8 PUSH29 0x680778B0200CC630739D6EBA3C97893559553EFF21767F5C1364736F6C PUSH4 0x43000814 STOP CALLER ",
							"sourceMap": "384:7347:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;840:32:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4191:152:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7430:201:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3372:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5406:468;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;946:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4049:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;550:26:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5129:67;;;:::i;:::-;;4456:126;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4590:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3171:193;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2606:553;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1879:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4401:171:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;881:51:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;4683:365:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4082:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5058:63;;;:::i;:::-;;687:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;583:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3268:148:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4277:169:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5204:192;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;807:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3892:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7639:89;;;:::i;:::-;;622:58;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;984:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1847:745;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5003:195:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3543:339:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;512:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;751:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3011:144:3;3056:13;3081:22;3106:18;:16;:18::i;:::-;3081:43;;3141:1;:7;;3134:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;5594:13;5610:12;:10;:12::i;:::-;5594:28;;5632:31;5641:5;5648:7;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;:::o;840:32:9:-;;;;;;;;;;;;;;;;;;;;:::o;4191:152:3:-;4243:7;4262:22;4287:18;:16;:18::i;:::-;4262:43;;4322:1;:14;;;4315:21;;;4191:152;:::o;7430:201:9:-;2334:13:0;:11;:13::i;:::-;7536:1:9::1;7516:22;;:8;:22;;::::0;7508:77:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7596:27;7614:8;7596:17;:27::i;:::-;7430:201:::0;:::o;3372:163::-;2334:13:0;:11;:13::i;:::-;3465:15:9::1;3451:11;;:29;;;;;;;;;;;;;;;;;;3511:15;3496:31;;;;;;;;;;;;3372:163:::0;:::o;5406:468::-;5540:4;1503:19:2;:17;:19::i;:::-;1731:40:9::1;1752:18;;1731:16;;:20;;:40;;;;:::i;:::-;1712:15;:59;1708:108;;1788:16;:14;:16::i;:::-;1708:108;5557:24:::2;5584:31;5594:6;5602:12;:10;:12::i;:::-;5584:9;:31::i;:::-;5557:58;;5654:6;5634:16;:26;;5626:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;5740:57;5749:6;5757:12;:10;:12::i;:::-;5790:6;5771:16;:25;5740:8;:57::i;:::-;5826:40;5840:6;5848:9;5859:6;5826:13;:40::i;:::-;5819:47;;;5406:468:::0;;;;;:::o;946:31::-;;;;:::o;4049:82:3:-;4098:5;4122:2;4115:9;;4049:82;:::o;550:26:9:-;;;;;;;;;;;;;:::o;5129:67::-;2334:13:0;:11;:13::i;:::-;5178:10:9::1;:8;:10::i;:::-;5129:67::o:0;4456:126::-;1583:16;;;;;;;;;;;1569:30;;:10;:30;;;1561:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;1731:40:::1;1752:18;;1731:16;;:20;;:40;;;;:::i;:::-;1712:15;:59;1708:108;;1788:16;:14;:16::i;:::-;1708:108;4555:19:::2;4561:3;4566:7;4555:5;:19::i;:::-;4456:126:::0;;:::o;4590:85::-;4641:26;4647:10;4659:7;4641:5;:26::i;:::-;4590:85;:::o;3171:193::-;2334:13:0;:11;:13::i;:::-;3279:20:9::1;3260:16;;:39;;;;;;;;;;;;;;;;;;3335:20;3315:41;;;;;;;;;;;;3171:193:::0;:::o;2606:553::-;2334:13:0;:11;:13::i;:::-;2741:17:9::1;2728:6;2735:1;2728:9;;;;;;;:::i;:::-;;;;;;:30;2720:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2806:6;2801:235;2822:1;2818;:5;2801:235;;;926:6;2853:12;2866:1;2853:15;;;;;;;:::i;:::-;;;;;;:37;;2845:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2947:1;2943;:5;2939:85;;;2970:6;2979:1;2977;:3;;;;:::i;:::-;2970:11;;;;;;;:::i;:::-;;;;;;2958:6;2965:1;2958:9;;;;;;;:::i;:::-;;;;;;:23;2950:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2939:85;2825:3;;;;;:::i;:::-;;;;2801:235;;;;3057:6;3046:8;:17;;;;;;;:::i;:::-;;3091:12;3074:14;:29;;;;;;;:::i;:::-;;3119:32;3130:6;3138:12;3119:32;;;;;;;:::i;:::-;;;;;;;;2606:553:::0;;:::o;1879:84:2:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;4401:171:3:-;4466:7;4485:22;4510:18;:16;:18::i;:::-;4485:43;;4545:1;:11;;:20;4557:7;4545:20;;;;;;;;;;;;;;;;4538:27;;;4401:171;;;:::o;881:51:9:-;926:6;881:51;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;4683:365:9:-;4756:24;4783:31;4793:8;4803:10;4783:9;:31::i;:::-;4756:58;;4853:7;4833:16;:27;;4825:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;4936:58;4945:8;4955:10;4986:7;4967:16;:26;4936:8;:58::i;:::-;5016:24;5022:8;5032:7;5016:5;:24::i;:::-;4745:303;4683:365;;:::o;4082:187::-;2334:13:0;:11;:13::i;:::-;4187:19:9::1;4169:15;;:37;;;;;;;;;;;;;;;;;;4241:19;4222:39;;;;;;;;;;;;4082:187:::0;:::o;5058:63::-;2334:13:0;:11;:13::i;:::-;5105:8:9::1;:6;:8::i;:::-;5058:63::o:0;687:57::-;;;;;;;;;;;;;;;;;;;;;;:::o;583:30::-;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3268:148:3:-;3315:13;3340:22;3365:18;:16;:18::i;:::-;3340:43;;3400:1;:9;;3393:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3268:148;:::o;4277:169:9:-;2334:13:0;:11;:13::i;:::-;4379:10:9::1;4358:18;:31;;;;4405:33;4427:10;4405:33;;;;;;:::i;:::-;;;;;;;;4277:169:::0;:::o;5204:192::-;5318:4;1503:19:2;:17;:19::i;:::-;1731:40:9::1;1752:18;;1731:16;;:20;;:40;;;;:::i;:::-;1712:15;:59;1708:108;;1788:16;:14;:16::i;:::-;1708:108;5342:46:::2;5356:12;:10;:12::i;:::-;5370:9;5381:6;5342:13;:46::i;:::-;5335:53;;5204:192:::0;;;;:::o;807:26::-;;;;;;;;;;;;;;;;;;;;:::o;3892:182::-;2334:13:0;:11;:13::i;:::-;4008:7:9::1;3980:15;:25;3996:8;3980:25;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;4048:8;4031:35;;;4058:7;4031:35;;;;;;:::i;:::-;;;;;;;;3892:182:::0;;:::o;7639:89::-;2334:13:0;:11;:13::i;:::-;7701:19:9::1;:17;:19::i;:::-;7639:89::o:0;622:58::-;;;;;;;;;;;;;;;;;;;;;;:::o;984:33::-;;;;:::o;1847:745::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;2068:26:9::1;2081:4;2087:6;2068:12;:26::i;:::-;2105;2120:10;2105:14;:26::i;:::-;2142:17;:15;:17::i;:::-;2199;2180:16;;:36;;;;;;;;;;;;;;;;;;2241:12;2227:11;;:26;;;;;;;;;;;;;;;;;;2282:16;2264:15;;:34;;;;;;;;;;;;;;;;;;2372:80;;;;;;;;2384:10;2372:80;;;;2396:10;2372:80;;;;2408:11;2372:80;;;;2421:11;2372:80;;;;2434:17;2372:80;;::::0;:8:::1;:80;;;;;;;:::i;:::-;;2463:43;;;;;;;;2481:4;2463:43;;;;;;2487:3;2463:43;;;;;;2492:3;2463:43;;;;;;2497:3;2463:43;;;;;;2502:3;2463:43;;;;::::0;:14:::1;:43;;;;;;;:::i;:::-;;2578:6;2557:18;:27;;;;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;1847:745:9;;;;;:::o;5003:195:3:-;5083:7;5102:22;5127:18;:16;:18::i;:::-;5102:43;;5162:1;:13;;:20;5176:5;5162:20;;;;;;;;;;;;;;;:29;5183:7;5162:29;;;;;;;;;;;;;;;;5155:36;;;5003:195;;;;:::o;3543:339:9:-;2334:13:0;:11;:13::i;:::-;3706:19:9::1;3667:26;:36;3694:8;3667:36;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;3774:18;3736:25;:35;3762:8;3736:35;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;3824:8;3808:66;;;3834:19;3855:18;3808:66;;;;;;;:::i;:::-;;;;;;;;3543:339:::0;;;:::o;512:31::-;;;;;;;;;;;;;:::o;751:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2242:153:3:-;2292:22;2359:20;2349:30;;2242:153;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;10264:128:3:-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;2031:106:2:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;2766:96:5:-;2824:7;2854:1;2850;:5;;;;:::i;:::-;2843:12;;2766:96;;;;:::o;6688:470:9:-;6765:1;6738:29;;:15;;;;;;;;;;;:29;;;6734:372;;6785:12;6799:17;6820:15;;;;;;;;;;;:26;;6847:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6820:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6784:104;;;;6911:7;6903:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;6968:16;6998:4;6987:27;;;;;;;;;;;;:::i;:::-;6968:46;;7054:8;7037:13;:11;:13::i;:::-;:25;;7029:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6769:337;;;6734:372;7135:15;7116:16;:34;;;;6688:470::o;5882:492::-;5982:4;6003:26;:34;6030:6;6003:34;;;;;;;;;;;;;;;;;;;;;;;;;:74;;;;6041:25;:36;6067:9;6041:36;;;;;;;;;;;;;;;;;;;;;;;;;6003:74;:101;;;;6081:15;:23;6097:6;6081:23;;;;;;;;;;;;;;;;;;;;;;;;;6003:101;5999:346;;;6121:36;6131:6;6139:9;6150:6;6121:9;:36::i;:::-;5999:346;;;6190:11;6204:19;6216:6;6204:11;:19::i;:::-;6190:33;;6238:35;6248:6;6256:11;;;;;;;;;;;6269:3;6238:9;:35::i;:::-;6288:45;6298:6;6306:9;6317:15;6328:3;6317:6;:10;;:15;;;;:::i;:::-;6288:9;:45::i;:::-;6175:170;5999:346;6362:4;6355:11;;5882:492;;;;;:::o;2697:117:2:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;8996:208:3:-;9085:1;9066:21;;:7;:21;;;9062:91;;9139:1;9110:32;;;;;;;;;;;:::i;:::-;;;;;;;;9062:91;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;:::-;8996:208;;:::o;9522:206::-;9611:1;9592:21;;:7;:21;;;9588:89;;9663:1;9636:30;;;;;;;;;;;:::i;:::-;;;;;;;;9588:89;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;:::-;9522:206;;:::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;2450:115:2:-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;1192:159:0:-;1244:24;1313:22;1303:32;;1192:159;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2577:147:3:-;6931:20:1;:18;:20::i;:::-;2679:38:3::1;2702:5;2709:7;2679:22;:38::i;:::-;2577:147:::0;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1084:97:2:-;6931:20:1;:18;:20::i;:::-;1147:27:2::1;:25;:27::i;:::-;1084:97::o:0;11224:487:3:-;11332:22;11357:18;:16;:18::i;:::-;11332:43;;11406:1;11389:19;;:5;:19;;;11385:89;;11460:1;11431:32;;;;;;;;;;;:::i;:::-;;;;;;;;11385:89;11506:1;11487:21;;:7;:21;;;11483:90;;11559:1;11531:31;;;;;;;;;;;:::i;:::-;;;;;;;;11483:90;11614:5;11582:1;:13;;:20;11596:5;11582:20;;;;;;;;;;;;;;;:29;11603:7;11582:29;;;;;;;;;;;;;;;:37;;;;11633:9;11629:76;;;11679:7;11663:31;;11672:5;11663:31;;;11688:5;11663:31;;;;;;:::i;:::-;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;6868:300::-;6967:1;6951:18;;:4;:18;;;6947:86;;7019:1;6992:30;;;;;;;;;;;:::i;:::-;;;;;;;;6947:86;7060:1;7046:16;;:2;:16;;;7042:86;;7114:1;7085:32;;;;;;;;;;;:::i;:::-;;;;;;;;7042:86;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;:::-;6868:300;;;:::o;6384:296:9:-;6445:7;6470:6;6479:1;6470:10;;6465:167;6486:1;6482;:5;6465:167;;;6524:8;6533:1;6524:11;;;;;;;:::i;:::-;;;;6513:7;:22;6509:112;;6563:42;6598:6;6563:30;6575:14;6590:1;6575:17;;;;;;;:::i;:::-;;;;6563:7;:11;;:30;;;;:::i;:::-;:34;;:42;;;;:::i;:::-;6556:49;;;;;6509:112;6489:3;;;;;:::i;:::-;;;;6465:167;;;;6642:30;;;;;;;;;;:::i;:::-;;;;;;;;6384:296;;;;:::o;3133:96:5:-;3191:7;3221:1;3217;:5;;;;:::i;:::-;3210:12;;3133:96;;;;:::o;2209:106:2:-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;7483:1170:3:-;7568:22;7593:18;:16;:18::i;:::-;7568:43;;7641:1;7625:18;;:4;:18;;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7621:546;;;7815:19;7837:1;:11;;:17;7849:4;7837:17;;;;;;;;;;;;;;;;7815:39;;7886:5;7872:11;:19;7868:115;;;7943:4;7949:11;7962:5;7918:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7868:115;8137:5;8123:11;:19;8103:1;:11;;:17;8115:4;8103:17;;;;;;;;;;;;;;;:39;;;;7801:366;7621:546;8195:1;8181:16;;:2;:16;;;8177:429;;8362:5;8344:1;:14;;;:23;;;;;;;;;;;8177:429;;;8576:5;8557:1;:11;;:15;8569:2;8557:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;8177:429;8636:2;8621:25;;8630:4;8621:25;;;8640:5;8621:25;;;;;;:::i;:::-;;;;;;;;7558:1095;7483:1170;;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2730:216:3:-;6931:20:1;:18;:20::i;:::-;2842:22:3::1;2867:18;:16;:18::i;:::-;2842:43;;2905:5;2895:1;:7;;:15;;;;;;:::i;:::-;;2932:7;2920:1;:9;;:19;;;;;;:::i;:::-;;2832:114;2730:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1187:95:2:-;6931:20:1;:18;:20::i;:::-;1270:5:2::1;1260:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;3476:96:5:-;3534:7;3564:1;3560;:5;;;;:::i;:::-;3553:12;;3476:96;;;;:::o;3861:::-;3919:7;3949:1;3945;:5;;;;:::i;:::-;3938:12;;3861:96;;;;:::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:329::-;3505:6;3554:2;3542:9;3533:7;3529:23;3525:32;3522:119;;;3560:79;;:::i;:::-;3522:119;3680:1;3705:53;3750:7;3741:6;3730:9;3726:22;3705:53;:::i;:::-;3695:63;;3651:117;3446:329;;;;:::o;3781:118::-;3868:24;3886:5;3868:24;:::i;:::-;3863:3;3856:37;3781:118;;:::o;3905:222::-;3998:4;4036:2;4025:9;4021:18;4013:26;;4049:71;4117:1;4106:9;4102:17;4093:6;4049:71;:::i;:::-;3905:222;;;;:::o;4133:329::-;4192:6;4241:2;4229:9;4220:7;4216:23;4212:32;4209:119;;;4247:79;;:::i;:::-;4209:119;4367:1;4392:53;4437:7;4428:6;4417:9;4413:22;4392:53;:::i;:::-;4382:63;;4338:117;4133:329;;;;:::o;4468:619::-;4545:6;4553;4561;4610:2;4598:9;4589:7;4585:23;4581:32;4578:119;;;4616:79;;:::i;:::-;4578:119;4736:1;4761:53;4806:7;4797:6;4786:9;4782:22;4761:53;:::i;:::-;4751:63;;4707:117;4863:2;4889:53;4934:7;4925:6;4914:9;4910:22;4889:53;:::i;:::-;4879:63;;4834:118;4991:2;5017:53;5062:7;5053:6;5042:9;5038:22;5017:53;:::i;:::-;5007:63;;4962:118;4468:619;;;;;:::o;5093:86::-;5128:7;5168:4;5161:5;5157:16;5146:27;;5093:86;;;:::o;5185:112::-;5268:22;5284:5;5268:22;:::i;:::-;5263:3;5256:35;5185:112;;:::o;5303:214::-;5392:4;5430:2;5419:9;5415:18;5407:26;;5443:67;5507:1;5496:9;5492:17;5483:6;5443:67;:::i;:::-;5303:214;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:117::-;5984:1;5981;5974:12;5998:180;6046:77;6043:1;6036:88;6143:4;6140:1;6133:15;6167:4;6164:1;6157:15;6184:281;6267:27;6289:4;6267:27;:::i;:::-;6259:6;6255:40;6397:6;6385:10;6382:22;6361:18;6349:10;6346:34;6343:62;6340:88;;;6408:18;;:::i;:::-;6340:88;6448:10;6444:2;6437:22;6227:238;6184:281;;:::o;6471:129::-;6505:6;6532:20;;:::i;:::-;6522:30;;6561:33;6589:4;6581:6;6561:33;:::i;:::-;6471:129;;;:::o;6606:249::-;6681:4;6771:18;6763:6;6760:30;6757:56;;;6793:18;;:::i;:::-;6757:56;6843:4;6835:6;6831:17;6823:25;;6606:249;;;:::o;6861:117::-;6970:1;6967;6960:12;7002:643;7096:5;7121:79;7137:62;7192:6;7137:62;:::i;:::-;7121:79;:::i;:::-;7112:88;;7220:5;7273:4;7265:6;7261:17;7253:6;7249:30;7302:3;7294:6;7291:15;7288:122;;;7321:79;;:::i;:::-;7288:122;7436:6;7419:220;7453:6;7448:3;7445:15;7419:220;;;7528:3;7557:37;7590:3;7578:10;7557:37;:::i;:::-;7552:3;7545:50;7624:4;7619:3;7615:14;7608:21;;7495:144;7479:4;7474:3;7470:14;7463:21;;7419:220;;;7423:21;7102:543;;7002:643;;;;;:::o;7669:339::-;7738:5;7787:3;7780:4;7772:6;7768:17;7764:27;7754:122;;7795:79;;:::i;:::-;7754:122;7899:4;7921:81;7998:3;7990:6;7982;7921:81;:::i;:::-;7912:90;;7744:264;7669:339;;;;:::o;8014:568::-;8128:6;8136;8185:3;8173:9;8164:7;8160:23;8156:33;8153:120;;;8192:79;;:::i;:::-;8153:120;8312:1;8337:76;8405:7;8396:6;8385:9;8381:22;8337:76;:::i;:::-;8327:86;;8283:140;8462:3;8489:76;8557:7;8548:6;8537:9;8533:22;8489:76;:::i;:::-;8479:86;;8433:142;8014:568;;;;;:::o;8588:116::-;8658:21;8673:5;8658:21;:::i;:::-;8651:5;8648:32;8638:60;;8694:1;8691;8684:12;8638:60;8588:116;:::o;8710:133::-;8753:5;8791:6;8778:20;8769:29;;8807:30;8831:5;8807:30;:::i;:::-;8710:133;;;;:::o;8849:468::-;8914:6;8922;8971:2;8959:9;8950:7;8946:23;8942:32;8939:119;;;8977:79;;:::i;:::-;8939:119;9097:1;9122:53;9167:7;9158:6;9147:9;9143:22;9122:53;:::i;:::-;9112:63;;9068:117;9224:2;9250:50;9292:7;9283:6;9272:9;9268:22;9250:50;:::i;:::-;9240:60;;9195:115;8849:468;;;;;:::o;9323:117::-;9432:1;9429;9422:12;9446:308;9508:4;9598:18;9590:6;9587:30;9584:56;;;9620:18;;:::i;:::-;9584:56;9658:29;9680:6;9658:29;:::i;:::-;9650:37;;9742:4;9736;9732:15;9724:23;;9446:308;;;:::o;9760:146::-;9857:6;9852:3;9847;9834:30;9898:1;9889:6;9884:3;9880:16;9873:27;9760:146;;;:::o;9912:425::-;9990:5;10015:66;10031:49;10073:6;10031:49;:::i;:::-;10015:66;:::i;:::-;10006:75;;10104:6;10097:5;10090:21;10142:4;10135:5;10131:16;10180:3;10171:6;10166:3;10162:16;10159:25;10156:112;;;10187:79;;:::i;:::-;10156:112;10277:54;10324:6;10319:3;10314;10277:54;:::i;:::-;9996:341;9912:425;;;;;:::o;10357:340::-;10413:5;10462:3;10455:4;10447:6;10443:17;10439:27;10429:122;;10470:79;;:::i;:::-;10429:122;10587:6;10574:20;10612:79;10687:3;10679:6;10672:4;10664:6;10660:17;10612:79;:::i;:::-;10603:88;;10419:278;10357:340;;;;:::o;10703:1271::-;10818:6;10826;10834;10842;10850;10899:3;10887:9;10878:7;10874:23;10870:33;10867:120;;;10906:79;;:::i;:::-;10867:120;11054:1;11043:9;11039:17;11026:31;11084:18;11076:6;11073:30;11070:117;;;11106:79;;:::i;:::-;11070:117;11211:63;11266:7;11257:6;11246:9;11242:22;11211:63;:::i;:::-;11201:73;;10997:287;11351:2;11340:9;11336:18;11323:32;11382:18;11374:6;11371:30;11368:117;;;11404:79;;:::i;:::-;11368:117;11509:63;11564:7;11555:6;11544:9;11540:22;11509:63;:::i;:::-;11499:73;;11294:288;11621:2;11647:53;11692:7;11683:6;11672:9;11668:22;11647:53;:::i;:::-;11637:63;;11592:118;11749:2;11775:53;11820:7;11811:6;11800:9;11796:22;11775:53;:::i;:::-;11765:63;;11720:118;11877:3;11904:53;11949:7;11940:6;11929:9;11925:22;11904:53;:::i;:::-;11894:63;;11848:119;10703:1271;;;;;;;;:::o;11980:474::-;12048:6;12056;12105:2;12093:9;12084:7;12080:23;12076:32;12073:119;;;12111:79;;:::i;:::-;12073:119;12231:1;12256:53;12301:7;12292:6;12281:9;12277:22;12256:53;:::i;:::-;12246:63;;12202:117;12358:2;12384:53;12429:7;12420:6;12409:9;12405:22;12384:53;:::i;:::-;12374:63;;12329:118;11980:474;;;;;:::o;12460:607::-;12531:6;12539;12547;12596:2;12584:9;12575:7;12571:23;12567:32;12564:119;;;12602:79;;:::i;:::-;12564:119;12722:1;12747:53;12792:7;12783:6;12772:9;12768:22;12747:53;:::i;:::-;12737:63;;12693:117;12849:2;12875:50;12917:7;12908:6;12897:9;12893:22;12875:50;:::i;:::-;12865:60;;12820:115;12974:2;13000:50;13042:7;13033:6;13022:9;13018:22;13000:50;:::i;:::-;12990:60;;12945:115;12460:607;;;;;:::o;13073:180::-;13121:77;13118:1;13111:88;13218:4;13215:1;13208:15;13242:4;13239:1;13232:15;13259:320;13303:6;13340:1;13334:4;13330:12;13320:22;;13387:1;13381:4;13377:12;13408:18;13398:81;;13464:4;13456:6;13452:17;13442:27;;13398:81;13526:2;13518:6;13515:14;13495:18;13492:38;13489:84;;13545:18;;:::i;:::-;13489:84;13310:269;13259:320;;;:::o;13585:229::-;13725:34;13721:1;13713:6;13709:14;13702:58;13794:12;13789:2;13781:6;13777:15;13770:37;13585:229;:::o;13820:366::-;13962:3;13983:67;14047:2;14042:3;13983:67;:::i;:::-;13976:74;;14059:93;14148:3;14059:93;:::i;:::-;14177:2;14172:3;14168:12;14161:19;;13820:366;;;:::o;14192:419::-;14358:4;14396:2;14385:9;14381:18;14373:26;;14445:9;14439:4;14435:20;14431:1;14420:9;14416:17;14409:47;14473:131;14599:4;14473:131;:::i;:::-;14465:139;;14192:419;;;:::o;14617:226::-;14757:34;14753:1;14745:6;14741:14;14734:58;14826:9;14821:2;14813:6;14809:15;14802:34;14617:226;:::o;14849:366::-;14991:3;15012:67;15076:2;15071:3;15012:67;:::i;:::-;15005:74;;15088:93;15177:3;15088:93;:::i;:::-;15206:2;15201:3;15197:12;15190:19;;14849:366;;;:::o;15221:419::-;15387:4;15425:2;15414:9;15410:18;15402:26;;15474:9;15468:4;15464:20;15460:1;15449:9;15445:17;15438:47;15502:131;15628:4;15502:131;:::i;:::-;15494:139;;15221:419;;;:::o;15646:227::-;15786:34;15782:1;15774:6;15770:14;15763:58;15855:10;15850:2;15842:6;15838:15;15831:35;15646:227;:::o;15879:366::-;16021:3;16042:67;16106:2;16101:3;16042:67;:::i;:::-;16035:74;;16118:93;16207:3;16118:93;:::i;:::-;16236:2;16231:3;16227:12;16220:19;;15879:366;;;:::o;16251:419::-;16417:4;16455:2;16444:9;16440:18;16432:26;;16504:9;16498:4;16494:20;16490:1;16479:9;16475:17;16468:47;16532:131;16658:4;16532:131;:::i;:::-;16524:139;;16251:419;;;:::o;16676:180::-;16724:77;16721:1;16714:88;16821:4;16818:1;16811:15;16845:4;16842:1;16835:15;16862:177;17002:29;16998:1;16990:6;16986:14;16979:53;16862:177;:::o;17045:366::-;17187:3;17208:67;17272:2;17267:3;17208:67;:::i;:::-;17201:74;;17284:93;17373:3;17284:93;:::i;:::-;17402:2;17397:3;17393:12;17386:19;;17045:366;;;:::o;17417:419::-;17583:4;17621:2;17610:9;17606:18;17598:26;;17670:9;17664:4;17660:20;17656:1;17645:9;17641:17;17634:47;17698:131;17824:4;17698:131;:::i;:::-;17690:139;;17417:419;;;:::o;17842:179::-;17982:31;17978:1;17970:6;17966:14;17959:55;17842:179;:::o;18027:366::-;18169:3;18190:67;18254:2;18249:3;18190:67;:::i;:::-;18183:74;;18266:93;18355:3;18266:93;:::i;:::-;18384:2;18379:3;18375:12;18368:19;;18027:366;;;:::o;18399:419::-;18565:4;18603:2;18592:9;18588:18;18580:26;;18652:9;18646:4;18642:20;18638:1;18627:9;18623:17;18616:47;18680:131;18806:4;18680:131;:::i;:::-;18672:139;;18399:419;;;:::o;18824:180::-;18872:77;18869:1;18862:88;18969:4;18966:1;18959:15;18993:4;18990:1;18983:15;19010:194;19050:4;19070:20;19088:1;19070:20;:::i;:::-;19065:25;;19104:20;19122:1;19104:20;:::i;:::-;19099:25;;19148:1;19145;19141:9;19133:17;;19172:1;19166:4;19163:11;19160:37;;;19177:18;;:::i;:::-;19160:37;19010:194;;;;:::o;19210:225::-;19350:34;19346:1;19338:6;19334:14;19327:58;19419:8;19414:2;19406:6;19402:15;19395:33;19210:225;:::o;19441:366::-;19583:3;19604:67;19668:2;19663:3;19604:67;:::i;:::-;19597:74;;19680:93;19769:3;19680:93;:::i;:::-;19798:2;19793:3;19789:12;19782:19;;19441:366;;;:::o;19813:419::-;19979:4;20017:2;20006:9;20002:18;19994:26;;20066:9;20060:4;20056:20;20052:1;20041:9;20037:17;20030:47;20094:131;20220:4;20094:131;:::i;:::-;20086:139;;19813:419;;;:::o;20238:233::-;20277:3;20300:24;20318:5;20300:24;:::i;:::-;20291:33;;20346:66;20339:5;20336:77;20333:103;;20416:18;;:::i;:::-;20333:103;20463:1;20456:5;20452:13;20445:20;;20238:233;;;:::o;20477:104::-;20542:6;20570:4;20560:14;;20477:104;;;:::o;20587:143::-;20684:11;20721:3;20706:18;;20587:143;;;;:::o;20736:98::-;20801:4;20824:3;20816:11;;20736:98;;;:::o;20840:108::-;20917:24;20935:5;20917:24;:::i;:::-;20912:3;20905:37;20840:108;;:::o;20954:179::-;21023:10;21044:46;21086:3;21078:6;21044:46;:::i;:::-;21122:4;21117:3;21113:14;21099:28;;20954:179;;;;:::o;21139:111::-;21207:4;21239;21234:3;21230:14;21222:22;;21139:111;;;:::o;21288:694::-;21424:52;21470:5;21424:52;:::i;:::-;21492:84;21569:6;21564:3;21492:84;:::i;:::-;21485:91;;21600:54;21648:5;21600:54;:::i;:::-;21677:7;21708:1;21693:282;21718:6;21715:1;21712:13;21693:282;;;21794:6;21788:13;21821:63;21880:3;21865:13;21821:63;:::i;:::-;21814:70;;21907:58;21958:6;21907:58;:::i;:::-;21897:68;;21753:222;21740:1;21737;21733:9;21728:14;;21693:282;;;21697:14;21400:582;;;21288:694;;:::o;21988:518::-;22201:4;22239:3;22228:9;22224:19;22216:27;;22253:117;22367:1;22356:9;22352:17;22343:6;22253:117;:::i;:::-;22380:119;22494:3;22483:9;22479:19;22470:6;22380:119;:::i;:::-;21988:518;;;;;:::o;22512:222::-;22652:34;22648:1;22640:6;22636:14;22629:58;22721:5;22716:2;22708:6;22704:15;22697:30;22512:222;:::o;22740:366::-;22882:3;22903:67;22967:2;22962:3;22903:67;:::i;:::-;22896:74;;22979:93;23068:3;22979:93;:::i;:::-;23097:2;23092:3;23088:12;23081:19;;22740:366;;;:::o;23112:419::-;23278:4;23316:2;23305:9;23301:18;23293:26;;23365:9;23359:4;23355:20;23351:1;23340:9;23336:17;23329:47;23393:131;23519:4;23393:131;:::i;:::-;23385:139;;23112:419;;;:::o;23537:85::-;23582:7;23611:5;23600:16;;23537:85;;;:::o;23628:101::-;23664:7;23704:18;23697:5;23693:30;23682:41;;23628:101;;;:::o;23735:60::-;23763:3;23784:5;23777:12;;23735:60;;;:::o;23801:156::-;23858:9;23891:60;23908:42;23917:32;23943:5;23917:32;:::i;:::-;23908:42;:::i;:::-;23891:60;:::i;:::-;23878:73;;23801:156;;;:::o;23963:145::-;24057:44;24095:5;24057:44;:::i;:::-;24052:3;24045:57;23963:145;;:::o;24114:236::-;24214:4;24252:2;24241:9;24237:18;24229:26;;24265:78;24340:1;24329:9;24325:17;24316:6;24265:78;:::i;:::-;24114:236;;;;:::o;24356:308::-;24465:4;24503:2;24492:9;24488:18;24480:26;;24516:65;24578:1;24567:9;24563:17;24554:6;24516:65;:::i;:::-;24591:66;24653:2;24642:9;24638:18;24629:6;24591:66;:::i;:::-;24356:308;;;;;:::o;24670:166::-;24810:18;24806:1;24798:6;24794:14;24787:42;24670:166;:::o;24842:366::-;24984:3;25005:67;25069:2;25064:3;25005:67;:::i;:::-;24998:74;;25081:93;25170:3;25081:93;:::i;:::-;25199:2;25194:3;25190:12;25183:19;;24842:366;;;:::o;25214:419::-;25380:4;25418:2;25407:9;25403:18;25395:26;;25467:9;25461:4;25457:20;25453:1;25442:9;25438:17;25431:47;25495:131;25621:4;25495:131;:::i;:::-;25487:139;;25214:419;;;:::o;25639:191::-;25679:3;25698:20;25716:1;25698:20;:::i;:::-;25693:25;;25732:20;25750:1;25732:20;:::i;:::-;25727:25;;25775:1;25772;25768:9;25761:16;;25796:3;25793:1;25790:10;25787:36;;;25803:18;;:::i;:::-;25787:36;25639:191;;;;:::o;25836:98::-;25887:6;25921:5;25915:12;25905:22;;25836:98;;;:::o;25940:147::-;26041:11;26078:3;26063:18;;25940:147;;;;:::o;26093:386::-;26197:3;26225:38;26257:5;26225:38;:::i;:::-;26279:88;26360:6;26355:3;26279:88;:::i;:::-;26272:95;;26376:65;26434:6;26429:3;26422:4;26415:5;26411:16;26376:65;:::i;:::-;26466:6;26461:3;26457:16;26450:23;;26201:278;26093:386;;;;:::o;26485:271::-;26615:3;26637:93;26726:3;26717:6;26637:93;:::i;:::-;26630:100;;26747:3;26740:10;;26485:271;;;;:::o;26762:180::-;26902:32;26898:1;26890:6;26886:14;26879:56;26762:180;:::o;26948:366::-;27090:3;27111:67;27175:2;27170:3;27111:67;:::i;:::-;27104:74;;27187:93;27276:3;27187:93;:::i;:::-;27305:2;27300:3;27296:12;27289:19;;26948:366;;;:::o;27320:419::-;27486:4;27524:2;27513:9;27509:18;27501:26;;27573:9;27567:4;27563:20;27559:1;27548:9;27544:17;27537:47;27601:131;27727:4;27601:131;:::i;:::-;27593:139;;27320:419;;;:::o;27745:143::-;27802:5;27833:6;27827:13;27818:22;;27849:33;27876:5;27849:33;:::i;:::-;27745:143;;;;:::o;27894:351::-;27964:6;28013:2;28001:9;27992:7;27988:23;27984:32;27981:119;;;28019:79;;:::i;:::-;27981:119;28139:1;28164:64;28220:7;28211:6;28200:9;28196:22;28164:64;:::i;:::-;28154:74;;28110:128;27894:351;;;;:::o;28251:177::-;28391:29;28387:1;28379:6;28375:14;28368:53;28251:177;:::o;28434:366::-;28576:3;28597:67;28661:2;28656:3;28597:67;:::i;:::-;28590:74;;28673:93;28762:3;28673:93;:::i;:::-;28791:2;28786:3;28782:12;28775:19;;28434:366;;;:::o;28806:419::-;28972:4;29010:2;28999:9;28995:18;28987:26;;29059:9;29053:4;29049:20;29045:1;29034:9;29030:17;29023:47;29087:131;29213:4;29087:131;:::i;:::-;29079:139;;28806:419;;;:::o;29231:170::-;29371:22;29367:1;29359:6;29355:14;29348:46;29231:170;:::o;29407:366::-;29549:3;29570:67;29634:2;29629:3;29570:67;:::i;:::-;29563:74;;29646:93;29735:3;29646:93;:::i;:::-;29764:2;29759:3;29755:12;29748:19;;29407:366;;;:::o;29779:419::-;29945:4;29983:2;29972:9;29968:18;29960:26;;30032:9;30026:4;30022:20;30018:1;30007:9;30003:17;29996:47;30060:131;30186:4;30060:131;:::i;:::-;30052:139;;29779:419;;;:::o;30204:170::-;30344:22;30340:1;30332:6;30328:14;30321:46;30204:170;:::o;30380:366::-;30522:3;30543:67;30607:2;30602:3;30543:67;:::i;:::-;30536:74;;30619:93;30708:3;30619:93;:::i;:::-;30737:2;30732:3;30728:12;30721:19;;30380:366;;;:::o;30752:419::-;30918:4;30956:2;30945:9;30941:18;30933:26;;31005:9;30999:4;30995:20;30991:1;30980:9;30976:17;30969:47;31033:131;31159:4;31033:131;:::i;:::-;31025:139;;30752:419;;;:::o;31177:442::-;31326:4;31364:2;31353:9;31349:18;31341:26;;31377:71;31445:1;31434:9;31430:17;31421:6;31377:71;:::i;:::-;31458:72;31526:2;31515:9;31511:18;31502:6;31458:72;:::i;:::-;31540;31608:2;31597:9;31593:18;31584:6;31540:72;:::i;:::-;31177:442;;;;;;:::o;31625:141::-;31674:4;31697:3;31689:11;;31720:3;31717:1;31710:14;31754:4;31751:1;31741:18;31733:26;;31625:141;;;:::o;31772:93::-;31809:6;31856:2;31851;31844:5;31840:14;31836:23;31826:33;;31772:93;;;:::o;31871:107::-;31915:8;31965:5;31959:4;31955:16;31934:37;;31871:107;;;;:::o;31984:393::-;32053:6;32103:1;32091:10;32087:18;32126:97;32156:66;32145:9;32126:97;:::i;:::-;32244:39;32274:8;32263:9;32244:39;:::i;:::-;32232:51;;32316:4;32312:9;32305:5;32301:21;32292:30;;32365:4;32355:8;32351:19;32344:5;32341:30;32331:40;;32060:317;;31984:393;;;;;:::o;32383:142::-;32433:9;32466:53;32484:34;32493:24;32511:5;32493:24;:::i;:::-;32484:34;:::i;:::-;32466:53;:::i;:::-;32453:66;;32383:142;;;:::o;32531:75::-;32574:3;32595:5;32588:12;;32531:75;;;:::o;32612:269::-;32722:39;32753:7;32722:39;:::i;:::-;32783:91;32832:41;32856:16;32832:41;:::i;:::-;32824:6;32817:4;32811:11;32783:91;:::i;:::-;32777:4;32770:105;32688:193;32612:269;;;:::o;32887:73::-;32932:3;32887:73;:::o;32966:189::-;33043:32;;:::i;:::-;33084:65;33142:6;33134;33128:4;33084:65;:::i;:::-;33019:136;32966:189;;:::o;33161:186::-;33221:120;33238:3;33231:5;33228:14;33221:120;;;33292:39;33329:1;33322:5;33292:39;:::i;:::-;33265:1;33258:5;33254:13;33245:22;;33221:120;;;33161:186;;:::o;33353:543::-;33454:2;33449:3;33446:11;33443:446;;;33488:38;33520:5;33488:38;:::i;:::-;33572:29;33590:10;33572:29;:::i;:::-;33562:8;33558:44;33755:2;33743:10;33740:18;33737:49;;;33776:8;33761:23;;33737:49;33799:80;33855:22;33873:3;33855:22;:::i;:::-;33845:8;33841:37;33828:11;33799:80;:::i;:::-;33458:431;;33443:446;33353:543;;;:::o;33902:117::-;33956:8;34006:5;34000:4;33996:16;33975:37;;33902:117;;;;:::o;34025:169::-;34069:6;34102:51;34150:1;34146:6;34138:5;34135:1;34131:13;34102:51;:::i;:::-;34098:56;34183:4;34177;34173:15;34163:25;;34076:118;34025:169;;;;:::o;34199:295::-;34275:4;34421:29;34446:3;34440:4;34421:29;:::i;:::-;34413:37;;34483:3;34480:1;34476:11;34470:4;34467:21;34459:29;;34199:295;;;;:::o;34499:1395::-;34616:37;34649:3;34616:37;:::i;:::-;34718:18;34710:6;34707:30;34704:56;;;34740:18;;:::i;:::-;34704:56;34784:38;34816:4;34810:11;34784:38;:::i;:::-;34869:67;34929:6;34921;34915:4;34869:67;:::i;:::-;34963:1;34987:4;34974:17;;35019:2;35011:6;35008:14;35036:1;35031:618;;;;35693:1;35710:6;35707:77;;;35759:9;35754:3;35750:19;35744:26;35735:35;;35707:77;35810:67;35870:6;35863:5;35810:67;:::i;:::-;35804:4;35797:81;35666:222;35001:887;;35031:618;35083:4;35079:9;35071:6;35067:22;35117:37;35149:4;35117:37;:::i;:::-;35176:1;35190:208;35204:7;35201:1;35198:14;35190:208;;;35283:9;35278:3;35274:19;35268:26;35260:6;35253:42;35334:1;35326:6;35322:14;35312:24;;35381:2;35370:9;35366:18;35353:31;;35227:4;35224:1;35220:12;35215:17;;35190:208;;;35426:6;35417:7;35414:19;35411:179;;;35484:9;35479:3;35475:19;35469:26;35527:48;35569:4;35561:6;35557:17;35546:9;35527:48;:::i;:::-;35519:6;35512:64;35434:156;35411:179;35636:1;35632;35624:6;35620:14;35616:22;35610:4;35603:36;35038:611;;;35001:887;;34591:1303;;;34499:1395;;:::o;35900:410::-;35940:7;35963:20;35981:1;35963:20;:::i;:::-;35958:25;;35997:20;36015:1;35997:20;:::i;:::-;35992:25;;36052:1;36049;36045:9;36074:30;36092:11;36074:30;:::i;:::-;36063:41;;36253:1;36244:7;36240:15;36237:1;36234:22;36214:1;36207:9;36187:83;36164:139;;36283:18;;:::i;:::-;36164:139;35948:362;35900:410;;;;:::o;36316:180::-;36364:77;36361:1;36354:88;36461:4;36458:1;36451:15;36485:4;36482:1;36475:15;36502:185;36542:1;36559:20;36577:1;36559:20;:::i;:::-;36554:25;;36593:20;36611:1;36593:20;:::i;:::-;36588:25;;36632:1;36622:35;;36637:18;;:::i;:::-;36622:35;36679:1;36676;36672:9;36667:14;;36502:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2968000",
								"executionCost": "3253",
								"totalCost": "2971253"
							},
							"external": {
								"MAX_TAX_PERCENTAGE()": "436",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2970",
								"beneficiary()": "2554",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "472",
								"initialize(string,string,address,address,address)": "infinite",
								"isExcludedFromInboundFees(address)": "2945",
								"isExcludedFromOutboundFees(address)": "2922",
								"isLiquidityPool(address)": "2943",
								"lastReserveCheck()": "2537",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2612",
								"pause()": "infinite",
								"paused()": "2540",
								"renounceAdminControl()": "infinite",
								"renounceOwnership()": "infinite",
								"reserveCheckPeriod()": "2536",
								"reserveConsumer()": "2642",
								"setBeneficiary(address)": "infinite",
								"setFeeExclusion(address,bool,bool)": "infinite",
								"setLiquidityPool(address,bool)": "infinite",
								"setReserveCheckPeriod(uint256)": "infinite",
								"setReserveConsumer(address)": "infinite",
								"setSupplyController(address)": "infinite",
								"setTaxParameters(uint256[5],uint256[5])": "infinite",
								"supplyController()": "2596",
								"symbol()": "infinite",
								"taxPercentages(uint256)": "infinite",
								"taxTiers(uint256)": "infinite",
								"totalSupply()": "2598",
								"transfer(address,uint256)": "infinite",
								"transferAdminControl(address)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_checkReserves()": "infinite",
								"_computeTax(uint256)": "infinite",
								"_transferGIFT(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 384,
									"end": 7731,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 7731,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122028005d00b2c87c680778b0200cc630739d6eba3c97893559553eff21767f5c1364736f6c63430008140033",
									".code": [
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "79CC6790"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "C29C669A"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "E1A8F3F4"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "E7BA1012"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "E85455D7"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "C29C669A"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "C658A5E3"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "CC7134BA"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "D048D988"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "DB0ED6A0"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "A02FBA1E"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "A906C70E"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "79CC6790"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "79E631F4"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "851F39D4"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "8850B9C2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "38AF3EED"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "53E4E3CB"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "53E4E3CB"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "70D27FA0"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "38AF3EED"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "52875BC3"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "1A5E62FD"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "1A5E62FD"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "1C31F710"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "24E8933D"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "110C621D"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 384,
											"end": 7731,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 840,
											"end": 872,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 840,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 840,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 840,
											"end": 872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7430,
											"end": 7631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7430,
											"end": 7631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3372,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3372,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 5406,
											"end": 5874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 5406,
											"end": 5874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5406,
											"end": 5874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 946,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 946,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 550,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 550,
											"end": 576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5129,
											"end": 5196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4456,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4456,
											"end": 4582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4590,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4590,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 3171,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3171,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 2606,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2606,
											"end": 3159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 881,
											"end": 932,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 881,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 881,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 881,
											"end": 932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 932,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 881,
											"end": 932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 881,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 881,
											"end": 932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 881,
											"end": 932,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 4683,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4683,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 4082,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4082,
											"end": 4269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5121,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5058,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 5058,
											"end": 5121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5058,
											"end": 5121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5121,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 5058,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5121,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 687,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 687,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 687,
											"end": 744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 583,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 583,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 4277,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4277,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 5204,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 5204,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5204,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 807,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 807,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 807,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 3892,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3892,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7728,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 7639,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7639,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 7639,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7728,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7639,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7728,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 622,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 622,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 622,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 984,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 984,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 1847,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1847,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3543,
											"end": 3882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3543,
											"end": 3882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 512,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 512,
											"end": 543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 751,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 751,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "tag",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 751,
											"end": 798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3069,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3106,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3106,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 3106,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3142,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3134,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3134,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3011,
											"end": 3155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5578,
											"end": 5582,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5594,
											"end": 5607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5610,
											"end": 5620,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5610,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5594,
											"end": 5622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5594,
											"end": 5622,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5641,
											"end": 5646,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5662,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5632,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5632,
											"end": 5663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 5632,
											"end": 5663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5684,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5673,
											"end": 5684,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5505,
											"end": 5691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 840,
											"end": 872,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH",
											"source": 9,
											"value": "3D"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 840,
											"end": 872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4250,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4284,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4287,
											"end": 4305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 4287,
											"end": 4305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4262,
											"end": 4305,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4262,
											"end": 4305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4322,
											"end": 4336,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7536,
											"end": 7537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7516,
											"end": 7538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7516,
											"end": 7538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7516,
											"end": 7524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7516,
											"end": 7538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7516,
											"end": 7538,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7516,
											"end": 7538,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7508,
											"end": 7585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 7508,
											"end": 7585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7614,
											"end": 7622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 7596,
											"end": 7623,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7596,
											"end": 7623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7430,
											"end": 7631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3480,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3451,
											"end": 3462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3480,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3511,
											"end": 3526,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4D55A8BE181FB8D75B76F2D48AA0B2EE40F47E53D6E61763EEEEC46FEEA8A24"
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3496,
											"end": 3527,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3372,
											"end": 3535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1752,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1752,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1731,
											"end": 1747,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1731,
											"end": 1751,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1727,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1771,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 1788,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1788,
											"end": 1804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 1788,
											"end": 1804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5615,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5594,
											"end": 5600,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5614,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5602,
											"end": 5612,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5602,
											"end": 5614,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5602,
											"end": 5614,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 5602,
											"end": 5614,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5593,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5584,
											"end": 5615,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5615,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5584,
											"end": 5615,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5615,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5557,
											"end": 5615,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5654,
											"end": 5660,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5634,
											"end": 5650,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5634,
											"end": 5660,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5634,
											"end": 5660,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5626,
											"end": 5704,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5626,
											"end": 5704,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5797,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5749,
											"end": 5755,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5757,
											"end": 5767,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5757,
											"end": 5769,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5757,
											"end": 5769,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5790,
											"end": 5796,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5771,
											"end": 5787,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5771,
											"end": 5796,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5748,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5740,
											"end": 5797,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5740,
											"end": 5797,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5740,
											"end": 5797,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5866,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5840,
											"end": 5846,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5848,
											"end": 5857,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5865,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5826,
											"end": 5866,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5866,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5826,
											"end": 5866,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5819,
											"end": 5866,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5819,
											"end": 5866,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5819,
											"end": 5866,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "PUSH",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 946,
											"end": 977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4098,
											"end": 4103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4122,
											"end": 4124,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4049,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 550,
											"end": 576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5129,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5178,
											"end": 5186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5178,
											"end": 5188,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5188,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 5178,
											"end": 5188,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1599,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1569,
											"end": 1599,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1579,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1599,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1569,
											"end": 1599,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1569,
											"end": 1599,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1561,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 1561,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 1752,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1752,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1731,
											"end": 1747,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1731,
											"end": 1751,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1727,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1771,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1788,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1788,
											"end": 1804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 1788,
											"end": 1804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4574,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4561,
											"end": 4564,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4573,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4560,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4555,
											"end": 4574,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4574,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4555,
											"end": 4574,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4456,
											"end": 4582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4641,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4647,
											"end": 4657,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4659,
											"end": 4666,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4641,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 4641,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4641,
											"end": 4667,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 4641,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4590,
											"end": 4675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3279,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 3260,
											"end": 3276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3355,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "915D8B94CDCBF4FA1B4C768B15F63B99AEE21096B9D04FE1938F45833036106D"
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3315,
											"end": 3356,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2728,
											"end": 2734,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2728,
											"end": 2737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2758,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2720,
											"end": 2790,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2720,
											"end": 2790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2822,
											"end": 2823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2818,
											"end": 2819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2818,
											"end": 2823,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 926,
											"end": 932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4E20"
										},
										{
											"begin": 2853,
											"end": 2865,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2866,
											"end": 2867,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2853,
											"end": 2868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2868,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2890,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2890,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 2845,
											"end": 2924,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 2845,
											"end": 2924,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2947,
											"end": 2948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2944,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2943,
											"end": 2948,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3024,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2939,
											"end": 3024,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2976,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2979,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2977,
											"end": 2978,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2977,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2977,
											"end": 2980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2977,
											"end": 2980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 2977,
											"end": 2980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2970,
											"end": 2981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2964,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 2966,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 2958,
											"end": 2967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2967,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2958,
											"end": 2981,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 2950,
											"end": 3024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 2950,
											"end": 3024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 3024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 2939,
											"end": 3024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 2825,
											"end": 2828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2825,
											"end": 2828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 3036,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3063,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3046,
											"end": 3063,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3046,
											"end": 3063,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3103,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3088,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3D"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3074,
											"end": 3103,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3103,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FCA5DD7612680A40F4851BB137ECC39852BD2A1A3CC176EFBB39AFFA8CE97214"
										},
										{
											"begin": 3130,
											"end": 3136,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3138,
											"end": 3150,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 3119,
											"end": 3151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3119,
											"end": 3151,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 3159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 4510,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4510,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 4510,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4485,
											"end": 4528,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4556,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4564,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4545,
											"end": 4565,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4538,
											"end": 4565,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4401,
											"end": 4572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 881,
											"end": 932,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 881,
											"end": 932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 926,
											"end": 932,
											"name": "PUSH",
											"source": 9,
											"value": "4E20"
										},
										{
											"begin": 881,
											"end": 932,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 881,
											"end": 932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4793,
											"end": 4801,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4803,
											"end": 4813,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 4783,
											"end": 4814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4814,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 4783,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4756,
											"end": 4814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4860,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4849,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4860,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4860,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 4825,
											"end": 4900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 4825,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4945,
											"end": 4953,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 4965,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4986,
											"end": 4993,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 4936,
											"end": 4994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4936,
											"end": 4994,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 4936,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5016,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5022,
											"end": 5030,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5032,
											"end": 5039,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5016,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 5016,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5016,
											"end": 5040,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5016,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4745,
											"end": 5048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4683,
											"end": 5048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4206,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 4169,
											"end": 4184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4206,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4241,
											"end": 4260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "25CF73D41A7A2F5BAA3ED34B7A72144453377D3D6C59B74DB14E0FF168FD1FA9"
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4082,
											"end": 4269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5121,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 5058,
											"end": 5121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5105,
											"end": 5113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5105,
											"end": 5111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5105,
											"end": 5113,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5105,
											"end": 5113,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5105,
											"end": 5113,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5058,
											"end": 5121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 687,
											"end": 744,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 687,
											"end": 744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 583,
											"end": 613,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 583,
											"end": 613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3315,
											"end": 3328,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3340,
											"end": 3362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 3365,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "tag",
											"source": 3,
											"value": "318"
										},
										{
											"begin": 3365,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3340,
											"end": 3383,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3400,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3393,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 3393,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "320"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "tag",
											"source": 3,
											"value": "321"
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3393,
											"end": 3409,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3268,
											"end": 3416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4389,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4358,
											"end": 4389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4389,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4358,
											"end": 4389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "F759D32EC37FE15560FBB2AD08F9EA31689D826215D24D6A6E2E740C517C66DB"
										},
										{
											"begin": 4427,
											"end": 4437,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4405,
											"end": 4438,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4405,
											"end": 4438,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5318,
											"end": 5322,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1752,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1752,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1731,
											"end": 1747,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 1731,
											"end": 1751,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1731,
											"end": 1771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1727,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 1712,
											"end": 1771,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1788,
											"end": 1802,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1788,
											"end": 1804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1788,
											"end": 1804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1788,
											"end": 1804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 1708,
											"end": 1816,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5388,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 5356,
											"end": 5368,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 5356,
											"end": 5366,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5356,
											"end": 5368,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5356,
											"end": 5368,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 5356,
											"end": 5368,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5370,
											"end": 5379,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5381,
											"end": 5387,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5355,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5342,
											"end": 5388,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5342,
											"end": 5388,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 5342,
											"end": 5388,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5388,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5335,
											"end": 5388,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "tag",
											"source": 9,
											"value": "337"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 807,
											"end": 833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4008,
											"end": 4015,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 3995,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4004,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3980,
											"end": 4015,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4048,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FA4A2B2457D2065452473BED7D55C8FA2F65FC4A1EFF1EBDAF14A1B7281E7773"
										},
										{
											"begin": 4058,
											"end": 4065,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4031,
											"end": 4066,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4031,
											"end": 4066,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7728,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 7639,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7701,
											"end": 7720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 7701,
											"end": 7718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 7701,
											"end": 7720,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7701,
											"end": 7720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "346"
										},
										{
											"begin": 7701,
											"end": 7720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7639,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 622,
											"end": 680,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 622,
											"end": 680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "PUSH",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 984,
											"end": 1017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 2081,
											"end": 2085,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2093,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 2068,
											"end": 2080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 2068,
											"end": 2094,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2068,
											"end": 2094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "356"
										},
										{
											"begin": 2068,
											"end": 2094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 2120,
											"end": 2130,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 2105,
											"end": 2131,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 2105,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 2142,
											"end": 2157,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 2142,
											"end": 2159,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "360"
										},
										{
											"begin": 2142,
											"end": 2159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2199,
											"end": 2216,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 2180,
											"end": 2196,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2216,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2253,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2227,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2227,
											"end": 2253,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2264,
											"end": 2279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2264,
											"end": 2298,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "10F0CF064DD59200000"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2421,
											"end": 2432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A968163F0A57B400000"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2434,
											"end": 2451,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 2372,
											"end": 2452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2372,
											"end": 2452,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2487,
											"end": 2490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2497,
											"end": 2500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C8"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2477,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3D"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 2463,
											"end": 2506,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2463,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2578,
											"end": 2584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "15180"
										},
										{
											"begin": 2557,
											"end": 2575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 2557,
											"end": 2584,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2584,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2557,
											"end": 2584,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 2592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5083,
											"end": 5090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5102,
											"end": 5124,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 5127,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 5127,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 5127,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5102,
											"end": 5145,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5181,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5182,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5190,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5162,
											"end": 5191,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5155,
											"end": 5191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3702,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3774,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3770,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3792,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3824,
											"end": 3832,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "56EF0FE49F8EE42D7982BB42D42FA7B8D1370EC36D0F8CB83802A7F74215027D"
										},
										{
											"begin": 3834,
											"end": 3853,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3855,
											"end": 3873,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 3808,
											"end": 3874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3808,
											"end": 3874,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 543,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 512,
											"end": 543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 751,
											"end": 798,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 751,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2314,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2379,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2349,
											"end": 2379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2349,
											"end": 2379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2395,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2242,
											"end": 2395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 10357,
											"end": 10362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10364,
											"end": 10371,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10373,
											"end": 10378,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10380,
											"end": 10384,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10348,
											"end": 10356,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 10348,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "tag",
											"source": 3,
											"value": "384"
										},
										{
											"begin": 10348,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10264,
											"end": 10392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10264,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2101,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 2092,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2766,
											"end": 2862,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2766,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2824,
											"end": 2831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 2850,
											"end": 2855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "tag",
											"source": 5,
											"value": "398"
										},
										{
											"begin": 2850,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2843,
											"end": 2855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2862,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2862,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 2862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 7158,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 6688,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6765,
											"end": 6766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6767,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6738,
											"end": 6767,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6738,
											"end": 6753,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6767,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6738,
											"end": 6767,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6738,
											"end": 6767,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6734,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6734,
											"end": 7106,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6785,
											"end": 6797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6799,
											"end": 6816,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "PUSH",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6820,
											"end": 6835,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6846,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6820,
											"end": 6846,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "PUSH",
											"source": 9,
											"value": "902F1AC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6847,
											"end": 6887,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 6820,
											"end": 6888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6888,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6888,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6911,
											"end": 6918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 6903,
											"end": 6953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "tag",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 6903,
											"end": 6953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6968,
											"end": 6984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7002,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 6987,
											"end": 7014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 6987,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6968,
											"end": 7014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6968,
											"end": 7014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7054,
											"end": 7062,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7037,
											"end": 7050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 7037,
											"end": 7048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 7037,
											"end": 7050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7037,
											"end": 7050,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 7037,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7037,
											"end": 7062,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7037,
											"end": 7062,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 7029,
											"end": 7094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "tag",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 7029,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6769,
											"end": 7106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6769,
											"end": 7106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6769,
											"end": 7106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6734,
											"end": 7106,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6734,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7135,
											"end": 7150,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7132,
											"name": "PUSH",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 7116,
											"end": 7150,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7150,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7150,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7116,
											"end": 7150,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6688,
											"end": 7158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 6374,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 5882,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5982,
											"end": 5986,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6029,
											"name": "PUSH",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6077,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6077,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 6003,
											"end": 6077,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6066,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6076,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6041,
											"end": 6077,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6077,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 6003,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6104,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 6003,
											"end": 6104,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6096,
											"name": "PUSH",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6103,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6003,
											"end": 6104,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 6003,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5999,
											"end": 6345,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5999,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 5999,
											"end": 6345,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6121,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 6131,
											"end": 6137,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6148,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6150,
											"end": 6156,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 6121,
											"end": 6157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6121,
											"end": 6157,
											"name": "tag",
											"source": 9,
											"value": "420"
										},
										{
											"begin": 6121,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5999,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 5999,
											"end": 6345,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5999,
											"end": 6345,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 5999,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6190,
											"end": 6201,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 6216,
											"end": 6222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 6204,
											"end": 6223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6204,
											"end": 6223,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 6204,
											"end": 6223,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6190,
											"end": 6223,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6190,
											"end": 6223,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 6248,
											"end": 6254,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6256,
											"end": 6267,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6272,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 6238,
											"end": 6273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6238,
											"end": 6273,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 6238,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6315,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 6328,
											"end": 6331,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6327,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "428"
										},
										{
											"begin": 6317,
											"end": 6327,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6332,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6332,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6317,
											"end": 6332,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6332,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 6317,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 6288,
											"end": 6333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6288,
											"end": 6333,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 6288,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6175,
											"end": 6345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5999,
											"end": 6345,
											"name": "tag",
											"source": 9,
											"value": "422"
										},
										{
											"begin": 5999,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6362,
											"end": 6366,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6355,
											"end": 6366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6355,
											"end": 6366,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 6374,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 6374,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 6374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 6374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 6374,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5882,
											"end": 6374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 2794,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2794,
											"end": 2806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2785,
											"end": 2807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "tag",
											"source": 3,
											"value": "250"
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9085,
											"end": 9086,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9073,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9066,
											"end": 9087,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9139,
											"end": 9140,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 9110,
											"end": 9142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "tag",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9110,
											"end": 9142,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "tag",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 9062,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 9178,
											"end": 9179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9189,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9191,
											"end": 9196,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 9162,
											"end": 9197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "tag",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 9162,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9204,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8996,
											"end": 9204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9522,
											"end": 9728,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 9522,
											"end": 9728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9611,
											"end": 9612,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9599,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9592,
											"end": 9613,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9588,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 9588,
											"end": 9677,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9663,
											"end": 9664,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 9636,
											"end": 9666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9636,
											"end": 9666,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9588,
											"end": 9677,
											"name": "tag",
											"source": 3,
											"value": "441"
										},
										{
											"begin": 9588,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9686,
											"end": 9721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 9694,
											"end": 9701,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9711,
											"end": 9712,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9720,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9686,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 9686,
											"end": 9721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9686,
											"end": 9721,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 9686,
											"end": 9721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9522,
											"end": 9728,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9522,
											"end": 9728,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9522,
											"end": 9728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 2,
											"value": "447"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 2545,
											"end": 2555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2545,
											"end": 2557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2538,
											"end": 2558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 2702,
											"end": 2707,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2716,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 2679,
											"end": 2717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "457"
										},
										{
											"begin": 2679,
											"end": 2717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2577,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "467"
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "tag",
											"source": 3,
											"value": "385"
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11332,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 11357,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 11357,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "tag",
											"source": 3,
											"value": "470"
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11332,
											"end": 11375,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11332,
											"end": 11375,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11406,
											"end": 11407,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11389,
											"end": 11394,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11389,
											"end": 11408,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11460,
											"end": 11461,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 11431,
											"end": 11463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "tag",
											"source": 3,
											"value": "472"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11463,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "tag",
											"source": 3,
											"value": "471"
										},
										{
											"begin": 11385,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11506,
											"end": 11507,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11487,
											"end": 11494,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11487,
											"end": 11508,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11559,
											"end": 11560,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 11531,
											"end": 11562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "tag",
											"source": 3,
											"value": "474"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11531,
											"end": 11562,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "tag",
											"source": 3,
											"value": "473"
										},
										{
											"begin": 11483,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11614,
											"end": 11619,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11595,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11582,
											"end": 11595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11601,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11582,
											"end": 11602,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11603,
											"end": 11610,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11582,
											"end": 11611,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11582,
											"end": 11619,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11633,
											"end": 11642,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11679,
											"end": 11686,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11672,
											"end": 11677,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11688,
											"end": 11693,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 11663,
											"end": 11694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "tag",
											"source": 3,
											"value": "476"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11663,
											"end": 11694,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "tag",
											"source": 3,
											"value": "475"
										},
										{
											"begin": 11629,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11322,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11224,
											"end": 11711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6951,
											"end": 6955,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6951,
											"end": 6969,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7019,
											"end": 7020,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 6992,
											"end": 7022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "tag",
											"source": 3,
											"value": "479"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6992,
											"end": 7022,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "tag",
											"source": 3,
											"value": "478"
										},
										{
											"begin": 6947,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7060,
											"end": 7061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7048,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7046,
											"end": 7062,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7114,
											"end": 7115,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 7085,
											"end": 7117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "tag",
											"source": 3,
											"value": "481"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "tag",
											"source": 3,
											"value": "480"
										},
										{
											"begin": 7042,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "482"
										},
										{
											"begin": 7145,
											"end": 7149,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7151,
											"end": 7153,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7155,
											"end": 7160,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 7137,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7137,
											"end": 7161,
											"name": "tag",
											"source": 3,
											"value": "482"
										},
										{
											"begin": 7137,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6868,
											"end": 7168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6384,
											"end": 6680,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 6384,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6445,
											"end": 6452,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6470,
											"end": 6476,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6470,
											"end": 6480,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6470,
											"end": 6480,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "tag",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6486,
											"end": 6487,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6482,
											"end": 6483,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6482,
											"end": 6487,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6532,
											"name": "PUSH",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6524,
											"end": 6535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "tag",
											"source": 9,
											"value": "487"
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6524,
											"end": 6535,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6520,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6513,
											"end": 6535,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 6509,
											"end": 6621,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 6598,
											"end": 6604,
											"name": "PUSH",
											"source": 9,
											"value": "186A0"
										},
										{
											"begin": 6563,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 6575,
											"end": 6589,
											"name": "PUSH",
											"source": 9,
											"value": "3D"
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 6575,
											"end": 6592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6570,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 6563,
											"end": 6574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6593,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6593,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6593,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6563,
											"end": 6593,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6593,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 6563,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 6563,
											"end": 6597,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6605,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6605,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6563,
											"end": 6605,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6563,
											"end": 6605,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 6563,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6605,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6605,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6556,
											"end": 6605,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 6556,
											"end": 6605,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6509,
											"end": 6621,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 6509,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6489,
											"end": 6492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6489,
											"end": 6492,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "484"
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "tag",
											"source": 9,
											"value": "485"
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6632,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "500"
										},
										{
											"begin": 6642,
											"end": 6672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6672,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6680,
											"name": "tag",
											"source": 9,
											"value": "483"
										},
										{
											"begin": 6384,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6680,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6680,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6680,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6384,
											"end": 6680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "tag",
											"source": 5,
											"value": "428"
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3218,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 3217,
											"end": 3222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "tag",
											"source": 5,
											"value": "502"
										},
										{
											"begin": 3217,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2275,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "tag",
											"source": 2,
											"value": "504"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "505"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 2267,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "506"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "505"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "tag",
											"source": 3,
											"value": "439"
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7568,
											"end": 7590,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 7593,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 3,
											"value": "509"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7568,
											"end": 7611,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7568,
											"end": 7611,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7641,
											"end": 7642,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7625,
											"end": 7629,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "510"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7779,
											"end": 7784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7775,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 7761,
											"end": 7784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "tag",
											"source": 3,
											"value": "511"
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "tag",
											"source": 3,
											"value": "510"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7848,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7849,
											"end": 7853,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7837,
											"end": 7854,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7815,
											"end": 7854,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7872,
											"end": 7891,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7943,
											"end": 7947,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7949,
											"end": 7960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7962,
											"end": 7967,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "515"
										},
										{
											"begin": 7918,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "tag",
											"source": 3,
											"value": "514"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7968,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "tag",
											"source": 3,
											"value": "513"
										},
										{
											"begin": 7868,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8137,
											"end": 8142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8123,
											"end": 8134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8123,
											"end": 8142,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8115,
											"end": 8119,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8103,
											"end": 8120,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8103,
											"end": 8142,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7801,
											"end": 8167,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "tag",
											"source": 3,
											"value": "512"
										},
										{
											"begin": 7621,
											"end": 8167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8195,
											"end": 8196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8181,
											"end": 8183,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8181,
											"end": 8197,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "516"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8362,
											"end": 8367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8345,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8358,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8344,
											"end": 8367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "517"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "tag",
											"source": 3,
											"value": "516"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8576,
											"end": 8581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8568,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8569,
											"end": 8571,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8572,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8557,
											"end": 8581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "tag",
											"source": 3,
											"value": "517"
										},
										{
											"begin": 8177,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8636,
											"end": 8638,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8630,
											"end": 8634,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8640,
											"end": 8645,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8621,
											"end": 8646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "tag",
											"source": 3,
											"value": "518"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8621,
											"end": 8646,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7558,
											"end": 8653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7483,
											"end": 8653,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7483,
											"end": 8653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "tag",
											"source": 3,
											"value": "458"
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "526"
										},
										{
											"begin": 2867,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 2867,
											"end": 2885,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "526"
										},
										{
											"begin": 2867,
											"end": 2885,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2885,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2842,
											"end": 2885,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2905,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2896,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2895,
											"end": 2902,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "527"
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "528"
										},
										{
											"begin": 2895,
											"end": 2910,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "527"
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2895,
											"end": 2910,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2932,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2920,
											"end": 2929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "528"
										},
										{
											"begin": 2920,
											"end": 2939,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "529"
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2920,
											"end": 2939,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2946,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2730,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "463"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "533"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "496"
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3561,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "540"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "541"
										},
										{
											"begin": 3560,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "540"
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "tag",
											"source": 5,
											"value": "497"
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3950,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "543"
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "544"
										},
										{
											"begin": 3945,
											"end": 3950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "tag",
											"source": 5,
											"value": "543"
										},
										{
											"begin": 3945,
											"end": 3950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3861,
											"end": 3957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "287"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "547"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "548"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "549"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "548"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "549"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "547"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "550"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "551"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "550"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "364"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "552"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "553"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "554"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "553"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "554"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "552"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "555"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "551"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "555"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "551"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "556"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "556"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 10,
											"value": "663"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "665"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 10,
											"value": "665"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1382,
											"end": 1388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1399,
											"end": 1418,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1424,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1349,
											"end": 1424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 1553,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1662,
											"end": 1663,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1659,
											"end": 1660,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "679"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 10,
											"value": "679"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 10,
											"value": "685"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3505,
											"end": 3511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3556,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3542,
											"end": 3551,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3533,
											"end": 3540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3552,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 3560,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "tag",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 3560,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "tag",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 3522,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "696"
										},
										{
											"begin": 3750,
											"end": 3757,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3741,
											"end": 3747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3730,
											"end": 3739,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3726,
											"end": 3748,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 3705,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "tag",
											"source": 10,
											"value": "696"
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3695,
											"end": 3758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3651,
											"end": 3768,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 3886,
											"end": 3891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 3868,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "tag",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 3868,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3893,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3899,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3781,
											"end": 3899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4038,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4025,
											"end": 4034,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4021,
											"end": 4039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4013,
											"end": 4039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4093,
											"end": 4099,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 4049,
											"end": 4120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "tag",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 4049,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3905,
											"end": 4127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4462,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 4133,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4192,
											"end": 4198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4241,
											"end": 4243,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4229,
											"end": 4238,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4216,
											"end": 4239,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4212,
											"end": 4244,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4328,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 4209,
											"end": 4328,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "703"
										},
										{
											"begin": 4247,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 4247,
											"end": 4326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4326,
											"name": "tag",
											"source": 10,
											"value": "703"
										},
										{
											"begin": 4247,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4209,
											"end": 4328,
											"name": "tag",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 4209,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 4437,
											"end": 4444,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4428,
											"end": 4434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4426,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4413,
											"end": 4435,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 4392,
											"end": 4445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4392,
											"end": 4445,
											"name": "tag",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 4392,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4445,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4338,
											"end": 4455,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4462,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4462,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4133,
											"end": 4462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 5087,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 4468,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4545,
											"end": 4551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4553,
											"end": 4559,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4567,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4610,
											"end": 4612,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4589,
											"end": 4596,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4585,
											"end": 4608,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4697,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 4578,
											"end": 4697,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4616,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 4616,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 4616,
											"end": 4695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4616,
											"end": 4695,
											"name": "tag",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 4616,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4578,
											"end": 4697,
											"name": "tag",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 4578,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4736,
											"end": 4737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 4806,
											"end": 4813,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4797,
											"end": 4803,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4795,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4782,
											"end": 4804,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4761,
											"end": 4814,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 4761,
											"end": 4814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4761,
											"end": 4814,
											"name": "tag",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 4761,
											"end": 4814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4814,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4751,
											"end": 4814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4707,
											"end": 4824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4865,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4889,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 4934,
											"end": 4941,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4925,
											"end": 4931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4914,
											"end": 4923,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4910,
											"end": 4932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 4889,
											"end": 4942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 4942,
											"name": "tag",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 4889,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4879,
											"end": 4942,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4879,
											"end": 4942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4834,
											"end": 4952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4991,
											"end": 4993,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 5062,
											"end": 5069,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5053,
											"end": 5059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5042,
											"end": 5051,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5038,
											"end": 5060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5017,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 5017,
											"end": 5070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5017,
											"end": 5070,
											"name": "tag",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 5017,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5007,
											"end": 5070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4962,
											"end": 5080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 5087,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 5087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 5087,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 5087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 5087,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4468,
											"end": 5087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5128,
											"end": 5135,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5168,
											"end": 5172,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5161,
											"end": 5166,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5157,
											"end": 5173,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5146,
											"end": 5173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5179,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5093,
											"end": 5179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5297,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 5185,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 5284,
											"end": 5289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 5268,
											"end": 5290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5290,
											"name": "tag",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 5268,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5297,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5185,
											"end": 5297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5392,
											"end": 5396,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5432,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5419,
											"end": 5428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5415,
											"end": 5433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5433,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "715"
										},
										{
											"begin": 5507,
											"end": 5508,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5505,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5509,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 5443,
											"end": 5510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5443,
											"end": 5510,
											"name": "tag",
											"source": 10,
											"value": "715"
										},
										{
											"begin": 5443,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "717"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "567"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 10,
											"value": "717"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5992,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 5875,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5984,
											"end": 5985,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5982,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6178,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 5998,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6046,
											"end": 6123,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6043,
											"end": 6044,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6143,
											"end": 6147,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 6140,
											"end": 6141,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6133,
											"end": 6148,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6167,
											"end": 6171,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6164,
											"end": 6165,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6157,
											"end": 6172,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6465,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 6184,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "723"
										},
										{
											"begin": 6289,
											"end": 6293,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 6267,
											"end": 6294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6267,
											"end": 6294,
											"name": "tag",
											"source": 10,
											"value": "723"
										},
										{
											"begin": 6267,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6259,
											"end": 6265,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6295,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6397,
											"end": 6403,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6385,
											"end": 6395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6404,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6349,
											"end": 6359,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6380,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6343,
											"end": 6405,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6340,
											"end": 6428,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6340,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 6340,
											"end": 6428,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "725"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 6408,
											"end": 6426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "tag",
											"source": 10,
											"value": "725"
										},
										{
											"begin": 6408,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6340,
											"end": 6428,
											"name": "tag",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 6340,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6448,
											"end": 6458,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6444,
											"end": 6446,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6437,
											"end": 6459,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6227,
											"end": 6465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6184,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6600,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 6471,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6505,
											"end": 6511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6532,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "727"
										},
										{
											"begin": 6532,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 6532,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6532,
											"end": 6552,
											"name": "tag",
											"source": 10,
											"value": "727"
										},
										{
											"begin": 6532,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "728"
										},
										{
											"begin": 6589,
											"end": 6593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6581,
											"end": 6587,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 6561,
											"end": 6594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6561,
											"end": 6594,
											"name": "tag",
											"source": 10,
											"value": "728"
										},
										{
											"begin": 6561,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6600,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6471,
											"end": 6600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6855,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 6606,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6685,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6789,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6760,
											"end": 6790,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6813,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "730"
										},
										{
											"begin": 6757,
											"end": 6813,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "731"
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 6793,
											"end": 6811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "tag",
											"source": 10,
											"value": "731"
										},
										{
											"begin": 6793,
											"end": 6811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6757,
											"end": 6813,
											"name": "tag",
											"source": 10,
											"value": "730"
										},
										{
											"begin": 6757,
											"end": 6813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6843,
											"end": 6847,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6835,
											"end": 6841,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6831,
											"end": 6848,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6848,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6823,
											"end": 6848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6855,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6855,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6968,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6960,
											"end": 6972,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7645,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 7002,
											"end": 7645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7096,
											"end": 7101,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7121,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "734"
										},
										{
											"begin": 7137,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "735"
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7137,
											"end": 7199,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 7137,
											"end": 7199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7137,
											"end": 7199,
											"name": "tag",
											"source": 10,
											"value": "735"
										},
										{
											"begin": 7137,
											"end": 7199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 7121,
											"end": 7200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7121,
											"end": 7200,
											"name": "tag",
											"source": 10,
											"value": "734"
										},
										{
											"begin": 7121,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7200,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7112,
											"end": 7200,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7220,
											"end": 7225,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7265,
											"end": 7271,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 7253,
											"end": 7259,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7249,
											"end": 7279,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7302,
											"end": 7305,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7294,
											"end": 7300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7291,
											"end": 7306,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7410,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "736"
										},
										{
											"begin": 7288,
											"end": 7410,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "737"
										},
										{
											"begin": 7321,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 7321,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7321,
											"end": 7400,
											"name": "tag",
											"source": 10,
											"value": "737"
										},
										{
											"begin": 7321,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7410,
											"name": "tag",
											"source": 10,
											"value": "736"
										},
										{
											"begin": 7288,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 7639,
											"name": "tag",
											"source": 10,
											"value": "738"
										},
										{
											"begin": 7419,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7453,
											"end": 7459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7448,
											"end": 7451,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7445,
											"end": 7460,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 7639,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "740"
										},
										{
											"begin": 7419,
											"end": 7639,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7528,
											"end": 7531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7557,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "741"
										},
										{
											"begin": 7590,
											"end": 7593,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7578,
											"end": 7588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7557,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 7557,
											"end": 7594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7557,
											"end": 7594,
											"name": "tag",
											"source": 10,
											"value": "741"
										},
										{
											"begin": 7557,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7552,
											"end": 7555,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7545,
											"end": 7595,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7624,
											"end": 7628,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7619,
											"end": 7622,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7615,
											"end": 7629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7629,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7495,
											"end": 7639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7479,
											"end": 7483,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7474,
											"end": 7477,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7470,
											"end": 7484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7463,
											"end": 7484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7463,
											"end": 7484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 7639,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "738"
										},
										{
											"begin": 7419,
											"end": 7639,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7419,
											"end": 7639,
											"name": "tag",
											"source": 10,
											"value": "740"
										},
										{
											"begin": 7419,
											"end": 7639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7102,
											"end": 7645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7102,
											"end": 7645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7645,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7645,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7002,
											"end": 7645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 8008,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 7669,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 7743,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7780,
											"end": 7784,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 7772,
											"end": 7778,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7768,
											"end": 7785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7764,
											"end": 7791,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "743"
										},
										{
											"begin": 7754,
											"end": 7876,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "744"
										},
										{
											"begin": 7795,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 7795,
											"end": 7874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7874,
											"name": "tag",
											"source": 10,
											"value": "744"
										},
										{
											"begin": 7795,
											"end": 7874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7754,
											"end": 7876,
											"name": "tag",
											"source": 10,
											"value": "743"
										},
										{
											"begin": 7754,
											"end": 7876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7899,
											"end": 7903,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 7921,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "745"
										},
										{
											"begin": 7998,
											"end": 8001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7990,
											"end": 7996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 7921,
											"end": 8002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7921,
											"end": 8002,
											"name": "tag",
											"source": 10,
											"value": "745"
										},
										{
											"begin": 7921,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 8002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7912,
											"end": 8002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7744,
											"end": 8008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 8008,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 8008,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 8008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 8008,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7669,
											"end": 8008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8582,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 8014,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8128,
											"end": 8134,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8185,
											"end": 8188,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8164,
											"end": 8171,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8183,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8156,
											"end": 8189,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8153,
											"end": 8273,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8153,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "747"
										},
										{
											"begin": 8153,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 8192,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 8192,
											"end": 8271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8271,
											"name": "tag",
											"source": 10,
											"value": "748"
										},
										{
											"begin": 8192,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8153,
											"end": 8273,
											"name": "tag",
											"source": 10,
											"value": "747"
										},
										{
											"begin": 8153,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8312,
											"end": 8313,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "749"
										},
										{
											"begin": 8405,
											"end": 8412,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8396,
											"end": 8402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8385,
											"end": 8394,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8381,
											"end": 8403,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 8337,
											"end": 8413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8337,
											"end": 8413,
											"name": "tag",
											"source": 10,
											"value": "749"
										},
										{
											"begin": 8337,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8327,
											"end": 8413,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8327,
											"end": 8413,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8283,
											"end": 8423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8462,
											"end": 8465,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8489,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "750"
										},
										{
											"begin": 8557,
											"end": 8564,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8548,
											"end": 8554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8537,
											"end": 8546,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8533,
											"end": 8555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8489,
											"end": 8565,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 8489,
											"end": 8565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8489,
											"end": 8565,
											"name": "tag",
											"source": 10,
											"value": "750"
										},
										{
											"begin": 8489,
											"end": 8565,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8479,
											"end": 8565,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8479,
											"end": 8565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8575,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8582,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8582,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8588,
											"end": 8704,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 8588,
											"end": 8704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "752"
										},
										{
											"begin": 8673,
											"end": 8678,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 8658,
											"end": 8679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "tag",
											"source": 10,
											"value": "752"
										},
										{
											"begin": 8658,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8651,
											"end": 8656,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8648,
											"end": 8680,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "753"
										},
										{
											"begin": 8638,
											"end": 8698,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8694,
											"end": 8695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8691,
											"end": 8692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8684,
											"end": 8696,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8698,
											"name": "tag",
											"source": 10,
											"value": "753"
										},
										{
											"begin": 8638,
											"end": 8698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8588,
											"end": 8704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8588,
											"end": 8704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8843,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 8710,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8791,
											"end": 8797,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8778,
											"end": 8798,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8769,
											"end": 8798,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8807,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "755"
										},
										{
											"begin": 8831,
											"end": 8836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8807,
											"end": 8837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 8807,
											"end": 8837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8807,
											"end": 8837,
											"name": "tag",
											"source": 10,
											"value": "755"
										},
										{
											"begin": 8807,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8843,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8843,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8710,
											"end": 8843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8849,
											"end": 9317,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 8849,
											"end": 9317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8914,
											"end": 8920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8928,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8971,
											"end": 8973,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8959,
											"end": 8968,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8950,
											"end": 8957,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 8969,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8942,
											"end": 8974,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8939,
											"end": 9058,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8939,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 8939,
											"end": 9058,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8977,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "758"
										},
										{
											"begin": 8977,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 8977,
											"end": 9056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8977,
											"end": 9056,
											"name": "tag",
											"source": 10,
											"value": "758"
										},
										{
											"begin": 8977,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8939,
											"end": 9058,
											"name": "tag",
											"source": 10,
											"value": "757"
										},
										{
											"begin": 8939,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9097,
											"end": 9098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9122,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "759"
										},
										{
											"begin": 9167,
											"end": 9174,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9158,
											"end": 9164,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9147,
											"end": 9156,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9143,
											"end": 9165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9122,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 9122,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9122,
											"end": 9175,
											"name": "tag",
											"source": 10,
											"value": "759"
										},
										{
											"begin": 9122,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9068,
											"end": 9185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9224,
											"end": 9226,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9250,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "760"
										},
										{
											"begin": 9292,
											"end": 9299,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9283,
											"end": 9289,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9268,
											"end": 9290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9250,
											"end": 9300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 9250,
											"end": 9300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9250,
											"end": 9300,
											"name": "tag",
											"source": 10,
											"value": "760"
										},
										{
											"begin": 9250,
											"end": 9300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9240,
											"end": 9300,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9240,
											"end": 9300,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9195,
											"end": 9310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8849,
											"end": 9317,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8849,
											"end": 9317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8849,
											"end": 9317,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8849,
											"end": 9317,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8849,
											"end": 9317,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8849,
											"end": 9317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9323,
											"end": 9440,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 9323,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9434,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9446,
											"end": 9754,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 9446,
											"end": 9754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9508,
											"end": 9512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9598,
											"end": 9616,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9590,
											"end": 9596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9587,
											"end": 9617,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9640,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "763"
										},
										{
											"begin": 9584,
											"end": 9640,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "764"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 9620,
											"end": 9638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "tag",
											"source": 10,
											"value": "764"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9584,
											"end": 9640,
											"name": "tag",
											"source": 10,
											"value": "763"
										},
										{
											"begin": 9584,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "765"
										},
										{
											"begin": 9680,
											"end": 9686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 9658,
											"end": 9687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9687,
											"name": "tag",
											"source": 10,
											"value": "765"
										},
										{
											"begin": 9658,
											"end": 9687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9650,
											"end": 9687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9650,
											"end": 9687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9742,
											"end": 9746,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9736,
											"end": 9740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9732,
											"end": 9747,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9724,
											"end": 9747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9724,
											"end": 9747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9446,
											"end": 9754,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9446,
											"end": 9754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9446,
											"end": 9754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9446,
											"end": 9754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9760,
											"end": 9906,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 9760,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9857,
											"end": 9863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9852,
											"end": 9855,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9847,
											"end": 9850,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9834,
											"end": 9864,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 9898,
											"end": 9899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9889,
											"end": 9895,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9884,
											"end": 9887,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9880,
											"end": 9896,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9873,
											"end": 9900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9760,
											"end": 9906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9760,
											"end": 9906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9760,
											"end": 9906,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9760,
											"end": 9906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10337,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 9912,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9990,
											"end": 9995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10015,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "768"
										},
										{
											"begin": 10031,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 10073,
											"end": 10079,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10031,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 10031,
											"end": 10080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10031,
											"end": 10080,
											"name": "tag",
											"source": 10,
											"value": "769"
										},
										{
											"begin": 10031,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10015,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 10015,
											"end": 10081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10015,
											"end": 10081,
											"name": "tag",
											"source": 10,
											"value": "768"
										},
										{
											"begin": 10015,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10104,
											"end": 10110,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10097,
											"end": 10102,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10090,
											"end": 10111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10142,
											"end": 10146,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10135,
											"end": 10140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10131,
											"end": 10147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10180,
											"end": 10183,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10171,
											"end": 10177,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10169,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10162,
											"end": 10178,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10159,
											"end": 10184,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 10156,
											"end": 10268,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10156,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "770"
										},
										{
											"begin": 10156,
											"end": 10268,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10187,
											"end": 10266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "771"
										},
										{
											"begin": 10187,
											"end": 10266,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 10187,
											"end": 10266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10187,
											"end": 10266,
											"name": "tag",
											"source": 10,
											"value": "771"
										},
										{
											"begin": 10187,
											"end": 10266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10156,
											"end": 10268,
											"name": "tag",
											"source": 10,
											"value": "770"
										},
										{
											"begin": 10156,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10277,
											"end": 10331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 10324,
											"end": 10330,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10319,
											"end": 10322,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10314,
											"end": 10317,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10277,
											"end": 10331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 10277,
											"end": 10331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10277,
											"end": 10331,
											"name": "tag",
											"source": 10,
											"value": "772"
										},
										{
											"begin": 10277,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9996,
											"end": 10337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10337,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10337,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9912,
											"end": 10337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10697,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 10357,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10413,
											"end": 10418,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10462,
											"end": 10465,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10455,
											"end": 10459,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10447,
											"end": 10453,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10443,
											"end": 10460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10439,
											"end": 10466,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "774"
										},
										{
											"begin": 10429,
											"end": 10551,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "775"
										},
										{
											"begin": 10470,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 10470,
											"end": 10549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10549,
											"name": "tag",
											"source": 10,
											"value": "775"
										},
										{
											"begin": 10470,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10429,
											"end": 10551,
											"name": "tag",
											"source": 10,
											"value": "774"
										},
										{
											"begin": 10429,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10587,
											"end": 10593,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10574,
											"end": 10594,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "776"
										},
										{
											"begin": 10687,
											"end": 10690,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10679,
											"end": 10685,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10672,
											"end": 10676,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10664,
											"end": 10670,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10660,
											"end": 10677,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 10612,
											"end": 10691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10612,
											"end": 10691,
											"name": "tag",
											"source": 10,
											"value": "776"
										},
										{
											"begin": 10612,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10603,
											"end": 10691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10603,
											"end": 10691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10419,
											"end": 10697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10697,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10697,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10357,
											"end": 10697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10818,
											"end": 10824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10826,
											"end": 10832,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10834,
											"end": 10840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10848,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10850,
											"end": 10856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10899,
											"end": 10902,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10887,
											"end": 10896,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10885,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 10874,
											"end": 10897,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10870,
											"end": 10903,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10867,
											"end": 10987,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10867,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "778"
										},
										{
											"begin": 10867,
											"end": 10987,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10906,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "779"
										},
										{
											"begin": 10906,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 10906,
											"end": 10985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10906,
											"end": 10985,
											"name": "tag",
											"source": 10,
											"value": "779"
										},
										{
											"begin": 10906,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10867,
											"end": 10987,
											"name": "tag",
											"source": 10,
											"value": "778"
										},
										{
											"begin": 10867,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11054,
											"end": 11055,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11043,
											"end": 11052,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11039,
											"end": 11056,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11026,
											"end": 11057,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11084,
											"end": 11102,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11076,
											"end": 11082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11103,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11070,
											"end": 11187,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11070,
											"end": 11187,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "780"
										},
										{
											"begin": 11070,
											"end": 11187,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11106,
											"end": 11185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "781"
										},
										{
											"begin": 11106,
											"end": 11185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 11106,
											"end": 11185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11106,
											"end": 11185,
											"name": "tag",
											"source": 10,
											"value": "781"
										},
										{
											"begin": 11106,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11070,
											"end": 11187,
											"name": "tag",
											"source": 10,
											"value": "780"
										},
										{
											"begin": 11070,
											"end": 11187,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "782"
										},
										{
											"begin": 11266,
											"end": 11273,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11257,
											"end": 11263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11246,
											"end": 11255,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11242,
											"end": 11264,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 11211,
											"end": 11274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11274,
											"name": "tag",
											"source": 10,
											"value": "782"
										},
										{
											"begin": 11211,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11201,
											"end": 11274,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 11201,
											"end": 11274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10997,
											"end": 11284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11351,
											"end": 11353,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11340,
											"end": 11349,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11323,
											"end": 11355,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 11382,
											"end": 11400,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11374,
											"end": 11380,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11371,
											"end": 11401,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11485,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "783"
										},
										{
											"begin": 11368,
											"end": 11485,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "784"
										},
										{
											"begin": 11404,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 11404,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11404,
											"end": 11483,
											"name": "tag",
											"source": 10,
											"value": "784"
										},
										{
											"begin": 11404,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11368,
											"end": 11485,
											"name": "tag",
											"source": 10,
											"value": "783"
										},
										{
											"begin": 11368,
											"end": 11485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "785"
										},
										{
											"begin": 11564,
											"end": 11571,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11555,
											"end": 11561,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11544,
											"end": 11553,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11540,
											"end": 11562,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 11509,
											"end": 11572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11572,
											"name": "tag",
											"source": 10,
											"value": "785"
										},
										{
											"begin": 11509,
											"end": 11572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11499,
											"end": 11572,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 11499,
											"end": 11572,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11294,
											"end": 11582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11621,
											"end": 11623,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "786"
										},
										{
											"begin": 11692,
											"end": 11699,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11683,
											"end": 11689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11672,
											"end": 11681,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11668,
											"end": 11690,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 11647,
											"end": 11700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11700,
											"name": "tag",
											"source": 10,
											"value": "786"
										},
										{
											"begin": 11647,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11637,
											"end": 11700,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11637,
											"end": 11700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11592,
											"end": 11710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11749,
											"end": 11751,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11775,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "787"
										},
										{
											"begin": 11820,
											"end": 11827,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11811,
											"end": 11817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11800,
											"end": 11809,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11796,
											"end": 11818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11775,
											"end": 11828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 11775,
											"end": 11828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11775,
											"end": 11828,
											"name": "tag",
											"source": 10,
											"value": "787"
										},
										{
											"begin": 11775,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11765,
											"end": 11828,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11765,
											"end": 11828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11720,
											"end": 11838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11877,
											"end": 11880,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 11904,
											"end": 11957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "788"
										},
										{
											"begin": 11949,
											"end": 11956,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11929,
											"end": 11938,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 11925,
											"end": 11947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 11957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 11904,
											"end": 11957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 11957,
											"name": "tag",
											"source": 10,
											"value": "788"
										},
										{
											"begin": 11904,
											"end": 11957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11894,
											"end": 11957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11894,
											"end": 11957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11848,
											"end": 11967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10703,
											"end": 11974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11980,
											"end": 12454,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 11980,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12048,
											"end": 12054,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12056,
											"end": 12062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12105,
											"end": 12107,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12093,
											"end": 12102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12084,
											"end": 12091,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12080,
											"end": 12103,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12076,
											"end": 12108,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 12192,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "790"
										},
										{
											"begin": 12073,
											"end": 12192,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12111,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "791"
										},
										{
											"begin": 12111,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 12111,
											"end": 12190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12111,
											"end": 12190,
											"name": "tag",
											"source": 10,
											"value": "791"
										},
										{
											"begin": 12111,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12073,
											"end": 12192,
											"name": "tag",
											"source": 10,
											"value": "790"
										},
										{
											"begin": 12073,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12231,
											"end": 12232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12256,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "792"
										},
										{
											"begin": 12301,
											"end": 12308,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12292,
											"end": 12298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12281,
											"end": 12290,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12277,
											"end": 12299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12256,
											"end": 12309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 12256,
											"end": 12309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12256,
											"end": 12309,
											"name": "tag",
											"source": 10,
											"value": "792"
										},
										{
											"begin": 12256,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12246,
											"end": 12309,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12246,
											"end": 12309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12202,
											"end": 12319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12358,
											"end": 12360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12384,
											"end": 12437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "793"
										},
										{
											"begin": 12429,
											"end": 12436,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12420,
											"end": 12426,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12409,
											"end": 12418,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12384,
											"end": 12437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 12384,
											"end": 12437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12384,
											"end": 12437,
											"name": "tag",
											"source": 10,
											"value": "793"
										},
										{
											"begin": 12384,
											"end": 12437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12374,
											"end": 12437,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12374,
											"end": 12437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12329,
											"end": 12447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11980,
											"end": 12454,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11980,
											"end": 12454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11980,
											"end": 12454,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11980,
											"end": 12454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11980,
											"end": 12454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11980,
											"end": 12454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 13067,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 12460,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12531,
											"end": 12537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12539,
											"end": 12545,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12547,
											"end": 12553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12596,
											"end": 12598,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12584,
											"end": 12593,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12582,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12571,
											"end": 12594,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12567,
											"end": 12599,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 12564,
											"end": 12683,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12564,
											"end": 12683,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "795"
										},
										{
											"begin": 12564,
											"end": 12683,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "796"
										},
										{
											"begin": 12602,
											"end": 12681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 12602,
											"end": 12681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12602,
											"end": 12681,
											"name": "tag",
											"source": 10,
											"value": "796"
										},
										{
											"begin": 12602,
											"end": 12681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12564,
											"end": 12683,
											"name": "tag",
											"source": 10,
											"value": "795"
										},
										{
											"begin": 12564,
											"end": 12683,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12722,
											"end": 12723,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12747,
											"end": 12800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "797"
										},
										{
											"begin": 12792,
											"end": 12799,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12783,
											"end": 12789,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12772,
											"end": 12781,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12768,
											"end": 12790,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12800,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 12747,
											"end": 12800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12747,
											"end": 12800,
											"name": "tag",
											"source": 10,
											"value": "797"
										},
										{
											"begin": 12747,
											"end": 12800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12737,
											"end": 12800,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 12737,
											"end": 12800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12693,
											"end": 12810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12849,
											"end": 12851,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12875,
											"end": 12925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "798"
										},
										{
											"begin": 12917,
											"end": 12924,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12908,
											"end": 12914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12906,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12893,
											"end": 12915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12925,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 12875,
											"end": 12925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12875,
											"end": 12925,
											"name": "tag",
											"source": 10,
											"value": "798"
										},
										{
											"begin": 12875,
											"end": 12925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12865,
											"end": 12925,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12865,
											"end": 12925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12820,
											"end": 12935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13000,
											"end": 13050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "799"
										},
										{
											"begin": 13042,
											"end": 13049,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 13033,
											"end": 13039,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13022,
											"end": 13031,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 13018,
											"end": 13040,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13000,
											"end": 13050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 13000,
											"end": 13050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13000,
											"end": 13050,
											"name": "tag",
											"source": 10,
											"value": "799"
										},
										{
											"begin": 13000,
											"end": 13050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12990,
											"end": 13050,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12990,
											"end": 13050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12945,
											"end": 13060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 13067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 13067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 13067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 13067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 13067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 12460,
											"end": 13067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13073,
											"end": 13253,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 13073,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13121,
											"end": 13198,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13118,
											"end": 13119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13111,
											"end": 13199,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13218,
											"end": 13222,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 13215,
											"end": 13216,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13208,
											"end": 13223,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13242,
											"end": 13246,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13239,
											"end": 13240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13232,
											"end": 13247,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13259,
											"end": 13579,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 13259,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13303,
											"end": 13309,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13340,
											"end": 13341,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 13334,
											"end": 13338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13330,
											"end": 13342,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 13320,
											"end": 13342,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13320,
											"end": 13342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13387,
											"end": 13388,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 13381,
											"end": 13385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13377,
											"end": 13389,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13408,
											"end": 13426,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13398,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "802"
										},
										{
											"begin": 13398,
											"end": 13479,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13464,
											"end": 13468,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 13456,
											"end": 13462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13452,
											"end": 13469,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 13442,
											"end": 13469,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13442,
											"end": 13469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13398,
											"end": 13479,
											"name": "tag",
											"source": 10,
											"value": "802"
										},
										{
											"begin": 13398,
											"end": 13479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13526,
											"end": 13528,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13518,
											"end": 13524,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13515,
											"end": 13529,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13530,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13489,
											"end": 13573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "803"
										},
										{
											"begin": 13489,
											"end": 13573,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "804"
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 13545,
											"end": 13563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "tag",
											"source": 10,
											"value": "804"
										},
										{
											"begin": 13545,
											"end": 13563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13489,
											"end": 13573,
											"name": "tag",
											"source": 10,
											"value": "803"
										},
										{
											"begin": 13489,
											"end": 13573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13310,
											"end": 13579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13259,
											"end": 13579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13259,
											"end": 13579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13259,
											"end": 13579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13259,
											"end": 13579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13814,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 13585,
											"end": 13814,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13725,
											"end": 13759,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A204E65772061646D696E2063616E6E6F7420626520746865207A65"
										},
										{
											"begin": 13721,
											"end": 13722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13713,
											"end": 13719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13709,
											"end": 13723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13702,
											"end": 13760,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13806,
											"name": "PUSH",
											"source": 10,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 13789,
											"end": 13791,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13781,
											"end": 13787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13777,
											"end": 13792,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13770,
											"end": 13807,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13814,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13585,
											"end": 13814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13820,
											"end": 14186,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 13820,
											"end": 14186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13962,
											"end": 13965,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13983,
											"end": 14050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "807"
										},
										{
											"begin": 14047,
											"end": 14049,
											"name": "PUSH",
											"source": 10,
											"value": "2A"
										},
										{
											"begin": 14042,
											"end": 14045,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13983,
											"end": 14050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 13983,
											"end": 14050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13983,
											"end": 14050,
											"name": "tag",
											"source": 10,
											"value": "807"
										},
										{
											"begin": 13983,
											"end": 14050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13976,
											"end": 14050,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13976,
											"end": 14050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14059,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "808"
										},
										{
											"begin": 14148,
											"end": 14151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14059,
											"end": 14152,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 14059,
											"end": 14152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14059,
											"end": 14152,
											"name": "tag",
											"source": 10,
											"value": "808"
										},
										{
											"begin": 14059,
											"end": 14152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14177,
											"end": 14179,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 14172,
											"end": 14175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14168,
											"end": 14180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14161,
											"end": 14180,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14161,
											"end": 14180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13820,
											"end": 14186,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13820,
											"end": 14186,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13820,
											"end": 14186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13820,
											"end": 14186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14611,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 14192,
											"end": 14611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14358,
											"end": 14362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14396,
											"end": 14398,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14385,
											"end": 14394,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14381,
											"end": 14399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14373,
											"end": 14399,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14373,
											"end": 14399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14445,
											"end": 14454,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14439,
											"end": 14443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14435,
											"end": 14455,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14431,
											"end": 14432,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14420,
											"end": 14429,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14416,
											"end": 14433,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14409,
											"end": 14456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14473,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "810"
										},
										{
											"begin": 14599,
											"end": 14603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14473,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 14473,
											"end": 14604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14473,
											"end": 14604,
											"name": "tag",
											"source": 10,
											"value": "810"
										},
										{
											"begin": 14473,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14465,
											"end": 14604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14465,
											"end": 14604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14611,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14192,
											"end": 14611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14617,
											"end": 14843,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 14617,
											"end": 14843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14757,
											"end": 14791,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A207472616E7366657220616D6F756E74206578636565647320616C"
										},
										{
											"begin": 14753,
											"end": 14754,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14745,
											"end": 14751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 14755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14734,
											"end": 14792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14826,
											"end": 14835,
											"name": "PUSH",
											"source": 10,
											"value": "6C6F77616E636500000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14821,
											"end": 14823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14813,
											"end": 14819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14809,
											"end": 14824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14802,
											"end": 14836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14617,
											"end": 14843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14617,
											"end": 14843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14849,
											"end": 15215,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 14849,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14991,
											"end": 14994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15012,
											"end": 15079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "813"
										},
										{
											"begin": 15076,
											"end": 15078,
											"name": "PUSH",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 15071,
											"end": 15074,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15012,
											"end": 15079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 15012,
											"end": 15079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15012,
											"end": 15079,
											"name": "tag",
											"source": 10,
											"value": "813"
										},
										{
											"begin": 15012,
											"end": 15079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15005,
											"end": 15079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15005,
											"end": 15079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15088,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "814"
										},
										{
											"begin": 15177,
											"end": 15180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15088,
											"end": 15181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 15088,
											"end": 15181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15088,
											"end": 15181,
											"name": "tag",
											"source": 10,
											"value": "814"
										},
										{
											"begin": 15088,
											"end": 15181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15206,
											"end": 15208,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15201,
											"end": 15204,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15197,
											"end": 15209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15190,
											"end": 15209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15190,
											"end": 15209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14849,
											"end": 15215,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14849,
											"end": 15215,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14849,
											"end": 15215,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14849,
											"end": 15215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15221,
											"end": 15640,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 15221,
											"end": 15640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15387,
											"end": 15391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15425,
											"end": 15427,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15414,
											"end": 15423,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15410,
											"end": 15428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15402,
											"end": 15428,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15402,
											"end": 15428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15474,
											"end": 15483,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15468,
											"end": 15472,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15464,
											"end": 15484,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15461,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15449,
											"end": 15458,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15445,
											"end": 15462,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15438,
											"end": 15485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15502,
											"end": 15633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "816"
										},
										{
											"begin": 15628,
											"end": 15632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15502,
											"end": 15633,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 15502,
											"end": 15633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15502,
											"end": 15633,
											"name": "tag",
											"source": 10,
											"value": "816"
										},
										{
											"begin": 15502,
											"end": 15633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15494,
											"end": 15633,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15494,
											"end": 15633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15221,
											"end": 15640,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15221,
											"end": 15640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15221,
											"end": 15640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15221,
											"end": 15640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15873,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 15646,
											"end": 15873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15786,
											"end": 15820,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A2063616C6C6572206973206E6F742074686520737570706C79436F"
										},
										{
											"begin": 15782,
											"end": 15783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15774,
											"end": 15780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15770,
											"end": 15784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15763,
											"end": 15821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15855,
											"end": 15865,
											"name": "PUSH",
											"source": 10,
											"value": "6E74726F6C6C6572000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15850,
											"end": 15852,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15842,
											"end": 15848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 15853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15831,
											"end": 15866,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15879,
											"end": 16245,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 15879,
											"end": 16245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16042,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "819"
										},
										{
											"begin": 16106,
											"end": 16108,
											"name": "PUSH",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 16101,
											"end": 16104,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16042,
											"end": 16109,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 16042,
											"end": 16109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16042,
											"end": 16109,
											"name": "tag",
											"source": 10,
											"value": "819"
										},
										{
											"begin": 16042,
											"end": 16109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16035,
											"end": 16109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16035,
											"end": 16109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16118,
											"end": 16211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "820"
										},
										{
											"begin": 16207,
											"end": 16210,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16118,
											"end": 16211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 16118,
											"end": 16211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16118,
											"end": 16211,
											"name": "tag",
											"source": 10,
											"value": "820"
										},
										{
											"begin": 16118,
											"end": 16211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16236,
											"end": 16238,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16231,
											"end": 16234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16227,
											"end": 16239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16220,
											"end": 16239,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16220,
											"end": 16239,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15879,
											"end": 16245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15879,
											"end": 16245,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15879,
											"end": 16245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15879,
											"end": 16245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16251,
											"end": 16670,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 16251,
											"end": 16670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16417,
											"end": 16421,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16455,
											"end": 16457,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16444,
											"end": 16453,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16440,
											"end": 16458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16432,
											"end": 16458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16432,
											"end": 16458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16504,
											"end": 16513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16498,
											"end": 16502,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16494,
											"end": 16514,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16490,
											"end": 16491,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16479,
											"end": 16488,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16475,
											"end": 16492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16468,
											"end": 16515,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16532,
											"end": 16663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "822"
										},
										{
											"begin": 16658,
											"end": 16662,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16532,
											"end": 16663,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 16532,
											"end": 16663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16532,
											"end": 16663,
											"name": "tag",
											"source": 10,
											"value": "822"
										},
										{
											"begin": 16532,
											"end": 16663,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16524,
											"end": 16663,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16524,
											"end": 16663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16251,
											"end": 16670,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16251,
											"end": 16670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16251,
											"end": 16670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16251,
											"end": 16670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16676,
											"end": 16856,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 16676,
											"end": 16856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16724,
											"end": 16801,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16721,
											"end": 16722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16714,
											"end": 16802,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16821,
											"end": 16825,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 16818,
											"end": 16819,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 16811,
											"end": 16826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16845,
											"end": 16849,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 16842,
											"end": 16843,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16835,
											"end": 16850,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 17039,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 16862,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17002,
											"end": 17031,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A204C6173742074696572206D757374206265206D61780000000000"
										},
										{
											"begin": 16998,
											"end": 16999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16990,
											"end": 16996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16986,
											"end": 17000,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16979,
											"end": 17032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 17039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 17039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17045,
											"end": 17411,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 17045,
											"end": 17411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17187,
											"end": 17190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17208,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "826"
										},
										{
											"begin": 17272,
											"end": 17274,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 17267,
											"end": 17270,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17208,
											"end": 17275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 17208,
											"end": 17275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17208,
											"end": 17275,
											"name": "tag",
											"source": 10,
											"value": "826"
										},
										{
											"begin": 17208,
											"end": 17275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17201,
											"end": 17275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17201,
											"end": 17275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17284,
											"end": 17377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 17373,
											"end": 17376,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17284,
											"end": 17377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 17284,
											"end": 17377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17284,
											"end": 17377,
											"name": "tag",
											"source": 10,
											"value": "827"
										},
										{
											"begin": 17284,
											"end": 17377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17402,
											"end": 17404,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17397,
											"end": 17400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17393,
											"end": 17405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17386,
											"end": 17405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17386,
											"end": 17405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17045,
											"end": 17411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17045,
											"end": 17411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17045,
											"end": 17411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17045,
											"end": 17411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17417,
											"end": 17836,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 17417,
											"end": 17836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17583,
											"end": 17587,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17621,
											"end": 17623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17610,
											"end": 17619,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17606,
											"end": 17624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17598,
											"end": 17624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17598,
											"end": 17624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17670,
											"end": 17679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17664,
											"end": 17668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17660,
											"end": 17680,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17656,
											"end": 17657,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17645,
											"end": 17654,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17641,
											"end": 17658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17634,
											"end": 17681,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17698,
											"end": 17829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "829"
										},
										{
											"begin": 17824,
											"end": 17828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17698,
											"end": 17829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 17698,
											"end": 17829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17698,
											"end": 17829,
											"name": "tag",
											"source": 10,
											"value": "829"
										},
										{
											"begin": 17698,
											"end": 17829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17690,
											"end": 17829,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17690,
											"end": 17829,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17417,
											"end": 17836,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17417,
											"end": 17836,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17417,
											"end": 17836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17417,
											"end": 17836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17842,
											"end": 18021,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 17842,
											"end": 18021,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17982,
											"end": 18013,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A205461782070657263656E7461676520746F6F2068696768000000"
										},
										{
											"begin": 17978,
											"end": 17979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17970,
											"end": 17976,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17966,
											"end": 17980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17959,
											"end": 18014,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17842,
											"end": 18021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17842,
											"end": 18021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "tag",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18169,
											"end": 18172,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18190,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "832"
										},
										{
											"begin": 18254,
											"end": 18256,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 18249,
											"end": 18252,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 18190,
											"end": 18257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18190,
											"end": 18257,
											"name": "tag",
											"source": 10,
											"value": "832"
										},
										{
											"begin": 18190,
											"end": 18257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18183,
											"end": 18257,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18183,
											"end": 18257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18266,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "833"
										},
										{
											"begin": 18355,
											"end": 18358,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18266,
											"end": 18359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 18266,
											"end": 18359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18266,
											"end": 18359,
											"name": "tag",
											"source": 10,
											"value": "833"
										},
										{
											"begin": 18266,
											"end": 18359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18384,
											"end": 18386,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18379,
											"end": 18382,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18375,
											"end": 18387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18368,
											"end": 18387,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18368,
											"end": 18387,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18027,
											"end": 18393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18565,
											"end": 18569,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18603,
											"end": 18605,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18592,
											"end": 18601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18588,
											"end": 18606,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18580,
											"end": 18606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18580,
											"end": 18606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18652,
											"end": 18661,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18646,
											"end": 18650,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18642,
											"end": 18662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18638,
											"end": 18639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18627,
											"end": 18636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18623,
											"end": 18640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 18663,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "835"
										},
										{
											"begin": 18806,
											"end": 18810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 18680,
											"end": 18811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18680,
											"end": 18811,
											"name": "tag",
											"source": 10,
											"value": "835"
										},
										{
											"begin": 18680,
											"end": 18811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18672,
											"end": 18811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18672,
											"end": 18811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 19004,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 18824,
											"end": 19004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18872,
											"end": 18949,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18869,
											"end": 18870,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18862,
											"end": 18950,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18969,
											"end": 18973,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 18966,
											"end": 18967,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 18959,
											"end": 18974,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18993,
											"end": 18997,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18990,
											"end": 18991,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18983,
											"end": 18998,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 19010,
											"end": 19204,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 19010,
											"end": 19204,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19050,
											"end": 19054,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19070,
											"end": 19090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "838"
										},
										{
											"begin": 19088,
											"end": 19089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19070,
											"end": 19090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 19070,
											"end": 19090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19070,
											"end": 19090,
											"name": "tag",
											"source": 10,
											"value": "838"
										},
										{
											"begin": 19070,
											"end": 19090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19065,
											"end": 19090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19065,
											"end": 19090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19104,
											"end": 19124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "839"
										},
										{
											"begin": 19122,
											"end": 19123,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19104,
											"end": 19124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 19104,
											"end": 19124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19104,
											"end": 19124,
											"name": "tag",
											"source": 10,
											"value": "839"
										},
										{
											"begin": 19104,
											"end": 19124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19099,
											"end": 19124,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19099,
											"end": 19124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19148,
											"end": 19149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19145,
											"end": 19146,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19141,
											"end": 19150,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19133,
											"end": 19150,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19133,
											"end": 19150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19172,
											"end": 19173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19166,
											"end": 19170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19163,
											"end": 19174,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19160,
											"end": 19197,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19160,
											"end": 19197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "840"
										},
										{
											"begin": 19160,
											"end": 19197,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19177,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "841"
										},
										{
											"begin": 19177,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 19177,
											"end": 19195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19177,
											"end": 19195,
											"name": "tag",
											"source": 10,
											"value": "841"
										},
										{
											"begin": 19177,
											"end": 19195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19160,
											"end": 19197,
											"name": "tag",
											"source": 10,
											"value": "840"
										},
										{
											"begin": 19160,
											"end": 19197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19010,
											"end": 19204,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19010,
											"end": 19204,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19010,
											"end": 19204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19010,
											"end": 19204,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19010,
											"end": 19204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19210,
											"end": 19435,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 19210,
											"end": 19435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19350,
											"end": 19384,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A205469657273206D75737420626520696E20617363656E64696E67"
										},
										{
											"begin": 19346,
											"end": 19347,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19338,
											"end": 19344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19334,
											"end": 19348,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19327,
											"end": 19385,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19419,
											"end": 19427,
											"name": "PUSH",
											"source": 10,
											"value": "206F726465720000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19414,
											"end": 19416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19406,
											"end": 19412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19402,
											"end": 19417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19395,
											"end": 19428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19210,
											"end": 19435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19210,
											"end": 19435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19441,
											"end": 19807,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 19441,
											"end": 19807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19583,
											"end": 19586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19604,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "844"
										},
										{
											"begin": 19668,
											"end": 19670,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 19663,
											"end": 19666,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19604,
											"end": 19671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 19604,
											"end": 19671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19604,
											"end": 19671,
											"name": "tag",
											"source": 10,
											"value": "844"
										},
										{
											"begin": 19604,
											"end": 19671,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19597,
											"end": 19671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19597,
											"end": 19671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19680,
											"end": 19773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "845"
										},
										{
											"begin": 19769,
											"end": 19772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19680,
											"end": 19773,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 19680,
											"end": 19773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19680,
											"end": 19773,
											"name": "tag",
											"source": 10,
											"value": "845"
										},
										{
											"begin": 19680,
											"end": 19773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19798,
											"end": 19800,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19793,
											"end": 19796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19789,
											"end": 19801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19782,
											"end": 19801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19782,
											"end": 19801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19441,
											"end": 19807,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19441,
											"end": 19807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19441,
											"end": 19807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19441,
											"end": 19807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19813,
											"end": 20232,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 19813,
											"end": 20232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19979,
											"end": 19983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20017,
											"end": 20019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20006,
											"end": 20015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20002,
											"end": 20020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19994,
											"end": 20020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19994,
											"end": 20020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20066,
											"end": 20075,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20060,
											"end": 20064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20056,
											"end": 20076,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20052,
											"end": 20053,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20041,
											"end": 20050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20037,
											"end": 20054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20030,
											"end": 20077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20094,
											"end": 20225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "847"
										},
										{
											"begin": 20220,
											"end": 20224,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20094,
											"end": 20225,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 20094,
											"end": 20225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20094,
											"end": 20225,
											"name": "tag",
											"source": 10,
											"value": "847"
										},
										{
											"begin": 20094,
											"end": 20225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20086,
											"end": 20225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20086,
											"end": 20225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19813,
											"end": 20232,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19813,
											"end": 20232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19813,
											"end": 20232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19813,
											"end": 20232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20238,
											"end": 20471,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 20238,
											"end": 20471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20277,
											"end": 20280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20300,
											"end": 20324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "849"
										},
										{
											"begin": 20318,
											"end": 20323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20300,
											"end": 20324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 20300,
											"end": 20324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20300,
											"end": 20324,
											"name": "tag",
											"source": 10,
											"value": "849"
										},
										{
											"begin": 20300,
											"end": 20324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20291,
											"end": 20324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20291,
											"end": 20324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20346,
											"end": 20412,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20339,
											"end": 20344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20336,
											"end": 20413,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20333,
											"end": 20436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "850"
										},
										{
											"begin": 20333,
											"end": 20436,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20416,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "851"
										},
										{
											"begin": 20416,
											"end": 20434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 20416,
											"end": 20434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20416,
											"end": 20434,
											"name": "tag",
											"source": 10,
											"value": "851"
										},
										{
											"begin": 20416,
											"end": 20434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20333,
											"end": 20436,
											"name": "tag",
											"source": 10,
											"value": "850"
										},
										{
											"begin": 20333,
											"end": 20436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20463,
											"end": 20464,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20456,
											"end": 20461,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20452,
											"end": 20465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20445,
											"end": 20465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20445,
											"end": 20465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20238,
											"end": 20471,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20238,
											"end": 20471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20238,
											"end": 20471,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20238,
											"end": 20471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20477,
											"end": 20581,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 20477,
											"end": 20581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20542,
											"end": 20548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20570,
											"end": 20574,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 20560,
											"end": 20574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20560,
											"end": 20574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20477,
											"end": 20581,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20477,
											"end": 20581,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20477,
											"end": 20581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20477,
											"end": 20581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20587,
											"end": 20730,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 20587,
											"end": 20730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20684,
											"end": 20695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20721,
											"end": 20724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20706,
											"end": 20724,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20706,
											"end": 20724,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20587,
											"end": 20730,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20587,
											"end": 20730,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20587,
											"end": 20730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20587,
											"end": 20730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20587,
											"end": 20730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20736,
											"end": 20834,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 20736,
											"end": 20834,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20801,
											"end": 20805,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20824,
											"end": 20827,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20816,
											"end": 20827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20816,
											"end": 20827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20736,
											"end": 20834,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20736,
											"end": 20834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20736,
											"end": 20834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20736,
											"end": 20834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20840,
											"end": 20948,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 20840,
											"end": 20948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20917,
											"end": 20941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "856"
										},
										{
											"begin": 20935,
											"end": 20940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20917,
											"end": 20941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 20917,
											"end": 20941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20917,
											"end": 20941,
											"name": "tag",
											"source": 10,
											"value": "856"
										},
										{
											"begin": 20917,
											"end": 20941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20912,
											"end": 20915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20905,
											"end": 20942,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20840,
											"end": 20948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20840,
											"end": 20948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20840,
											"end": 20948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 21133,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 20954,
											"end": 21133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21023,
											"end": 21033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21044,
											"end": 21090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "858"
										},
										{
											"begin": 21086,
											"end": 21089,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21078,
											"end": 21084,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21044,
											"end": 21090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 21044,
											"end": 21090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21044,
											"end": 21090,
											"name": "tag",
											"source": 10,
											"value": "858"
										},
										{
											"begin": 21044,
											"end": 21090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21122,
											"end": 21126,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21117,
											"end": 21120,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21099,
											"end": 21127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21099,
											"end": 21127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 21133,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 21133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 21133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 21133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 21133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21139,
											"end": 21250,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 21139,
											"end": 21250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21207,
											"end": 21211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21239,
											"end": 21243,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21234,
											"end": 21237,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21230,
											"end": 21244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21222,
											"end": 21244,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21222,
											"end": 21244,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21139,
											"end": 21250,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21139,
											"end": 21250,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21139,
											"end": 21250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21139,
											"end": 21250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21288,
											"end": 21982,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 21288,
											"end": 21982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21424,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "861"
										},
										{
											"begin": 21470,
											"end": 21475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21424,
											"end": 21476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 21424,
											"end": 21476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21424,
											"end": 21476,
											"name": "tag",
											"source": 10,
											"value": "861"
										},
										{
											"begin": 21424,
											"end": 21476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21492,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "862"
										},
										{
											"begin": 21569,
											"end": 21575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21564,
											"end": 21567,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21492,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 21492,
											"end": 21576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21492,
											"end": 21576,
											"name": "tag",
											"source": 10,
											"value": "862"
										},
										{
											"begin": 21492,
											"end": 21576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21485,
											"end": 21576,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21485,
											"end": 21576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21600,
											"end": 21654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "863"
										},
										{
											"begin": 21648,
											"end": 21653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21600,
											"end": 21654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 21600,
											"end": 21654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21600,
											"end": 21654,
											"name": "tag",
											"source": 10,
											"value": "863"
										},
										{
											"begin": 21600,
											"end": 21654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21677,
											"end": 21684,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 21708,
											"end": 21709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21693,
											"end": 21975,
											"name": "tag",
											"source": 10,
											"value": "864"
										},
										{
											"begin": 21693,
											"end": 21975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21718,
											"end": 21724,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21715,
											"end": 21716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21712,
											"end": 21725,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 21693,
											"end": 21975,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21693,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "866"
										},
										{
											"begin": 21693,
											"end": 21975,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21794,
											"end": 21800,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21788,
											"end": 21801,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 21821,
											"end": 21884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "867"
										},
										{
											"begin": 21880,
											"end": 21883,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 21865,
											"end": 21878,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21821,
											"end": 21884,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 21821,
											"end": 21884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21821,
											"end": 21884,
											"name": "tag",
											"source": 10,
											"value": "867"
										},
										{
											"begin": 21821,
											"end": 21884,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21814,
											"end": 21884,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 21814,
											"end": 21884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21907,
											"end": 21965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "868"
										},
										{
											"begin": 21958,
											"end": 21964,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21907,
											"end": 21965,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 21907,
											"end": 21965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21907,
											"end": 21965,
											"name": "tag",
											"source": 10,
											"value": "868"
										},
										{
											"begin": 21907,
											"end": 21965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21897,
											"end": 21965,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21897,
											"end": 21965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21753,
											"end": 21975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21740,
											"end": 21741,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 21737,
											"end": 21738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21733,
											"end": 21742,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21728,
											"end": 21742,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21728,
											"end": 21742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21693,
											"end": 21975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "864"
										},
										{
											"begin": 21693,
											"end": 21975,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21693,
											"end": 21975,
											"name": "tag",
											"source": 10,
											"value": "866"
										},
										{
											"begin": 21693,
											"end": 21975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21697,
											"end": 21711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21400,
											"end": 21982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21400,
											"end": 21982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21400,
											"end": 21982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21288,
											"end": 21982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21288,
											"end": 21982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21288,
											"end": 21982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21988,
											"end": 22506,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 21988,
											"end": 22506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22201,
											"end": 22205,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22239,
											"end": 22242,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 22228,
											"end": 22237,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22224,
											"end": 22243,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22216,
											"end": 22243,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22216,
											"end": 22243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22253,
											"end": 22370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "870"
										},
										{
											"begin": 22367,
											"end": 22368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22356,
											"end": 22365,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22352,
											"end": 22369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22343,
											"end": 22349,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22253,
											"end": 22370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 22253,
											"end": 22370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22253,
											"end": 22370,
											"name": "tag",
											"source": 10,
											"value": "870"
										},
										{
											"begin": 22253,
											"end": 22370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22380,
											"end": 22499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "871"
										},
										{
											"begin": 22494,
											"end": 22497,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 22483,
											"end": 22492,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22479,
											"end": 22498,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22470,
											"end": 22476,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22380,
											"end": 22499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 22380,
											"end": 22499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22380,
											"end": 22499,
											"name": "tag",
											"source": 10,
											"value": "871"
										},
										{
											"begin": 22380,
											"end": 22499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21988,
											"end": 22506,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21988,
											"end": 22506,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21988,
											"end": 22506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21988,
											"end": 22506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21988,
											"end": 22506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21988,
											"end": 22506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22512,
											"end": 22734,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 22512,
											"end": 22734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22652,
											"end": 22686,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A206275726E20616D6F756E74206578636565647320616C6C6F7761"
										},
										{
											"begin": 22648,
											"end": 22649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22640,
											"end": 22646,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22636,
											"end": 22650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22629,
											"end": 22687,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22721,
											"end": 22726,
											"name": "PUSH",
											"source": 10,
											"value": "6E63650000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22716,
											"end": 22718,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22708,
											"end": 22714,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22704,
											"end": 22719,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22697,
											"end": 22727,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22512,
											"end": 22734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22512,
											"end": 22734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22740,
											"end": 23106,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 22740,
											"end": 23106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22882,
											"end": 22885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22903,
											"end": 22970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "874"
										},
										{
											"begin": 22967,
											"end": 22969,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 22962,
											"end": 22965,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22903,
											"end": 22970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 22903,
											"end": 22970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22903,
											"end": 22970,
											"name": "tag",
											"source": 10,
											"value": "874"
										},
										{
											"begin": 22903,
											"end": 22970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22896,
											"end": 22970,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22896,
											"end": 22970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22979,
											"end": 23072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "875"
										},
										{
											"begin": 23068,
											"end": 23071,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22979,
											"end": 23072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 22979,
											"end": 23072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22979,
											"end": 23072,
											"name": "tag",
											"source": 10,
											"value": "875"
										},
										{
											"begin": 22979,
											"end": 23072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23097,
											"end": 23099,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23092,
											"end": 23095,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23088,
											"end": 23100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23081,
											"end": 23100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23081,
											"end": 23100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22740,
											"end": 23106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22740,
											"end": 23106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22740,
											"end": 23106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22740,
											"end": 23106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23112,
											"end": 23531,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 23112,
											"end": 23531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23278,
											"end": 23282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23316,
											"end": 23318,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23305,
											"end": 23314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23301,
											"end": 23319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23293,
											"end": 23319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23293,
											"end": 23319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23365,
											"end": 23374,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23359,
											"end": 23363,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23355,
											"end": 23375,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23351,
											"end": 23352,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23340,
											"end": 23349,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23336,
											"end": 23353,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23329,
											"end": 23376,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23393,
											"end": 23524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "877"
										},
										{
											"begin": 23519,
											"end": 23523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23393,
											"end": 23524,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 23393,
											"end": 23524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23393,
											"end": 23524,
											"name": "tag",
											"source": 10,
											"value": "877"
										},
										{
											"begin": 23393,
											"end": 23524,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23385,
											"end": 23524,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23385,
											"end": 23524,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23112,
											"end": 23531,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23112,
											"end": 23531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23112,
											"end": 23531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23112,
											"end": 23531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23622,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 23537,
											"end": 23622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23582,
											"end": 23589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23611,
											"end": 23616,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23600,
											"end": 23616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23600,
											"end": 23616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23537,
											"end": 23622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 23729,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 23628,
											"end": 23729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23664,
											"end": 23671,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23704,
											"end": 23722,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23697,
											"end": 23702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23693,
											"end": 23723,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 23682,
											"end": 23723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23682,
											"end": 23723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 23729,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 23729,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 23729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23628,
											"end": 23729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23735,
											"end": 23795,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 23735,
											"end": 23795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23763,
											"end": 23766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23784,
											"end": 23789,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23777,
											"end": 23789,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23777,
											"end": 23789,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23735,
											"end": 23795,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23735,
											"end": 23795,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23735,
											"end": 23795,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23735,
											"end": 23795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23801,
											"end": 23957,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 23801,
											"end": 23957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23858,
											"end": 23867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23891,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "882"
										},
										{
											"begin": 23908,
											"end": 23950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "883"
										},
										{
											"begin": 23917,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "884"
										},
										{
											"begin": 23943,
											"end": 23948,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23917,
											"end": 23949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 23917,
											"end": 23949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23917,
											"end": 23949,
											"name": "tag",
											"source": 10,
											"value": "884"
										},
										{
											"begin": 23917,
											"end": 23949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23908,
											"end": 23950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 23908,
											"end": 23950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23908,
											"end": 23950,
											"name": "tag",
											"source": 10,
											"value": "883"
										},
										{
											"begin": 23908,
											"end": 23950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23891,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 23891,
											"end": 23951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23891,
											"end": 23951,
											"name": "tag",
											"source": 10,
											"value": "882"
										},
										{
											"begin": 23891,
											"end": 23951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23878,
											"end": 23951,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23878,
											"end": 23951,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23801,
											"end": 23957,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23801,
											"end": 23957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23801,
											"end": 23957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23801,
											"end": 23957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23963,
											"end": 24108,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 23963,
											"end": 24108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24057,
											"end": 24101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "886"
										},
										{
											"begin": 24095,
											"end": 24100,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24057,
											"end": 24101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 24057,
											"end": 24101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24057,
											"end": 24101,
											"name": "tag",
											"source": 10,
											"value": "886"
										},
										{
											"begin": 24057,
											"end": 24101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24052,
											"end": 24055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24045,
											"end": 24102,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23963,
											"end": 24108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23963,
											"end": 24108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23963,
											"end": 24108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24114,
											"end": 24350,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 24114,
											"end": 24350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24214,
											"end": 24218,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24252,
											"end": 24254,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24241,
											"end": 24250,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24237,
											"end": 24255,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24229,
											"end": 24255,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24229,
											"end": 24255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24265,
											"end": 24343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "888"
										},
										{
											"begin": 24340,
											"end": 24341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24329,
											"end": 24338,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24325,
											"end": 24342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24316,
											"end": 24322,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24265,
											"end": 24343,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 24265,
											"end": 24343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24265,
											"end": 24343,
											"name": "tag",
											"source": 10,
											"value": "888"
										},
										{
											"begin": 24265,
											"end": 24343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24114,
											"end": 24350,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24114,
											"end": 24350,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24114,
											"end": 24350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24114,
											"end": 24350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24114,
											"end": 24350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24356,
											"end": 24664,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 24356,
											"end": 24664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24465,
											"end": 24469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24503,
											"end": 24505,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 24492,
											"end": 24501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24488,
											"end": 24506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24480,
											"end": 24506,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24480,
											"end": 24506,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24516,
											"end": 24581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "890"
										},
										{
											"begin": 24578,
											"end": 24579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24567,
											"end": 24576,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24563,
											"end": 24580,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24554,
											"end": 24560,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24516,
											"end": 24581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 24516,
											"end": 24581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24516,
											"end": 24581,
											"name": "tag",
											"source": 10,
											"value": "890"
										},
										{
											"begin": 24516,
											"end": 24581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24591,
											"end": 24657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "891"
										},
										{
											"begin": 24653,
											"end": 24655,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24642,
											"end": 24651,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24638,
											"end": 24656,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24629,
											"end": 24635,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24591,
											"end": 24657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 24591,
											"end": 24657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24591,
											"end": 24657,
											"name": "tag",
											"source": 10,
											"value": "891"
										},
										{
											"begin": 24591,
											"end": 24657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24356,
											"end": 24664,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 24356,
											"end": 24664,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24356,
											"end": 24664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24356,
											"end": 24664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24356,
											"end": 24664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24356,
											"end": 24664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24670,
											"end": 24836,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 24670,
											"end": 24836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24810,
											"end": 24828,
											"name": "PUSH",
											"source": 10,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 24806,
											"end": 24807,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24798,
											"end": 24804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24794,
											"end": 24808,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24787,
											"end": 24829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24670,
											"end": 24836,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24670,
											"end": 24836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24842,
											"end": 25208,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 24842,
											"end": 25208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24984,
											"end": 24987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25005,
											"end": 25072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "894"
										},
										{
											"begin": 25069,
											"end": 25071,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 25064,
											"end": 25067,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25005,
											"end": 25072,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 25005,
											"end": 25072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25005,
											"end": 25072,
											"name": "tag",
											"source": 10,
											"value": "894"
										},
										{
											"begin": 25005,
											"end": 25072,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24998,
											"end": 25072,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24998,
											"end": 25072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25081,
											"end": 25174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "895"
										},
										{
											"begin": 25170,
											"end": 25173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25081,
											"end": 25174,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 25081,
											"end": 25174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25081,
											"end": 25174,
											"name": "tag",
											"source": 10,
											"value": "895"
										},
										{
											"begin": 25081,
											"end": 25174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25199,
											"end": 25201,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25194,
											"end": 25197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25190,
											"end": 25202,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25183,
											"end": 25202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25183,
											"end": 25202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24842,
											"end": 25208,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24842,
											"end": 25208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24842,
											"end": 25208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24842,
											"end": 25208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25214,
											"end": 25633,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 25214,
											"end": 25633,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25380,
											"end": 25384,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25418,
											"end": 25420,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25407,
											"end": 25416,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25403,
											"end": 25421,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25395,
											"end": 25421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25395,
											"end": 25421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25467,
											"end": 25476,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25461,
											"end": 25465,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25457,
											"end": 25477,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25453,
											"end": 25454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25442,
											"end": 25451,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25438,
											"end": 25455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25431,
											"end": 25478,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25495,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "897"
										},
										{
											"begin": 25621,
											"end": 25625,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25495,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 25495,
											"end": 25626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25495,
											"end": 25626,
											"name": "tag",
											"source": 10,
											"value": "897"
										},
										{
											"begin": 25495,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25487,
											"end": 25626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25487,
											"end": 25626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25214,
											"end": 25633,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25214,
											"end": 25633,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25214,
											"end": 25633,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25214,
											"end": 25633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25639,
											"end": 25830,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 25639,
											"end": 25830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25679,
											"end": 25682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25698,
											"end": 25718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "899"
										},
										{
											"begin": 25716,
											"end": 25717,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25698,
											"end": 25718,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 25698,
											"end": 25718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25698,
											"end": 25718,
											"name": "tag",
											"source": 10,
											"value": "899"
										},
										{
											"begin": 25698,
											"end": 25718,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25693,
											"end": 25718,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25693,
											"end": 25718,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25732,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "900"
										},
										{
											"begin": 25750,
											"end": 25751,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25732,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 25732,
											"end": 25752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25732,
											"end": 25752,
											"name": "tag",
											"source": 10,
											"value": "900"
										},
										{
											"begin": 25732,
											"end": 25752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25727,
											"end": 25752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25727,
											"end": 25752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25775,
											"end": 25776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25772,
											"end": 25773,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25768,
											"end": 25777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25761,
											"end": 25777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25761,
											"end": 25777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25796,
											"end": 25799,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 25793,
											"end": 25794,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25790,
											"end": 25800,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 25787,
											"end": 25823,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 25787,
											"end": 25823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "901"
										},
										{
											"begin": 25787,
											"end": 25823,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 25803,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "902"
										},
										{
											"begin": 25803,
											"end": 25821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 25803,
											"end": 25821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25803,
											"end": 25821,
											"name": "tag",
											"source": 10,
											"value": "902"
										},
										{
											"begin": 25803,
											"end": 25821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25787,
											"end": 25823,
											"name": "tag",
											"source": 10,
											"value": "901"
										},
										{
											"begin": 25787,
											"end": 25823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25639,
											"end": 25830,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25639,
											"end": 25830,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25639,
											"end": 25830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25639,
											"end": 25830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25639,
											"end": 25830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25836,
											"end": 25934,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 25836,
											"end": 25934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25887,
											"end": 25893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25921,
											"end": 25926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25915,
											"end": 25927,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 25905,
											"end": 25927,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25905,
											"end": 25927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25836,
											"end": 25934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25836,
											"end": 25934,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25836,
											"end": 25934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25836,
											"end": 25934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25940,
											"end": 26087,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 25940,
											"end": 26087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26041,
											"end": 26052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26078,
											"end": 26081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26063,
											"end": 26081,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26063,
											"end": 26081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25940,
											"end": 26087,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25940,
											"end": 26087,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25940,
											"end": 26087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25940,
											"end": 26087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25940,
											"end": 26087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26093,
											"end": 26479,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 26093,
											"end": 26479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26197,
											"end": 26200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26225,
											"end": 26263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "906"
										},
										{
											"begin": 26257,
											"end": 26262,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26225,
											"end": 26263,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 26225,
											"end": 26263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26225,
											"end": 26263,
											"name": "tag",
											"source": 10,
											"value": "906"
										},
										{
											"begin": 26225,
											"end": 26263,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26279,
											"end": 26367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "907"
										},
										{
											"begin": 26360,
											"end": 26366,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26355,
											"end": 26358,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26279,
											"end": 26367,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 26279,
											"end": 26367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26279,
											"end": 26367,
											"name": "tag",
											"source": 10,
											"value": "907"
										},
										{
											"begin": 26279,
											"end": 26367,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26272,
											"end": 26367,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 26272,
											"end": 26367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26376,
											"end": 26441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "908"
										},
										{
											"begin": 26434,
											"end": 26440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26429,
											"end": 26432,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 26422,
											"end": 26426,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26415,
											"end": 26420,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 26411,
											"end": 26427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26376,
											"end": 26441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 26376,
											"end": 26441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26376,
											"end": 26441,
											"name": "tag",
											"source": 10,
											"value": "908"
										},
										{
											"begin": 26376,
											"end": 26441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26466,
											"end": 26472,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 26461,
											"end": 26464,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26457,
											"end": 26473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26450,
											"end": 26473,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26450,
											"end": 26473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26201,
											"end": 26479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26093,
											"end": 26479,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26093,
											"end": 26479,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26093,
											"end": 26479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26093,
											"end": 26479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26093,
											"end": 26479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26485,
											"end": 26756,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 26485,
											"end": 26756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26615,
											"end": 26618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26637,
											"end": 26730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "910"
										},
										{
											"begin": 26726,
											"end": 26729,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26717,
											"end": 26723,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 26637,
											"end": 26730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 26637,
											"end": 26730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26637,
											"end": 26730,
											"name": "tag",
											"source": 10,
											"value": "910"
										},
										{
											"begin": 26637,
											"end": 26730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26630,
											"end": 26730,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26630,
											"end": 26730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26747,
											"end": 26750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26740,
											"end": 26750,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26740,
											"end": 26750,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26485,
											"end": 26756,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 26485,
											"end": 26756,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26485,
											"end": 26756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26485,
											"end": 26756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26485,
											"end": 26756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26762,
											"end": 26942,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 26762,
											"end": 26942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26902,
											"end": 26934,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A204661696C656420746F20636865636B2072657365727665730000"
										},
										{
											"begin": 26898,
											"end": 26899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26890,
											"end": 26896,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26886,
											"end": 26900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26879,
											"end": 26935,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26762,
											"end": 26942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26762,
											"end": 26942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26948,
											"end": 27314,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 26948,
											"end": 27314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27090,
											"end": 27093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27111,
											"end": 27178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "913"
										},
										{
											"begin": 27175,
											"end": 27177,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 27170,
											"end": 27173,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27111,
											"end": 27178,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 27111,
											"end": 27178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27111,
											"end": 27178,
											"name": "tag",
											"source": 10,
											"value": "913"
										},
										{
											"begin": 27111,
											"end": 27178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27104,
											"end": 27178,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27104,
											"end": 27178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27187,
											"end": 27280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "914"
										},
										{
											"begin": 27276,
											"end": 27279,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27187,
											"end": 27280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 27187,
											"end": 27280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27187,
											"end": 27280,
											"name": "tag",
											"source": 10,
											"value": "914"
										},
										{
											"begin": 27187,
											"end": 27280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27305,
											"end": 27307,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27300,
											"end": 27303,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27296,
											"end": 27308,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27289,
											"end": 27308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27289,
											"end": 27308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26948,
											"end": 27314,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26948,
											"end": 27314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26948,
											"end": 27314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26948,
											"end": 27314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27320,
											"end": 27739,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 27320,
											"end": 27739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27486,
											"end": 27490,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27524,
											"end": 27526,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27513,
											"end": 27522,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27509,
											"end": 27527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27501,
											"end": 27527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27501,
											"end": 27527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27573,
											"end": 27582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27567,
											"end": 27571,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27563,
											"end": 27583,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27559,
											"end": 27560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27548,
											"end": 27557,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27544,
											"end": 27561,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27537,
											"end": 27584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27601,
											"end": 27732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "916"
										},
										{
											"begin": 27727,
											"end": 27731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27601,
											"end": 27732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 27601,
											"end": 27732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27601,
											"end": 27732,
											"name": "tag",
											"source": 10,
											"value": "916"
										},
										{
											"begin": 27601,
											"end": 27732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27593,
											"end": 27732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27593,
											"end": 27732,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27320,
											"end": 27739,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27320,
											"end": 27739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27320,
											"end": 27739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27320,
											"end": 27739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27745,
											"end": 27888,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 27745,
											"end": 27888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27802,
											"end": 27807,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27833,
											"end": 27839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27827,
											"end": 27840,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 27818,
											"end": 27840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27818,
											"end": 27840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27849,
											"end": 27882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "918"
										},
										{
											"begin": 27876,
											"end": 27881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27849,
											"end": 27882,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 27849,
											"end": 27882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27849,
											"end": 27882,
											"name": "tag",
											"source": 10,
											"value": "918"
										},
										{
											"begin": 27849,
											"end": 27882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27745,
											"end": 27888,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 27745,
											"end": 27888,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27745,
											"end": 27888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27745,
											"end": 27888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27745,
											"end": 27888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27894,
											"end": 28245,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 27894,
											"end": 28245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27964,
											"end": 27970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28013,
											"end": 28015,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28001,
											"end": 28010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27992,
											"end": 27999,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 27988,
											"end": 28011,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27984,
											"end": 28016,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 27981,
											"end": 28100,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 27981,
											"end": 28100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "920"
										},
										{
											"begin": 27981,
											"end": 28100,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 28019,
											"end": 28098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "921"
										},
										{
											"begin": 28019,
											"end": 28098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 28019,
											"end": 28098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28019,
											"end": 28098,
											"name": "tag",
											"source": 10,
											"value": "921"
										},
										{
											"begin": 28019,
											"end": 28098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27981,
											"end": 28100,
											"name": "tag",
											"source": 10,
											"value": "920"
										},
										{
											"begin": 27981,
											"end": 28100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28139,
											"end": 28140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28164,
											"end": 28228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "922"
										},
										{
											"begin": 28220,
											"end": 28227,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28211,
											"end": 28217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28200,
											"end": 28209,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 28196,
											"end": 28218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28164,
											"end": 28228,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 28164,
											"end": 28228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28164,
											"end": 28228,
											"name": "tag",
											"source": 10,
											"value": "922"
										},
										{
											"begin": 28164,
											"end": 28228,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28154,
											"end": 28228,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28154,
											"end": 28228,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28110,
											"end": 28238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27894,
											"end": 28245,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 27894,
											"end": 28245,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27894,
											"end": 28245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27894,
											"end": 28245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27894,
											"end": 28245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28251,
											"end": 28428,
											"name": "tag",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 28251,
											"end": 28428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28391,
											"end": 28420,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A20496E73756666696369656E742072657365727665730000000000"
										},
										{
											"begin": 28387,
											"end": 28388,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28379,
											"end": 28385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28375,
											"end": 28389,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28368,
											"end": 28421,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 28251,
											"end": 28428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28251,
											"end": 28428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28434,
											"end": 28800,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 28434,
											"end": 28800,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28576,
											"end": 28579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28597,
											"end": 28664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "925"
										},
										{
											"begin": 28661,
											"end": 28663,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 28656,
											"end": 28659,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28597,
											"end": 28664,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 28597,
											"end": 28664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28597,
											"end": 28664,
											"name": "tag",
											"source": 10,
											"value": "925"
										},
										{
											"begin": 28597,
											"end": 28664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28590,
											"end": 28664,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28590,
											"end": 28664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28673,
											"end": 28766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "926"
										},
										{
											"begin": 28762,
											"end": 28765,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28673,
											"end": 28766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 28673,
											"end": 28766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28673,
											"end": 28766,
											"name": "tag",
											"source": 10,
											"value": "926"
										},
										{
											"begin": 28673,
											"end": 28766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28791,
											"end": 28793,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28786,
											"end": 28789,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28782,
											"end": 28794,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28775,
											"end": 28794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28775,
											"end": 28794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28434,
											"end": 28800,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28434,
											"end": 28800,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28434,
											"end": 28800,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28434,
											"end": 28800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28806,
											"end": 29225,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 28806,
											"end": 29225,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28972,
											"end": 28976,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29010,
											"end": 29012,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28999,
											"end": 29008,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28995,
											"end": 29013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28987,
											"end": 29013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28987,
											"end": 29013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29059,
											"end": 29068,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29053,
											"end": 29057,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29049,
											"end": 29069,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 29045,
											"end": 29046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29034,
											"end": 29043,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29030,
											"end": 29047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29023,
											"end": 29070,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29087,
											"end": 29218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "928"
										},
										{
											"begin": 29213,
											"end": 29217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 29087,
											"end": 29218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 29087,
											"end": 29218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29087,
											"end": 29218,
											"name": "tag",
											"source": 10,
											"value": "928"
										},
										{
											"begin": 29087,
											"end": 29218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29079,
											"end": 29218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29079,
											"end": 29218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28806,
											"end": 29225,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 28806,
											"end": 29225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28806,
											"end": 29225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28806,
											"end": 29225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29231,
											"end": 29401,
											"name": "tag",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 29231,
											"end": 29401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29371,
											"end": 29393,
											"name": "PUSH",
											"source": 10,
											"value": "474946543A20496E76616C696420616D6F756E74000000000000000000000000"
										},
										{
											"begin": 29367,
											"end": 29368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29359,
											"end": 29365,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29355,
											"end": 29369,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29348,
											"end": 29394,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 29231,
											"end": 29401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29231,
											"end": 29401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29407,
											"end": 29773,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 29407,
											"end": 29773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29549,
											"end": 29552,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29570,
											"end": 29637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "931"
										},
										{
											"begin": 29634,
											"end": 29636,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 29629,
											"end": 29632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 29570,
											"end": 29637,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 29570,
											"end": 29637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29570,
											"end": 29637,
											"name": "tag",
											"source": 10,
											"value": "931"
										},
										{
											"begin": 29570,
											"end": 29637,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29563,
											"end": 29637,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29563,
											"end": 29637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29646,
											"end": 29739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "932"
										},
										{
											"begin": 29735,
											"end": 29738,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29646,
											"end": 29739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "632"
										},
										{
											"begin": 29646,
											"end": 29739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29646,
											"end": 29739,
											"name": "tag",
											"source": 10,
											"value": "932"
										},
										{
											"begin": 29646,
											"end": 29739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29764,
											"end": 29766,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29759,
											"end": 29762,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29755,
											"end": 29767,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29748,
											"end": 29767,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29748,
											"end": 29767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29407,
											"end": 29773,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29407,
											"end": 29773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29407,
											"end": 29773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29407,
											"end": 29773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 29779,
											"end": 30198,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 29779,
											"end": 30198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 29945,
											"end": 29949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 29983,
											"end": 29985,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 29972,
											"end": 29981,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 29968,
											"end": 29986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29960,
											"end": 29986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29960,
											"end": 29986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30032,
											"end": 30041,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30026,
											"end": 30030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30022,
											"end": 30042,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 30018,
											"end": 30019,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30007,
											"end": 30016,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30003,
											"end": 30020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 29996,
											"end": 30043,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30060,
											"end": 30191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "934"
										},
										{
											"begin": 30186,
											"end": 30190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30060,
											"end": 30191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 30060,
											"end": 30191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30060,
											"end": 30191,
											"name": "tag",
											"source": 10,
											"value": "934"
										},
										{
											"begin": 30060,
											"end": 30191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30052,
											"end": 30191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30052,
											"end": 30191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29779,
											"end": 30198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 29779,
											"end": 30198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 29779,
											"end": 30198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 29779,
											"end": 30198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30204,
											"end": 30374,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 30204,
											"end": 30374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30344,
											"end": 30366,
											"name": "PUSH",
											"source": 10,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 30340,
											"end": 30341,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30332,
											"end": 30338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30328,
											"end": 30342,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30321,
											"end": 30367,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 30204,
											"end": 30374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30204,
											"end": 30374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30380,
											"end": 30746,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 30380,
											"end": 30746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30522,
											"end": 30525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30543,
											"end": 30610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "937"
										},
										{
											"begin": 30607,
											"end": 30609,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 30602,
											"end": 30605,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30543,
											"end": 30610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 30543,
											"end": 30610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30543,
											"end": 30610,
											"name": "tag",
											"source": 10,
											"value": "937"
										},
										{
											"begin": 30543,
											"end": 30610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30536,
											"end": 30610,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30536,
											"end": 30610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30619,
											"end": 30712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "938"
										},
										{
											"begin": 30708,
											"end": 30711,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30619,
											"end": 30712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 30619,
											"end": 30712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30619,
											"end": 30712,
											"name": "tag",
											"source": 10,
											"value": "938"
										},
										{
											"begin": 30619,
											"end": 30712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30737,
											"end": 30739,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30732,
											"end": 30735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30728,
											"end": 30740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30721,
											"end": 30740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30721,
											"end": 30740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30380,
											"end": 30746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30380,
											"end": 30746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30380,
											"end": 30746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30380,
											"end": 30746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 30752,
											"end": 31171,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 30752,
											"end": 31171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 30918,
											"end": 30922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30956,
											"end": 30958,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 30945,
											"end": 30954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 30941,
											"end": 30959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30933,
											"end": 30959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30933,
											"end": 30959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31005,
											"end": 31014,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30999,
											"end": 31003,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 30995,
											"end": 31015,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 30991,
											"end": 30992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 30980,
											"end": 30989,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 30976,
											"end": 30993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 30969,
											"end": 31016,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 31033,
											"end": 31164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "940"
										},
										{
											"begin": 31159,
											"end": 31163,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31033,
											"end": 31164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 31033,
											"end": 31164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31033,
											"end": 31164,
											"name": "tag",
											"source": 10,
											"value": "940"
										},
										{
											"begin": 31033,
											"end": 31164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31025,
											"end": 31164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31025,
											"end": 31164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30752,
											"end": 31171,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 30752,
											"end": 31171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 30752,
											"end": 31171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 30752,
											"end": 31171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31177,
											"end": 31619,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 31177,
											"end": 31619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31326,
											"end": 31330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31364,
											"end": 31366,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 31353,
											"end": 31362,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31349,
											"end": 31367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31341,
											"end": 31367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31341,
											"end": 31367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31377,
											"end": 31448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "942"
										},
										{
											"begin": 31445,
											"end": 31446,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31434,
											"end": 31443,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31430,
											"end": 31447,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31421,
											"end": 31427,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 31377,
											"end": 31448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 31377,
											"end": 31448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31377,
											"end": 31448,
											"name": "tag",
											"source": 10,
											"value": "942"
										},
										{
											"begin": 31377,
											"end": 31448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31458,
											"end": 31530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "943"
										},
										{
											"begin": 31526,
											"end": 31528,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 31515,
											"end": 31524,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31511,
											"end": 31529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31502,
											"end": 31508,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 31458,
											"end": 31530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 31458,
											"end": 31530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31458,
											"end": 31530,
											"name": "tag",
											"source": 10,
											"value": "943"
										},
										{
											"begin": 31458,
											"end": 31530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31540,
											"end": 31612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "944"
										},
										{
											"begin": 31608,
											"end": 31610,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 31597,
											"end": 31606,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31593,
											"end": 31611,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31584,
											"end": 31590,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 31540,
											"end": 31612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 31540,
											"end": 31612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31540,
											"end": 31612,
											"name": "tag",
											"source": 10,
											"value": "944"
										},
										{
											"begin": 31540,
											"end": 31612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31177,
											"end": 31619,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 31177,
											"end": 31619,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 31177,
											"end": 31619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31177,
											"end": 31619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31177,
											"end": 31619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31177,
											"end": 31619,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31177,
											"end": 31619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31625,
											"end": 31766,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 31625,
											"end": 31766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31674,
											"end": 31678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31697,
											"end": 31700,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31689,
											"end": 31700,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31689,
											"end": 31700,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31720,
											"end": 31723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 31717,
											"end": 31718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31710,
											"end": 31724,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 31754,
											"end": 31758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 31751,
											"end": 31752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31741,
											"end": 31759,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 31733,
											"end": 31759,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31733,
											"end": 31759,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31625,
											"end": 31766,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31625,
											"end": 31766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31625,
											"end": 31766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31625,
											"end": 31766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31772,
											"end": 31865,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 31772,
											"end": 31865,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31809,
											"end": 31815,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31856,
											"end": 31858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 31851,
											"end": 31853,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 31844,
											"end": 31849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 31840,
											"end": 31854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 31836,
											"end": 31859,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 31826,
											"end": 31859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31826,
											"end": 31859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31772,
											"end": 31865,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31772,
											"end": 31865,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31772,
											"end": 31865,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31772,
											"end": 31865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31871,
											"end": 31978,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 31871,
											"end": 31978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 31915,
											"end": 31923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 31965,
											"end": 31970,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31959,
											"end": 31963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 31955,
											"end": 31971,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 31934,
											"end": 31971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 31934,
											"end": 31971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31871,
											"end": 31978,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 31871,
											"end": 31978,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 31871,
											"end": 31978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31871,
											"end": 31978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31871,
											"end": 31978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 31984,
											"end": 32377,
											"name": "tag",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 31984,
											"end": 32377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32053,
											"end": 32059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32103,
											"end": 32104,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 32091,
											"end": 32101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32087,
											"end": 32105,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 32126,
											"end": 32223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "949"
										},
										{
											"begin": 32156,
											"end": 32222,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32145,
											"end": 32154,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32126,
											"end": 32223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 32126,
											"end": 32223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32126,
											"end": 32223,
											"name": "tag",
											"source": 10,
											"value": "949"
										},
										{
											"begin": 32126,
											"end": 32223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32244,
											"end": 32283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "950"
										},
										{
											"begin": 32274,
											"end": 32282,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 32263,
											"end": 32272,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32244,
											"end": 32283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 32244,
											"end": 32283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32244,
											"end": 32283,
											"name": "tag",
											"source": 10,
											"value": "950"
										},
										{
											"begin": 32244,
											"end": 32283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32232,
											"end": 32283,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 32232,
											"end": 32283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32316,
											"end": 32320,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 32312,
											"end": 32321,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 32305,
											"end": 32310,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 32301,
											"end": 32322,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 32292,
											"end": 32322,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 32292,
											"end": 32322,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32365,
											"end": 32369,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 32355,
											"end": 32363,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 32351,
											"end": 32370,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 32344,
											"end": 32349,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 32341,
											"end": 32371,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 32331,
											"end": 32371,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 32331,
											"end": 32371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32060,
											"end": 32377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32060,
											"end": 32377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31984,
											"end": 32377,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 31984,
											"end": 32377,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 31984,
											"end": 32377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31984,
											"end": 32377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31984,
											"end": 32377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 31984,
											"end": 32377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32383,
											"end": 32525,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 32383,
											"end": 32525,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32433,
											"end": 32442,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32466,
											"end": 32519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "952"
										},
										{
											"begin": 32484,
											"end": 32518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "953"
										},
										{
											"begin": 32493,
											"end": 32517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "954"
										},
										{
											"begin": 32511,
											"end": 32516,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 32493,
											"end": 32517,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 32493,
											"end": 32517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32493,
											"end": 32517,
											"name": "tag",
											"source": 10,
											"value": "954"
										},
										{
											"begin": 32493,
											"end": 32517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32484,
											"end": 32518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 32484,
											"end": 32518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32484,
											"end": 32518,
											"name": "tag",
											"source": 10,
											"value": "953"
										},
										{
											"begin": 32484,
											"end": 32518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32466,
											"end": 32519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 32466,
											"end": 32519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32466,
											"end": 32519,
											"name": "tag",
											"source": 10,
											"value": "952"
										},
										{
											"begin": 32466,
											"end": 32519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32453,
											"end": 32519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32453,
											"end": 32519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32383,
											"end": 32525,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 32383,
											"end": 32525,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32383,
											"end": 32525,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32383,
											"end": 32525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32531,
											"end": 32606,
											"name": "tag",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 32531,
											"end": 32606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32574,
											"end": 32577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32595,
											"end": 32600,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 32588,
											"end": 32600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32588,
											"end": 32600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32531,
											"end": 32606,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 32531,
											"end": 32606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32531,
											"end": 32606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32531,
											"end": 32606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32612,
											"end": 32881,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 32612,
											"end": 32881,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32722,
											"end": 32761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "957"
										},
										{
											"begin": 32753,
											"end": 32760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 32722,
											"end": 32761,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 32722,
											"end": 32761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32722,
											"end": 32761,
											"name": "tag",
											"source": 10,
											"value": "957"
										},
										{
											"begin": 32722,
											"end": 32761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32783,
											"end": 32874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "958"
										},
										{
											"begin": 32832,
											"end": 32873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "959"
										},
										{
											"begin": 32856,
											"end": 32872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32832,
											"end": 32873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 32832,
											"end": 32873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32832,
											"end": 32873,
											"name": "tag",
											"source": 10,
											"value": "959"
										},
										{
											"begin": 32832,
											"end": 32873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32824,
											"end": 32830,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 32817,
											"end": 32821,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 32811,
											"end": 32822,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 32783,
											"end": 32874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "639"
										},
										{
											"begin": 32783,
											"end": 32874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32783,
											"end": 32874,
											"name": "tag",
											"source": 10,
											"value": "958"
										},
										{
											"begin": 32783,
											"end": 32874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32777,
											"end": 32781,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 32770,
											"end": 32875,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 32688,
											"end": 32881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32612,
											"end": 32881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32612,
											"end": 32881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32612,
											"end": 32881,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32612,
											"end": 32881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32887,
											"end": 32960,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 32887,
											"end": 32960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 32932,
											"end": 32935,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 32887,
											"end": 32960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 32887,
											"end": 32960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 32966,
											"end": 33155,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 32966,
											"end": 33155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33043,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "962"
										},
										{
											"begin": 33043,
											"end": 33075,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 33043,
											"end": 33075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33043,
											"end": 33075,
											"name": "tag",
											"source": 10,
											"value": "962"
										},
										{
											"begin": 33043,
											"end": 33075,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33084,
											"end": 33149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "963"
										},
										{
											"begin": 33142,
											"end": 33148,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33134,
											"end": 33140,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 33128,
											"end": 33132,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 33084,
											"end": 33149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 33084,
											"end": 33149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33084,
											"end": 33149,
											"name": "tag",
											"source": 10,
											"value": "963"
										},
										{
											"begin": 33084,
											"end": 33149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33019,
											"end": 33155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32966,
											"end": 33155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32966,
											"end": 33155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 32966,
											"end": 33155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33161,
											"end": 33347,
											"name": "tag",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 33161,
											"end": 33347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33221,
											"end": 33341,
											"name": "tag",
											"source": 10,
											"value": "965"
										},
										{
											"begin": 33221,
											"end": 33341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33238,
											"end": 33241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33231,
											"end": 33236,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33228,
											"end": 33242,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 33221,
											"end": 33341,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 33221,
											"end": 33341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "967"
										},
										{
											"begin": 33221,
											"end": 33341,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 33292,
											"end": 33331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "968"
										},
										{
											"begin": 33329,
											"end": 33330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 33322,
											"end": 33327,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33292,
											"end": 33331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 33292,
											"end": 33331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33292,
											"end": 33331,
											"name": "tag",
											"source": 10,
											"value": "968"
										},
										{
											"begin": 33292,
											"end": 33331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33265,
											"end": 33266,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 33258,
											"end": 33263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33254,
											"end": 33267,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33245,
											"end": 33267,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 33245,
											"end": 33267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33221,
											"end": 33341,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "965"
										},
										{
											"begin": 33221,
											"end": 33341,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33221,
											"end": 33341,
											"name": "tag",
											"source": 10,
											"value": "967"
										},
										{
											"begin": 33221,
											"end": 33341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33161,
											"end": 33347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33161,
											"end": 33347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33161,
											"end": 33347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33353,
											"end": 33896,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 33353,
											"end": 33896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33454,
											"end": 33456,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 33449,
											"end": 33452,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33446,
											"end": 33457,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 33443,
											"end": 33889,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 33443,
											"end": 33889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "970"
										},
										{
											"begin": 33443,
											"end": 33889,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 33488,
											"end": 33526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "971"
										},
										{
											"begin": 33520,
											"end": 33525,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33488,
											"end": 33526,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 33488,
											"end": 33526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33488,
											"end": 33526,
											"name": "tag",
											"source": 10,
											"value": "971"
										},
										{
											"begin": 33488,
											"end": 33526,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33572,
											"end": 33601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "972"
										},
										{
											"begin": 33590,
											"end": 33600,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 33572,
											"end": 33601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 33572,
											"end": 33601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33572,
											"end": 33601,
											"name": "tag",
											"source": 10,
											"value": "972"
										},
										{
											"begin": 33572,
											"end": 33601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33562,
											"end": 33570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33558,
											"end": 33602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33755,
											"end": 33757,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 33743,
											"end": 33753,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 33740,
											"end": 33758,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 33737,
											"end": 33786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 33737,
											"end": 33786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "973"
										},
										{
											"begin": 33737,
											"end": 33786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 33776,
											"end": 33784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 33761,
											"end": 33784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 33761,
											"end": 33784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33737,
											"end": 33786,
											"name": "tag",
											"source": 10,
											"value": "973"
										},
										{
											"begin": 33737,
											"end": 33786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33799,
											"end": 33879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "974"
										},
										{
											"begin": 33855,
											"end": 33877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "975"
										},
										{
											"begin": 33873,
											"end": 33876,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 33855,
											"end": 33877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 33855,
											"end": 33877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33855,
											"end": 33877,
											"name": "tag",
											"source": 10,
											"value": "975"
										},
										{
											"begin": 33855,
											"end": 33877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33845,
											"end": 33853,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 33841,
											"end": 33878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 33828,
											"end": 33839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33799,
											"end": 33879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "645"
										},
										{
											"begin": 33799,
											"end": 33879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33799,
											"end": 33879,
											"name": "tag",
											"source": 10,
											"value": "974"
										},
										{
											"begin": 33799,
											"end": 33879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33458,
											"end": 33889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33458,
											"end": 33889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33443,
											"end": 33889,
											"name": "tag",
											"source": 10,
											"value": "970"
										},
										{
											"begin": 33443,
											"end": 33889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33353,
											"end": 33896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33353,
											"end": 33896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33353,
											"end": 33896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33353,
											"end": 33896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 33902,
											"end": 34019,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 33902,
											"end": 34019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 33956,
											"end": 33964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34006,
											"end": 34011,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34000,
											"end": 34004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 33996,
											"end": 34012,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 33975,
											"end": 34012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 33975,
											"end": 34012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33902,
											"end": 34019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 33902,
											"end": 34019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 33902,
											"end": 34019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33902,
											"end": 34019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 33902,
											"end": 34019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34025,
											"end": 34194,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 34025,
											"end": 34194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34069,
											"end": 34075,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34102,
											"end": 34153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "978"
										},
										{
											"begin": 34150,
											"end": 34151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34146,
											"end": 34152,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 34138,
											"end": 34143,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 34135,
											"end": 34136,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 34131,
											"end": 34144,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 34102,
											"end": 34153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 34102,
											"end": 34153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34102,
											"end": 34153,
											"name": "tag",
											"source": 10,
											"value": "978"
										},
										{
											"begin": 34102,
											"end": 34153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34098,
											"end": 34154,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 34183,
											"end": 34187,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 34177,
											"end": 34181,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 34173,
											"end": 34188,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 34163,
											"end": 34188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 34163,
											"end": 34188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34076,
											"end": 34194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34025,
											"end": 34194,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 34025,
											"end": 34194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 34025,
											"end": 34194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34025,
											"end": 34194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34025,
											"end": 34194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34199,
											"end": 34494,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 34199,
											"end": 34494,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34275,
											"end": 34279,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34421,
											"end": 34450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "980"
										},
										{
											"begin": 34446,
											"end": 34449,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 34440,
											"end": 34444,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 34421,
											"end": 34450,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 34421,
											"end": 34450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34421,
											"end": 34450,
											"name": "tag",
											"source": 10,
											"value": "980"
										},
										{
											"begin": 34421,
											"end": 34450,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34413,
											"end": 34450,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 34413,
											"end": 34450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34483,
											"end": 34486,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34480,
											"end": 34481,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 34476,
											"end": 34487,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 34470,
											"end": 34474,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34467,
											"end": 34488,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 34459,
											"end": 34488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 34459,
											"end": 34488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34199,
											"end": 34494,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 34199,
											"end": 34494,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 34199,
											"end": 34494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34199,
											"end": 34494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34199,
											"end": 34494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34499,
											"end": 35894,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 34499,
											"end": 35894,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34616,
											"end": 34653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "982"
										},
										{
											"begin": 34649,
											"end": 34652,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34616,
											"end": 34653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 34616,
											"end": 34653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34616,
											"end": 34653,
											"name": "tag",
											"source": 10,
											"value": "982"
										},
										{
											"begin": 34616,
											"end": 34653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34718,
											"end": 34736,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34710,
											"end": 34716,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 34707,
											"end": 34737,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 34704,
											"end": 34760,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 34704,
											"end": 34760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "983"
										},
										{
											"begin": 34704,
											"end": 34760,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "984"
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 34740,
											"end": 34758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "tag",
											"source": 10,
											"value": "984"
										},
										{
											"begin": 34740,
											"end": 34758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34704,
											"end": 34760,
											"name": "tag",
											"source": 10,
											"value": "983"
										},
										{
											"begin": 34704,
											"end": 34760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34784,
											"end": 34822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "985"
										},
										{
											"begin": 34816,
											"end": 34820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34810,
											"end": 34821,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 34784,
											"end": 34822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 34784,
											"end": 34822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34784,
											"end": 34822,
											"name": "tag",
											"source": 10,
											"value": "985"
										},
										{
											"begin": 34784,
											"end": 34822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34869,
											"end": 34936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "986"
										},
										{
											"begin": 34929,
											"end": 34935,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34921,
											"end": 34927,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 34915,
											"end": 34919,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 34869,
											"end": 34936,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 34869,
											"end": 34936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 34869,
											"end": 34936,
											"name": "tag",
											"source": 10,
											"value": "986"
										},
										{
											"begin": 34869,
											"end": 34936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34963,
											"end": 34964,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34987,
											"end": 34991,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 34974,
											"end": 34991,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 34974,
											"end": 34991,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35019,
											"end": 35021,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 35011,
											"end": 35017,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 35008,
											"end": 35022,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 35036,
											"end": 35037,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 35031,
											"end": 35649,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 35031,
											"end": 35649,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 35031,
											"end": 35649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "988"
										},
										{
											"begin": 35031,
											"end": 35649,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 35693,
											"end": 35694,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 35710,
											"end": 35716,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 35707,
											"end": 35784,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 35707,
											"end": 35784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "989"
										},
										{
											"begin": 35707,
											"end": 35784,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 35759,
											"end": 35768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35754,
											"end": 35757,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 35750,
											"end": 35769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35744,
											"end": 35770,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 35735,
											"end": 35770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 35735,
											"end": 35770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35707,
											"end": 35784,
											"name": "tag",
											"source": 10,
											"value": "989"
										},
										{
											"begin": 35707,
											"end": 35784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35810,
											"end": 35877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "990"
										},
										{
											"begin": 35870,
											"end": 35876,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 35863,
											"end": 35868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35810,
											"end": 35877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 35810,
											"end": 35877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35810,
											"end": 35877,
											"name": "tag",
											"source": 10,
											"value": "990"
										},
										{
											"begin": 35810,
											"end": 35877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35804,
											"end": 35808,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 35797,
											"end": 35878,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 35666,
											"end": 35888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35001,
											"end": 35888,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "987"
										},
										{
											"begin": 35001,
											"end": 35888,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35031,
											"end": 35649,
											"name": "tag",
											"source": 10,
											"value": "988"
										},
										{
											"begin": 35031,
											"end": 35649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35083,
											"end": 35087,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 35079,
											"end": 35088,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 35071,
											"end": 35077,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 35067,
											"end": 35089,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 35117,
											"end": 35154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "991"
										},
										{
											"begin": 35149,
											"end": 35153,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 35117,
											"end": 35154,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 35117,
											"end": 35154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35117,
											"end": 35154,
											"name": "tag",
											"source": 10,
											"value": "991"
										},
										{
											"begin": 35117,
											"end": 35154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35176,
											"end": 35177,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 35190,
											"end": 35398,
											"name": "tag",
											"source": 10,
											"value": "992"
										},
										{
											"begin": 35190,
											"end": 35398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35204,
											"end": 35211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35201,
											"end": 35202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 35198,
											"end": 35212,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 35190,
											"end": 35398,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 35190,
											"end": 35398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "994"
										},
										{
											"begin": 35190,
											"end": 35398,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 35283,
											"end": 35292,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 35278,
											"end": 35281,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 35274,
											"end": 35293,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35268,
											"end": 35294,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 35260,
											"end": 35266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35253,
											"end": 35295,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 35334,
											"end": 35335,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 35326,
											"end": 35332,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35322,
											"end": 35336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35312,
											"end": 35336,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 35312,
											"end": 35336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35381,
											"end": 35383,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 35370,
											"end": 35379,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 35366,
											"end": 35384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35353,
											"end": 35384,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 35353,
											"end": 35384,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35227,
											"end": 35231,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 35224,
											"end": 35225,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 35220,
											"end": 35232,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35215,
											"end": 35232,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 35215,
											"end": 35232,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35190,
											"end": 35398,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "992"
										},
										{
											"begin": 35190,
											"end": 35398,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35190,
											"end": 35398,
											"name": "tag",
											"source": 10,
											"value": "994"
										},
										{
											"begin": 35190,
											"end": 35398,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35426,
											"end": 35432,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 35417,
											"end": 35424,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 35414,
											"end": 35433,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 35411,
											"end": 35590,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 35411,
											"end": 35590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "995"
										},
										{
											"begin": 35411,
											"end": 35590,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 35484,
											"end": 35493,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 35479,
											"end": 35482,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 35475,
											"end": 35494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35469,
											"end": 35495,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 35527,
											"end": 35575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "996"
										},
										{
											"begin": 35569,
											"end": 35573,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 35561,
											"end": 35567,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 35557,
											"end": 35574,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 35546,
											"end": 35555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35527,
											"end": 35575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 35527,
											"end": 35575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35527,
											"end": 35575,
											"name": "tag",
											"source": 10,
											"value": "996"
										},
										{
											"begin": 35527,
											"end": 35575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35519,
											"end": 35525,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 35512,
											"end": 35576,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 35434,
											"end": 35590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35411,
											"end": 35590,
											"name": "tag",
											"source": 10,
											"value": "995"
										},
										{
											"begin": 35411,
											"end": 35590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35636,
											"end": 35637,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 35632,
											"end": 35633,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 35624,
											"end": 35630,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 35620,
											"end": 35634,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 35616,
											"end": 35638,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 35610,
											"end": 35614,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 35603,
											"end": 35639,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 35038,
											"end": 35649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35038,
											"end": 35649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35038,
											"end": 35649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35001,
											"end": 35888,
											"name": "tag",
											"source": 10,
											"value": "987"
										},
										{
											"begin": 35001,
											"end": 35888,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35001,
											"end": 35888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34591,
											"end": 35894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34591,
											"end": 35894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34591,
											"end": 35894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34499,
											"end": 35894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34499,
											"end": 35894,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34499,
											"end": 35894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35900,
											"end": 36310,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 35900,
											"end": 36310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35940,
											"end": 35947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 35963,
											"end": 35983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "998"
										},
										{
											"begin": 35981,
											"end": 35982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 35963,
											"end": 35983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 35963,
											"end": 35983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35963,
											"end": 35983,
											"name": "tag",
											"source": 10,
											"value": "998"
										},
										{
											"begin": 35963,
											"end": 35983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35958,
											"end": 35983,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 35958,
											"end": 35983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35997,
											"end": 36017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "999"
										},
										{
											"begin": 36015,
											"end": 36016,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 35997,
											"end": 36017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 35997,
											"end": 36017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 35997,
											"end": 36017,
											"name": "tag",
											"source": 10,
											"value": "999"
										},
										{
											"begin": 35997,
											"end": 36017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35992,
											"end": 36017,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 35992,
											"end": 36017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36052,
											"end": 36053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36049,
											"end": 36050,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36045,
											"end": 36054,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 36074,
											"end": 36104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1000"
										},
										{
											"begin": 36092,
											"end": 36103,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 36074,
											"end": 36104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 36074,
											"end": 36104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36074,
											"end": 36104,
											"name": "tag",
											"source": 10,
											"value": "1000"
										},
										{
											"begin": 36074,
											"end": 36104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36063,
											"end": 36104,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 36063,
											"end": 36104,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36253,
											"end": 36254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36244,
											"end": 36251,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36240,
											"end": 36255,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 36237,
											"end": 36238,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 36234,
											"end": 36256,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 36214,
											"end": 36215,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 36207,
											"end": 36216,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 36187,
											"end": 36270,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 36164,
											"end": 36303,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1001"
										},
										{
											"begin": 36164,
											"end": 36303,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 36283,
											"end": 36301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1002"
										},
										{
											"begin": 36283,
											"end": 36301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 36283,
											"end": 36301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36283,
											"end": 36301,
											"name": "tag",
											"source": 10,
											"value": "1002"
										},
										{
											"begin": 36283,
											"end": 36301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36164,
											"end": 36303,
											"name": "tag",
											"source": 10,
											"value": "1001"
										},
										{
											"begin": 36164,
											"end": 36303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 35948,
											"end": 36310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35900,
											"end": 36310,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 35900,
											"end": 36310,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 35900,
											"end": 36310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35900,
											"end": 36310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 35900,
											"end": 36310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36316,
											"end": 36496,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 36316,
											"end": 36496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36364,
											"end": 36441,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36361,
											"end": 36362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 36354,
											"end": 36442,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 36461,
											"end": 36465,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 36458,
											"end": 36459,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 36451,
											"end": 36466,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 36485,
											"end": 36489,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 36482,
											"end": 36483,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 36475,
											"end": 36490,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 36502,
											"end": 36687,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 36502,
											"end": 36687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36542,
											"end": 36543,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 36559,
											"end": 36579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1005"
										},
										{
											"begin": 36577,
											"end": 36578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36559,
											"end": 36579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 36559,
											"end": 36579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36559,
											"end": 36579,
											"name": "tag",
											"source": 10,
											"value": "1005"
										},
										{
											"begin": 36559,
											"end": 36579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36554,
											"end": 36579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 36554,
											"end": 36579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36593,
											"end": 36613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1006"
										},
										{
											"begin": 36611,
											"end": 36612,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 36593,
											"end": 36613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 36593,
											"end": 36613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36593,
											"end": 36613,
											"name": "tag",
											"source": 10,
											"value": "1006"
										},
										{
											"begin": 36593,
											"end": 36613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36588,
											"end": 36613,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 36588,
											"end": 36613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36632,
											"end": 36633,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36622,
											"end": 36657,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1007"
										},
										{
											"begin": 36622,
											"end": 36657,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 36637,
											"end": 36655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1008"
										},
										{
											"begin": 36637,
											"end": 36655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 36637,
											"end": 36655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 36637,
											"end": 36655,
											"name": "tag",
											"source": 10,
											"value": "1008"
										},
										{
											"begin": 36637,
											"end": 36655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36622,
											"end": 36657,
											"name": "tag",
											"source": 10,
											"value": "1007"
										},
										{
											"begin": 36622,
											"end": 36657,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 36679,
											"end": 36680,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36676,
											"end": 36677,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 36672,
											"end": 36681,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 36667,
											"end": 36681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 36667,
											"end": 36681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36502,
											"end": 36687,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 36502,
											"end": 36687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 36502,
											"end": 36687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36502,
											"end": 36687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 36502,
											"end": 36687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"GIFT.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_TAX_PERCENTAGE()": "70d27fa0",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"beneficiary()": "38af3eed",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"initialize(string,string,address,address,address)": "db0ed6a0",
							"isExcludedFromInboundFees(address)": "851f39d4",
							"isExcludedFromOutboundFees(address)": "cc7134ba",
							"isLiquidityPool(address)": "e85455d7",
							"lastReserveCheck()": "24e8933d",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceAdminControl()": "c658a5e3",
							"renounceOwnership()": "715018a6",
							"reserveCheckPeriod()": "d048d988",
							"reserveConsumer()": "8850b9c2",
							"setBeneficiary(address)": "1c31f710",
							"setFeeExclusion(address,bool,bool)": "e1a8f3f4",
							"setLiquidityPool(address,bool)": "c29c669a",
							"setReserveCheckPeriod(uint256)": "a02fba1e",
							"setReserveConsumer(address)": "79e631f4",
							"setSupplyController(address)": "52875bc3",
							"setTaxParameters(uint256[5],uint256[5])": "53e4e3cb",
							"supplyController()": "e7ba1012",
							"symbol()": "95d89b41",
							"taxPercentages(uint256)": "110c621d",
							"taxTiers(uint256)": "a906c70e",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAdminControl(address)": "1a5e62fd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBeneficiary\",\"type\":\"address\"}],\"name\":\"BeneficiarySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExcludedOutbound\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isExcludedInbound\",\"type\":\"bool\"}],\"name\":\"FeeExclusionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPool\",\"type\":\"bool\"}],\"name\":\"LiquidityPoolSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"ReserveCheckPeriodSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newReserveConsumer\",\"type\":\"address\"}],\"name\":\"ReserveConsumerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSupplyController\",\"type\":\"address\"}],\"name\":\"SupplyControllerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[5]\",\"name\":\"tiers\",\"type\":\"uint256[5]\"},{\"indexed\":false,\"internalType\":\"uint256[5]\",\"name\":\"percentages\",\"type\":\"uint256[5]\"}],\"name\":\"TaxUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TAX_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_supplyController\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserveConsumer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromInboundFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromOutboundFees\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLiquidityPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastReserveCheck\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceAdminControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveCheckPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveConsumer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newBeneficiary\",\"type\":\"address\"}],\"name\":\"setBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isExcludedOutbound\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isExcludedInbound\",\"type\":\"bool\"}],\"name\":\"setFeeExclusion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isPool\",\"type\":\"bool\"}],\"name\":\"setLiquidityPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPeriod\",\"type\":\"uint256\"}],\"name\":\"setReserveCheckPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newReserveConsumer\",\"type\":\"address\"}],\"name\":\"setReserveConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSupplyController\",\"type\":\"address\"}],\"name\":\"setSupplyController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[5]\",\"name\":\"_tiers\",\"type\":\"uint256[5]\"},{\"internalType\":\"uint256[5]\",\"name\":\"_percentages\",\"type\":\"uint256[5]\"}],\"name\":\"setTaxParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"taxPercentages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"taxTiers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"GIFT.sol\":\"GIFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29bf2fa41a172086a665c9738377b93655aa4b1ffda9fe839c8bdf646f185040\",\"dweb:/ipfs/QmeB21qDuo8WPQSrqXJbQmWHKsdeocGNSUWLhCwniVejrt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xb1561a6950b1aaa504c8f81b7d46bccfa77ccd10de3eb865cf34b1acd5ad505e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a56cb91629dacd161be24908fbf94315f3f45dd6fee8dad82b27af853cbc4ee\",\"dweb:/ipfs/QmNfEzdf4NTpxyhzWKAmeDwwSpJ6ZjNizK3GXw3TEuTTgn\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"GIFT.sol\":{\"keccak256\":\"0x9a07c7b900f869897fd04ef7a4212c6bc2122c30ceb9274edfbe0f1ef931421c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4000a214d4f9907421bce3915e197f2e10c88ab6fe5ce49b6e02bfb8d1b4177b\",\"dweb:/ipfs/QmNP8zUESCqbYpCWiptW6hQ5CYkCC9yegZ2K6aySVSfLgu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 470,
								"contract": "GIFT.sol:GIFT",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 575,
								"contract": "GIFT.sol:GIFT",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1809,
								"contract": "GIFT.sol:GIFT",
								"label": "supplyController",
								"offset": 0,
								"slot": "50",
								"type": "t_address"
							},
							{
								"astId": 1811,
								"contract": "GIFT.sol:GIFT",
								"label": "beneficiary",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 1813,
								"contract": "GIFT.sol:GIFT",
								"label": "reserveConsumer",
								"offset": 0,
								"slot": "52",
								"type": "t_address"
							},
							{
								"astId": 1817,
								"contract": "GIFT.sol:GIFT",
								"label": "isExcludedFromOutboundFees",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1821,
								"contract": "GIFT.sol:GIFT",
								"label": "isExcludedFromInboundFees",
								"offset": 0,
								"slot": "54",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1825,
								"contract": "GIFT.sol:GIFT",
								"label": "isLiquidityPool",
								"offset": 0,
								"slot": "55",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1829,
								"contract": "GIFT.sol:GIFT",
								"label": "taxTiers",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)5_storage"
							},
							{
								"astId": 1833,
								"contract": "GIFT.sol:GIFT",
								"label": "taxPercentages",
								"offset": 0,
								"slot": "61",
								"type": "t_array(t_uint256)5_storage"
							},
							{
								"astId": 1838,
								"contract": "GIFT.sol:GIFT",
								"label": "lastReserveCheck",
								"offset": 0,
								"slot": "66",
								"type": "t_uint256"
							},
							{
								"astId": 1840,
								"contract": "GIFT.sol:GIFT",
								"label": "reserveCheckPeriod",
								"offset": 0,
								"slot": "67",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)5_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[5]",
								"numberOfBytes": "160"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1239
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1240,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1239,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1239,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1239,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1221,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1239
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							576
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 451,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 1240,
							"src": "130:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 453,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 449,
							"src": "172:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 452,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "180:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 455,
										"name": "Initializable",
										"nameLocations": [
											"718:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "718:13:2"
									},
									"id": 456,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:2"
								},
								{
									"baseName": {
										"id": 457,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1239,
										"src": "733:18:2"
									},
									"id": 458,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:2"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 454,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576,
								1239,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 463,
									"name": "Paused",
									"nameLocation": "842:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "849:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:2"
									},
									"src": "836:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 468,
									"name": "Unpaused",
									"nameLocation": "953:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "962:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:2"
									},
									"src": "947:32:2"
								},
								{
									"constant": false,
									"id": 470,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "985:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 469,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "1137:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 476,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "1147:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:2"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 473,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1120:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:2"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:2"
									},
									"scope": 576,
									"src": "1084:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "1250:32:2",
										"statements": [
											{
												"expression": {
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 485,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "1260:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:2"
											}
										]
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 482,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1233:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:2"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:2"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:2"
									},
									"scope": 576,
									"src": "1187:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "1493:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 493,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1503:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:2"
											},
											{
												"id": 496,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 498,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:2"
									},
									"src": "1468:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "1740:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 501,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "1750:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:2"
											},
											{
												"id": 504,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:2"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 506,
									"name": "whenPaused",
									"nameLocation": "1727:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:2"
									},
									"src": "1718:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 514,
										"nodeType": "Block",
										"src": "1932:31:2",
										"statements": [
											{
												"expression": {
													"id": 512,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 470,
													"src": "1949:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 513,
												"nodeType": "Return",
												"src": "1942:14:2"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 515,
												"src": "1926:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:2"
									},
									"scope": 576,
									"src": "1879:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2082:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 520,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "2101:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:2"
											}
										]
									},
									"documentation": {
										"id": 516,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:2"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:2"
									},
									"scope": 576,
									"src": "2031:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "2257:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 532,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "2275:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:2"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:2"
									},
									"scope": 576,
									"src": "2209:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "2499:66:2",
										"statements": [
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "2509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 549,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "2545:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 548,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "2538:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "EmitStatement",
												"src": "2533:25:2"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 541,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "2485:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:2"
									},
									"scope": 576,
									"src": "2450:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "2745:69:2",
										"statements": [
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 560,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "2755:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 565,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "2794:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 564,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "2785:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "EmitStatement",
												"src": "2780:27:2"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 558,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 557,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 506,
												"src": "2734:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:2"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:2"
									},
									"scope": 576,
									"src": "2697:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 575,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 576,
									"src": "3079:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 572,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 574,
										"length": {
											"hexValue": "3439",
											"id": 573,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 577,
							"src": "677:2430:2",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219,
								463,
								468
							]
						}
					],
					"src": "105:3003:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1239
						],
						"ERC20Upgradeable": [
							1193
						],
						"IERC20": [
							1766
						],
						"IERC20Errors": [
							1593
						],
						"IERC20Metadata": [
							1792
						],
						"Initializable": [
							448
						]
					},
					"id": 1194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 1767,
							"src": "131:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 579,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1766,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 1793,
							"src": "202:97:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 581,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1792,
										"src": "210:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 1240,
							"src": "300:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 583,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1239,
										"src": "308:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 1689,
							"src": "371:83:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 585,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1593,
										"src": "379:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1194,
							"sourceUnit": 449,
							"src": "455:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 587,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 590,
										"name": "Initializable",
										"nameLocations": [
											"1614:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1614:13:3"
									},
									"id": 591,
									"nodeType": "InheritanceSpecifier",
									"src": "1614:13:3"
								},
								{
									"baseName": {
										"id": 592,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1629:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1239,
										"src": "1629:18:3"
									},
									"id": 593,
									"nodeType": "InheritanceSpecifier",
									"src": "1629:18:3"
								},
								{
									"baseName": {
										"id": 594,
										"name": "IERC20",
										"nameLocations": [
											"1649:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1766,
										"src": "1649:6:3"
									},
									"id": 595,
									"nodeType": "InheritanceSpecifier",
									"src": "1649:6:3"
								},
								{
									"baseName": {
										"id": 596,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1657:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1792,
										"src": "1657:14:3"
									},
									"id": 597,
									"nodeType": "InheritanceSpecifier",
									"src": "1657:14:3"
								},
								{
									"baseName": {
										"id": 598,
										"name": "IERC20Errors",
										"nameLocations": [
											"1673:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1593,
										"src": "1673:12:3"
									},
									"id": 599,
									"nodeType": "InheritanceSpecifier",
									"src": "1673:12:3"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "523:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1193,
							"linearizedBaseContracts": [
								1193,
								1593,
								1792,
								1766,
								1239,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1594:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "1692:63:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 617,
									"members": [
										{
											"constant": false,
											"id": 604,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1826:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 617,
											"src": "1790:45:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 603,
												"keyName": "account",
												"keyNameLocation": "1806:7:3",
												"keyType": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1790:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1817:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 610,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1910:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 617,
											"src": "1846:75:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 609,
												"keyName": "account",
												"keyNameLocation": "1862:7:3",
												"keyType": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1846:63:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 608,
													"keyName": "spender",
													"keyNameLocation": "1889:7:3",
													"keyType": {
														"id": 606,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1881:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1873:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 607,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1900:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 612,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1940:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 617,
											"src": "1932:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 611,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1932:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 614,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1970:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 617,
											"src": "1963:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 613,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1963:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 616,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1992:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 617,
											"src": "1985:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 615,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1985:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1767:12:3",
									"nodeType": "StructDefinition",
									"scope": 1193,
									"src": "1760:246:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 620,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "2146:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1193,
									"src": "2121:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 618,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2121:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 619,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2169:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "2316:79:3",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2335:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2349:30:3",
															"value": {
																"name": "ERC20StorageLocation",
																"nodeType": "YulIdentifier",
																"src": "2359:20:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2349:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 624,
														"isOffset": false,
														"isSlot": true,
														"src": "2349:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 620,
														"isOffset": false,
														"isSlot": false,
														"src": "2359:20:3",
														"valueSize": 1
													}
												],
												"id": 626,
												"nodeType": "InlineAssembly",
												"src": "2326:63:3"
											}
										]
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "2251:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2267:2:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2313:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "2292:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 623,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 622,
														"name": "ERC20Storage",
														"nameLocations": [
															"2292:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 617,
														"src": "2292:12:3"
													},
													"referencedDeclaration": 617,
													"src": "2292:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2291:24:3"
									},
									"scope": 1193,
									"src": "2242:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "2669:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 639,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "2702:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 640,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "2709:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 638,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2679:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "2679:38:3"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "2401:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 636,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 635,
												"name": "onlyInitializing",
												"nameLocations": [
													"2652:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2652:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2652:16:3"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2586:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2613:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2599:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 630,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2599:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2634:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "2620:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 632,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2620:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2598:44:3"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2669:0:3"
									},
									"scope": 1193,
									"src": "2577:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "2832:114:3",
										"statements": [
											{
												"assignments": [
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2863:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 671,
														"src": "2842:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 654,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 653,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2842:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 617,
																"src": "2842:12:3"
															},
															"referencedDeclaration": 617,
															"src": "2842:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 656,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2867:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$617_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2842:43:3"
											},
											{
												"expression": {
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 659,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "2895:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 661,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2897:5:3",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 614,
														"src": "2895:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 662,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "2905:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2895:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "2895:15:3"
											},
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 665,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "2920:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2922:7:3",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 616,
														"src": "2920:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 668,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "2932:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2920:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "2920:19:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 651,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 650,
												"name": "onlyInitializing",
												"nameLocations": [
													"2815:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2815:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2815:16:3"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2739:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "2762:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2762:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2797:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "2783:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2783:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2761:44:3"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2832:0:3"
									},
									"scope": 1193,
									"src": "2730:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1779
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3071:84:3",
										"statements": [
											{
												"assignments": [
													680
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3102:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 687,
														"src": "3081:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 679,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 678,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3081:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 617,
																"src": "3081:12:3"
															},
															"referencedDeclaration": 617,
															"src": "3081:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 681,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3106:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$617_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3106:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3081:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 684,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "3141:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3143:5:3",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 614,
													"src": "3141:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 677,
												"id": 686,
												"nodeType": "Return",
												"src": "3134:14:3"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "2952:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3020:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3024:2:3"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3056:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 675,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3056:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3055:15:3"
									},
									"scope": 1193,
									"src": "3011:144:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1785
									],
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "3330:86:3",
										"statements": [
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3361:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "3340:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 695,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 694,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3340:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 617,
																"src": "3340:12:3"
															},
															"referencedDeclaration": 617,
															"src": "3340:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 699,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 697,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3365:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$617_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3365:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3340:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 700,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "3400:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3402:7:3",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 616,
													"src": "3400:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 693,
												"id": 702,
												"nodeType": "Return",
												"src": "3393:16:3"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3161:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3277:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3283:2:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "3315:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 691,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3315:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3314:15:3"
									},
									"scope": 1193,
									"src": "3268:148:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1791
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "4105:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4122:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 709,
												"id": 711,
												"nodeType": "Return",
												"src": "4115:9:3"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "3422:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4058:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4066:2:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4098:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 707,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4098:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4097:7:3"
									},
									"scope": 1193,
									"src": "4049:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1715
									],
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "4252:91:3",
										"statements": [
											{
												"assignments": [
													721
												],
												"declarations": [
													{
														"constant": false,
														"id": 721,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4283:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 728,
														"src": "4262:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 720,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 719,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4262:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 617,
																"src": "4262:12:3"
															},
															"referencedDeclaration": 617,
															"src": "4262:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 722,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "4287:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$617_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4287:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4262:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 725,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "4322:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4324:12:3",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 612,
													"src": "4322:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 718,
												"id": 727,
												"nodeType": "Return",
												"src": "4315:21:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "4137:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4200:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4211:2:3"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4243:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4243:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4242:9:3"
									},
									"scope": 1193,
									"src": "4191:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1723
									],
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "4475:97:3",
										"statements": [
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4506:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "4485:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 738,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 737,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4485:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 617,
																"src": "4485:12:3"
															},
															"referencedDeclaration": 617,
															"src": "4485:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 742,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 740,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "4510:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$617_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4510:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4485:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 743,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "4545:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4547:9:3",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 604,
														"src": "4545:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 746,
													"indexExpression": {
														"id": 745,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "4557:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4545:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 736,
												"id": 747,
												"nodeType": "Return",
												"src": "4538:27:3"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "4349:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4410:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4428:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "4420:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:17:3"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "4466:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4465:9:3"
									},
									"scope": 1193,
									"src": "4401:171:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1733
									],
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "4842:103:3",
										"statements": [
											{
												"assignments": [
													760
												],
												"declarations": [
													{
														"constant": false,
														"id": 760,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4860:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 772,
														"src": "4852:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 759,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4852:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 761,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "4868:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4868:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4852:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 765,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "4900:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 766,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "4907:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "4911:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 764,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "4890:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4890:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "4890:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4934:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 758,
												"id": 771,
												"nodeType": "Return",
												"src": "4927:11:3"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "4578:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4776:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4793:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "4785:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4805:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "4797:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4797:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4784:27:3"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "4836:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 756,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4836:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4835:6:3"
									},
									"scope": 1193,
									"src": "4767:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1743
									],
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "5092:106:3",
										"statements": [
											{
												"assignments": [
													785
												],
												"declarations": [
													{
														"constant": false,
														"id": 785,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "5123:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "5102:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 784,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 783,
																"name": "ERC20Storage",
																"nameLocations": [
																	"5102:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 617,
																"src": "5102:12:3"
															},
															"referencedDeclaration": 617,
															"src": "5102:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 788,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 786,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "5127:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$617_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5127:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5102:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 789,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "5162:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 790,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5164:11:3",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 610,
															"src": "5162:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 792,
														"indexExpression": {
															"id": 791,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "5176:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5162:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 794,
													"indexExpression": {
														"id": 793,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "5183:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5162:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 782,
												"id": 795,
												"nodeType": "Return",
												"src": "5155:36:3"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "4951:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5012:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "5022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5045:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "5037:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5021:32:3"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "5083:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5083:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5082:9:3"
									},
									"scope": 1193,
									"src": "5003:195:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1753
									],
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "5584:107:3",
										"statements": [
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5602:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "5594:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 807,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5594:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 809,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "5610:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5610:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5594:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5641:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "5648:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 815,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "5657:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 812,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1076,
															1144
														],
														"referencedDeclaration": 1076,
														"src": "5632:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5632:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "5632:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5680:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 806,
												"id": 819,
												"nodeType": "Return",
												"src": "5673:11:3"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "5204:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5514:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5530:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "5522:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5522:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "5539:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5521:32:3"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "5578:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 804,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5578:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5577:6:3"
									},
									"scope": 1193,
									"src": "5505:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1765
									],
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "6344:151:3",
										"statements": [
											{
												"assignments": [
													834
												],
												"declarations": [
													{
														"constant": false,
														"id": 834,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6362:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 852,
														"src": "6354:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 833,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6354:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 837,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 835,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1221,
														"src": "6372:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6372:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6354:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 839,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "6410:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "6416:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "6425:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "6394:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6394:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "6394:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 845,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "6451:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "6457:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "6461:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "6441:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6441:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "6441:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6484:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 832,
												"id": 851,
												"nodeType": "Return",
												"src": "6477:11:3"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "5697:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6260:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6281:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6273:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6273:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6295:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6287:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6287:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6307:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6299:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6299:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:41:3"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "6338:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 830,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6338:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:6:3"
									},
									"scope": 1193,
									"src": "6251:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "6937:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "6951:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6967:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6959:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 864,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6959:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6959:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6951:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 877,
												"nodeType": "IfStatement",
												"src": "6947:86:3",
												"trueBody": {
													"id": 876,
													"nodeType": "Block",
													"src": "6971:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7019:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7011:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 870,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7011:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7011:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 869,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "6992:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6992:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 875,
															"nodeType": "RevertStatement",
															"src": "6985:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "7046:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7060:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7052:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7052:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7052:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7046:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "7042:86:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "7064:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7114:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7106:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7106:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7106:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "7085:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7085:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "7078:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "7145:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "7151:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "7155:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "7137:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7137:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 898,
												"nodeType": "ExpressionStatement",
												"src": "7137:24:3"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "6501:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6877:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6895:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "6887:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6909:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "6901:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6901:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6921:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "6913:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6913:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6886:41:3"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6937:0:3"
									},
									"scope": 1193,
									"src": "6868:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "7558:1095:3",
										"statements": [
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7589:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 991,
														"src": "7568:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 911,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 910,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7568:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 617,
																"src": "7568:12:3"
															},
															"referencedDeclaration": 617,
															"src": "7568:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 913,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "7593:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$617_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7593:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7568:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 916,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "7625:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7641:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7633:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 917,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7633:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7633:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7625:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "7801:366:3",
													"statements": [
														{
															"assignments": [
																930
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 930,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7823:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 958,
																	"src": "7815:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 929,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7815:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 935,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 931,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "7837:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7839:9:3",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 604,
																	"src": "7837:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 934,
																"indexExpression": {
																	"id": 933,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "7849:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7837:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7815:39:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 936,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "7872:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 937,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "7886:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7872:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 946,
															"nodeType": "IfStatement",
															"src": "7868:115:3",
															"trueBody": {
																"id": 945,
																"nodeType": "Block",
																"src": "7893:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 940,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 903,
																					"src": "7943:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 941,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "7949:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 942,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 907,
																					"src": "7962:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 939,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1563,
																				"src": "7918:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7918:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 944,
																		"nodeType": "RevertStatement",
																		"src": "7911:57:3"
																	}
																]
															}
														},
														{
															"id": 957,
															"nodeType": "UncheckedBlock",
															"src": "7996:161:3",
															"statements": [
																{
																	"expression": {
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 947,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 912,
																					"src": "8103:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 950,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8105:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 604,
																				"src": "8103:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 951,
																			"indexExpression": {
																				"id": 949,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 903,
																				"src": "8115:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8103:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 952,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 930,
																				"src": "8123:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 953,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "8137:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8123:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8103:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 956,
																	"nodeType": "ExpressionStatement",
																	"src": "8103:39:3"
																}
															]
														}
													]
												},
												"id": 959,
												"nodeType": "IfStatement",
												"src": "7621:546:3",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "7645:150:3",
													"statements": [
														{
															"expression": {
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 922,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "7761:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7763:12:3",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 612,
																	"src": "7761:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 925,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "7779:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7761:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 927,
															"nodeType": "ExpressionStatement",
															"src": "7761:23:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8181:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8195:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8187:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 961,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8187:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8187:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8181:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "8398:208:3",
													"statements": [
														{
															"id": 982,
															"nodeType": "UncheckedBlock",
															"src": "8412:184:3",
															"statements": [
																{
																	"expression": {
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 974,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 912,
																					"src": "8557:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 977,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8559:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 604,
																				"src": "8557:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 978,
																			"indexExpression": {
																				"id": 976,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "8569:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8557:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 979,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "8576:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8557:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 981,
																	"nodeType": "ExpressionStatement",
																	"src": "8557:24:3"
																}
															]
														}
													]
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "8177:429:3",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "8199:193:3",
													"statements": [
														{
															"id": 972,
															"nodeType": "UncheckedBlock",
															"src": "8213:169:3",
															"statements": [
																{
																	"expression": {
																		"id": 970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 966,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 912,
																				"src": "8344:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 968,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8346:12:3",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 612,
																			"src": "8344:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 969,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 907,
																			"src": "8362:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8344:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 971,
																	"nodeType": "ExpressionStatement",
																	"src": "8344:23:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 986,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "8630:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "8636:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 988,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "8640:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 985,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "8621:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8621:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "EmitStatement",
												"src": "8616:30:3"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "7174:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7492:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7508:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "7500:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7500:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7522:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "7514:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7514:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7534:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "7526:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7499:41:3"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7558:0:3"
									},
									"scope": 1193,
									"src": "7483:1170:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "9052:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1000,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "9066:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9085:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9077:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1001,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9077:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9077:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9066:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "IfStatement",
												"src": "9062:91:3",
												"trueBody": {
													"id": 1013,
													"nodeType": "Block",
													"src": "9089:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1009,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9139:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9131:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1007,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9131:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9131:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1006,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "9110:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9110:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1012,
															"nodeType": "RevertStatement",
															"src": "9103:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9178:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9170:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1016,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9170:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9170:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "9182:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1021,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "9191:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1015,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "9162:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9162:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "9162:35:3"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "8659:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9005:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "9011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9036:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "9028:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9028:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9010:32:3"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9052:0:3"
									},
									"scope": 1193,
									"src": "8996:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "9578:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1033,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "9592:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9611:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9603:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1034,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9603:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9603:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9592:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1047,
												"nodeType": "IfStatement",
												"src": "9588:89:3",
												"trueBody": {
													"id": 1046,
													"nodeType": "Block",
													"src": "9615:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9663:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9655:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1040,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9655:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9655:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1039,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1568,
																	"src": "9636:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9636:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1045,
															"nodeType": "RevertStatement",
															"src": "9629:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "9694:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9711:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9703:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1050,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9703:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9703:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "9715:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "9686:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9686:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "9686:35:3"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "9210:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9531:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9545:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "9537:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9537:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9562:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "9554:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9554:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9536:32:3"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9578:0:3"
									},
									"scope": 1193,
									"src": "9522:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "10338:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1069,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "10357:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1070,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "10364:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "10373:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10380:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1068,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1076,
															1144
														],
														"referencedDeclaration": 1144,
														"src": "10348:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10348:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "10348:37:3"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "9734:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10273:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10290:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "10282:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10282:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10305:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "10297:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10297:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "10314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10281:47:3"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:3"
									},
									"scope": 1193,
									"src": "10264:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "11322:389:3",
										"statements": [
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11353:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "11332:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1089,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1088,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11332:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 617,
																"src": "11332:12:3"
															},
															"referencedDeclaration": 617,
															"src": "11332:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1091,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "11357:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$617_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11357:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11332:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "11389:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11406:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11398:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1095,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11398:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11398:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11389:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "11385:89:3",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "11410:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11460:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11452:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1101,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11452:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11452:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1100,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1587,
																	"src": "11431:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11431:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "11424:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1109,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "11487:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11506:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11498:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1110,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11498:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11498:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11487:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "IfStatement",
												"src": "11483:90:3",
												"trueBody": {
													"id": 1122,
													"nodeType": "Block",
													"src": "11510:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11559:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11551:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1116,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11551:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11551:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1115,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "11531:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11531:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1121,
															"nodeType": "RevertStatement",
															"src": "11524:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1124,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "11582:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$617_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11584:11:3",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 610,
																"src": "11582:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1129,
															"indexExpression": {
																"id": 1126,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "11596:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11582:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1130,
														"indexExpression": {
															"id": 1127,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "11603:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11582:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1131,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "11614:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11582:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "11582:37:3"
											},
											{
												"condition": {
													"id": 1134,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1085,
													"src": "11633:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "11629:76:3",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "11644:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1136,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1079,
																		"src": "11672:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "11679:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1138,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "11688:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1135,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1709,
																	"src": "11663:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11663:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1140,
															"nodeType": "EmitStatement",
															"src": "11658:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "10398:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11233:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11250:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "11242:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11242:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11265:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "11257:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11257:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11282:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "11274:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11294:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "11289:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1084,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11289:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11241:63:3"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11322:0:3"
									},
									"scope": 1193,
									"src": "11224:487:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "12082:388:3",
										"statements": [
											{
												"assignments": [
													1155
												],
												"declarations": [
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12100:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "12092:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1154,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12092:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"arguments": [
														{
															"id": 1157,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "12129:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "12136:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1156,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "12119:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12119:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12092:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1161,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "12158:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12183:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1163,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12183:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1162,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12178:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12178:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12192:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12178:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12158:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "12154:310:3",
												"trueBody": {
													"id": 1189,
													"nodeType": "Block",
													"src": "12197:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1168,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "12215:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1169,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "12234:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12215:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1178,
															"nodeType": "IfStatement",
															"src": "12211:130:3",
															"trueBody": {
																"id": 1177,
																"nodeType": "Block",
																"src": "12241:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1172,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "12293:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1173,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "12302:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1174,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1151,
																					"src": "12320:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1171,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1582,
																				"src": "12266:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12266:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1176,
																		"nodeType": "RevertStatement",
																		"src": "12259:67:3"
																	}
																]
															}
														},
														{
															"id": 1188,
															"nodeType": "UncheckedBlock",
															"src": "12354:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1180,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "12391:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1181,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1149,
																				"src": "12398:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1182,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "12407:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1183,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1151,
																					"src": "12426:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12407:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12433:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1179,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1076,
																				1144
																			],
																			"referencedDeclaration": 1144,
																			"src": "12382:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12382:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1187,
																	"nodeType": "ExpressionStatement",
																	"src": "12382:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "11717:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12002:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12026:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "12018:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12018:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12041:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "12033:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12058:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "12050:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12017:47:3"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12082:0:3"
									},
									"scope": 1193,
									"src": "11993:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1194,
							"src": "1576:10896:3",
							"usedErrors": [
								211,
								214,
								1563,
								1568,
								1573,
								1582,
								1587,
								1592
							],
							"usedEvents": [
								219,
								1700,
								1709
							]
						}
					],
					"src": "105:12368:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1239
						],
						"Initializable": [
							448
						]
					},
					"id": 1240,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1240,
							"sourceUnit": 449,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1196,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1199,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:4"
									},
									"id": 1200,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1198,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1239,
							"linearizedBaseContracts": [
								1239,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1202,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 1239,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1208,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 1239,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1217,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1216,
												"id": 1219,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 1239,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1229,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1226,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1225,
												"id": 1228,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 1230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1230,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1223,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 1239,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1234,
												"id": 1236,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 1239,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1240,
							"src": "688:505:4",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
					"exportedSymbols": {
						"SafeMathUpgradeable": [
							1551
						]
					},
					"id": 1552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1241,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1242,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1551,
							"linearizedBaseContracts": [
								1551
							],
							"name": "SafeMathUpgradeable",
							"nameLocation": "490:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "728:140:5",
										"statements": [
											{
												"id": 1272,
												"nodeType": "UncheckedBlock",
												"src": "738:124:5",
												"statements": [
													{
														"assignments": [
															1255
														],
														"declarations": [
															{
																"constant": false,
																"id": 1255,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "770:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 1272,
																"src": "762:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1254,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "762:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1259,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1256,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "774:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1257,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "778:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "774:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "762:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1260,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "797:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1261,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "801:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "797:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1267,
														"nodeType": "IfStatement",
														"src": "793:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "812:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "819:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1265,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "811:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1253,
															"id": 1266,
															"nodeType": "Return",
															"src": "804:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "843:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1269,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1255,
																	"src": "849:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1270,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "842:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1253,
														"id": 1271,
														"nodeType": "Return",
														"src": "835:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "516:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "661:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "687:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "679:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "679:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "667:22:5"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "713:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1249,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "713:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "719:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:15:5"
									},
									"scope": 1551,
									"src": "652:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "1089:113:5",
										"statements": [
											{
												"id": 1300,
												"nodeType": "UncheckedBlock",
												"src": "1099:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "1127:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1277,
																"src": "1131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1127:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1293,
														"nodeType": "IfStatement",
														"src": "1123:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1142:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1149:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1141:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1285,
															"id": 1292,
															"nodeType": "Return",
															"src": "1134:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1173:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1295,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "1179:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1296,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "1183:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1179:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1298,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1172:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1285,
														"id": 1299,
														"nodeType": "Return",
														"src": "1165:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "874:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1022:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1048:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "1040:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:22:5"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "1074:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1074:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "1080:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:15:5"
									},
									"scope": 1551,
									"src": "1013:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "1426:417:5",
										"statements": [
											{
												"id": 1342,
												"nodeType": "UncheckedBlock",
												"src": "1436:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "1694:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1699:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1694:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1321,
														"nodeType": "IfStatement",
														"src": "1690:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1710:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1716:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1319,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1709:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1313,
															"id": 1320,
															"nodeType": "Return",
															"src": "1702:16:5"
														}
													},
													{
														"assignments": [
															1323
														],
														"declarations": [
															{
																"constant": false,
																"id": 1323,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1740:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 1342,
																"src": "1732:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1322,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1732:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1327,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1324,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1305,
																"src": "1744:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1325,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "1748:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1744:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1732:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1328,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "1767:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1329,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1305,
																	"src": "1771:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1767:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1331,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "1776:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1767:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1337,
														"nodeType": "IfStatement",
														"src": "1763:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1787:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1794:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1786:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1313,
															"id": 1336,
															"nodeType": "Return",
															"src": "1779:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1818:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1339,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "1824:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1340,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1817:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1313,
														"id": 1341,
														"nodeType": "Return",
														"src": "1810:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "1208:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1359:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1385:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1377:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1377:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:22:5"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1411:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1411:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "1417:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1410:15:5"
									},
									"scope": 1551,
									"src": "1350:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "2068:114:5",
										"statements": [
											{
												"id": 1370,
												"nodeType": "UncheckedBlock",
												"src": "2078:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1356,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "2106:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2111:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2106:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1363,
														"nodeType": "IfStatement",
														"src": "2102:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2122:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2129:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2121:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1355,
															"id": 1362,
															"nodeType": "Return",
															"src": "2114:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2153:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1365,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "2159:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1366,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "2163:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2159:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1368,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2152:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1355,
														"id": 1369,
														"nodeType": "Return",
														"src": "2145:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2001:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2027:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2019:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:5"
									},
									"returnParameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2053:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2059:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:5"
									},
									"scope": 1551,
									"src": "1992:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "2417:114:5",
										"statements": [
											{
												"id": 1398,
												"nodeType": "UncheckedBlock",
												"src": "2427:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1384,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1377,
																"src": "2455:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2460:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2455:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1391,
														"nodeType": "IfStatement",
														"src": "2451:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2471:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2478:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1389,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2470:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1383,
															"id": 1390,
															"nodeType": "Return",
															"src": "2463:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2502:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1393,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "2508:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1394,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1377,
																		"src": "2512:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2508:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1396,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2501:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1383,
														"id": 1397,
														"nodeType": "Return",
														"src": "2494:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "2188:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2350:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2376:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2368:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2356:22:5"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2402:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2402:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "2408:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:15:5"
									},
									"scope": 1551,
									"src": "2341:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "2833:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1410,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "2850:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1411,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "2854:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2850:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1409,
												"id": 1413,
												"nodeType": "Return",
												"src": "2843:12:5"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "2537:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2775:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2798:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2790:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2778:22:5"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1415,
												"src": "2824:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:9:5"
									},
									"scope": 1551,
									"src": "2766:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "3200:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1425,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1418,
														"src": "3217:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1426,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "3221:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3217:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1424,
												"id": 1428,
												"nodeType": "Return",
												"src": "3210:12:5"
											}
										]
									},
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "2868:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3142:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3165:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "3157:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3145:22:5"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "3191:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3190:9:5"
									},
									"scope": 1551,
									"src": "3133:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "3543:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1440,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "3560:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1441,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "3564:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3560:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1439,
												"id": 1443,
												"nodeType": "Return",
												"src": "3553:12:5"
											}
										]
									},
									"documentation": {
										"id": 1431,
										"nodeType": "StructuredDocumentation",
										"src": "3235:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3485:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3508:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3500:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3500:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:22:5"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3534:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3534:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3533:9:5"
									},
									"scope": 1551,
									"src": "3476:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "3928:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1455,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "3945:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1456,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "3949:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3945:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1454,
												"id": 1458,
												"nodeType": "Return",
												"src": "3938:12:5"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "3578:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3870:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3893:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3885:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3873:22:5"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "3919:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3919:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3918:9:5"
									},
									"scope": 1551,
									"src": "3861:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "4477:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1470,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "4494:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1471,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "4498:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4494:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1469,
												"id": 1473,
												"nodeType": "Return",
												"src": "4487:12:5"
											}
										]
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "3963:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4419:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4442:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "4434:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4434:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4422:22:5"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "4468:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4467:9:5"
									},
									"scope": 1551,
									"src": "4410:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "5065:106:5",
										"statements": [
											{
												"id": 1498,
												"nodeType": "UncheckedBlock",
												"src": "5075:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1488,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "5107:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1489,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "5112:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5107:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1491,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "5115:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1487,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5099:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5099:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1493,
														"nodeType": "ExpressionStatement",
														"src": "5099:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1494,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "5149:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1495,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "5153:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5149:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1486,
														"id": 1497,
														"nodeType": "Return",
														"src": "5142:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "4512:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4979:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4991:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "4983:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5002:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "4994:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4994:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "5005:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1481,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4982:50:5"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "5056:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5055:9:5"
									},
									"scope": 1551,
									"src": "4970:201:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "5750:105:5",
										"statements": [
											{
												"id": 1523,
												"nodeType": "UncheckedBlock",
												"src": "5760:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1513,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1505,
																		"src": "5792:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5796:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5792:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1516,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1507,
																	"src": "5799:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1512,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5784:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5784:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1518,
														"nodeType": "ExpressionStatement",
														"src": "5784:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1519,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "5833:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1520,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1505,
																"src": "5837:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5833:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1511,
														"id": 1522,
														"nodeType": "Return",
														"src": "5826:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "5177:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5664:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "5668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5687:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "5679:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5679:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5704:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "5690:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1506,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5690:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5667:50:5"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "5741:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5741:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:9:5"
									},
									"scope": 1551,
									"src": "5655:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "6596:105:5",
										"statements": [
											{
												"id": 1548,
												"nodeType": "UncheckedBlock",
												"src": "6606:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1538,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1530,
																		"src": "6638:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6642:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6638:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1541,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "6645:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1537,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6630:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6630:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1543,
														"nodeType": "ExpressionStatement",
														"src": "6630:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1544,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "6679:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1545,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "6683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6679:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1536,
														"id": 1547,
														"nodeType": "Return",
														"src": "6672:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "5861:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6510:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6522:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "6514:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6533:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "6525:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6525:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6550:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "6536:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1531,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6536:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6513:50:5"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "6587:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6587:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6586:9:5"
									},
									"scope": 1551,
									"src": "6501:200:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1552,
							"src": "482:6221:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6597:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1688
						],
						"IERC20Errors": [
							1593
						],
						"IERC721Errors": [
							1641
						]
					},
					"id": 1689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1554,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:6",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 1593,
							"linearizedBaseContracts": [
								1593
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1555,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1563,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "668:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "685:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:6"
									},
									"src": "621:80:6"
								},
								{
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1568,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "889:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:6"
									},
									"src": "864:41:6"
								},
								{
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1573,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "1102:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:6"
									},
									"src": "1075:45:6"
								},
								{
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:6",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1582,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "1509:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "1526:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1582,
												"src": "1545:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:6"
									},
									"src": "1476:85:6"
								},
								{
									"documentation": {
										"id": 1583,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1587,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "1773:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:6"
									},
									"src": "1746:45:6"
								},
								{
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:6",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1592,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2023:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:6"
									},
									"src": "1997:43:6"
								}
							],
							"scope": 1689,
							"src": "278:1764:6",
							"usedErrors": [
								1563,
								1568,
								1573,
								1582,
								1587,
								1592
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1594,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:6",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 1641,
							"linearizedBaseContracts": [
								1641
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:6",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1599,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "2465:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:6"
									},
									"src": "2440:40:6"
								},
								{
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:6",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1604,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "2652:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:6"
									},
									"src": "2623:46:6"
								},
								{
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:6",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1613,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "2996:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3012:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "3029:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:6"
									},
									"src": "2969:75:6"
								},
								{
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1618,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "3233:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:6"
									},
									"src": "3207:42:6"
								},
								{
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1623,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "3447:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:6"
									},
									"src": "3419:46:6"
								},
								{
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1630,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3756:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "3774:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:6"
									},
									"src": "3723:68:6"
								},
								{
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1635,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "4004:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:6"
									},
									"src": "3976:46:6"
								},
								{
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1640,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "4258:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:6"
									},
									"src": "4230:46:6"
								}
							],
							"scope": 1689,
							"src": "2186:2092:6",
							"usedErrors": [
								1599,
								1604,
								1613,
								1618,
								1623,
								1630,
								1635,
								1640
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1642,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:6",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1688,
							"linearizedBaseContracts": [
								1688
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1643,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:6",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1653,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4870:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4887:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "4903:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:6"
									},
									"src": "4821:99:6"
								},
								{
									"documentation": {
										"id": 1654,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:6",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1658,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "5110:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:6"
									},
									"src": "5083:43:6"
								},
								{
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:6",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1663,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "5325:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:6"
									},
									"src": "5296:47:6"
								},
								{
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:6",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1670,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "5645:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "5663:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:6"
									},
									"src": "5610:68:6"
								},
								{
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:6",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1675,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5892:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:6"
									},
									"src": "5863:47:6"
								},
								{
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:6",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1680,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "6147:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:6"
									},
									"src": "6118:47:6"
								},
								{
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:6",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1687,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "6488:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "6507:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:6"
									},
									"src": "6456:73:6"
								}
							],
							"scope": 1689,
							"src": "4424:2107:6",
							"usedErrors": [
								1653,
								1658,
								1663,
								1670,
								1675,
								1680,
								1687
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1766
						]
					},
					"id": 1767,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1691,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:7",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1766,
							"linearizedBaseContracts": [
								1766
							],
							"name": "IERC20",
							"nameLocation": "213:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1700,
									"name": "Transfer",
									"nameLocation": "395:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "404:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "426:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "446:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:7"
									},
									"src": "389:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1709,
									"name": "Approval",
									"nameLocation": "626:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "635:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "658:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "683:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:7"
									},
									"src": "620:78:7"
								},
								{
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1715,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:7"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "820:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:7"
									},
									"scope": 1766,
									"src": "774:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1716,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "930:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:7"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "970:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:7"
									},
									"scope": 1766,
									"src": "911:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1221:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1233:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:7"
									},
									"returnParameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "1266:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:7"
									},
									"scope": 1766,
									"src": "1203:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "1566:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "1581:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:7"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1743,
												"src": "1621:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:7"
									},
									"scope": 1766,
									"src": "1547:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2325:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:7"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 1766,
									"src": "2308:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "2711:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "2725:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "2737:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:7"
									},
									"returnParameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1765,
												"src": "2770:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:7"
									},
									"scope": 1766,
									"src": "2689:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1767,
							"src": "203:2575:7",
							"usedErrors": [],
							"usedEvents": [
								1700,
								1709
							]
						}
					],
					"src": "106:2673:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1766
						],
						"IERC20Metadata": [
							1792
						]
					},
					"id": 1793,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1768,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1793,
							"sourceUnit": 1767,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1769,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1766,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1772,
										"name": "IERC20",
										"nameLocations": [
											"305:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1766,
										"src": "305:6:8"
									},
									"id": 1773,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1771,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:8",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1792,
							"linearizedBaseContracts": [
								1792,
								1766
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:8"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "416:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:8"
									},
									"scope": 1792,
									"src": "377:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1785,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:8"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "539:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1782,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:8"
									},
									"scope": 1792,
									"src": "498:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1791,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:8"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "673:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1788,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:8"
									},
									"scope": 1792,
									"src": "630:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1793,
							"src": "277:405:8",
							"usedErrors": [],
							"usedEvents": [
								1700,
								1709
							]
						}
					],
					"src": "125:558:8"
				},
				"id": 8
			},
			"GIFT.sol": {
				"ast": {
					"absolutePath": "GIFT.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1239
						],
						"ERC20Upgradeable": [
							1193
						],
						"GIFT": [
							2526
						],
						"IERC20": [
							1766
						],
						"IERC20Errors": [
							1593
						],
						"IERC20Metadata": [
							1792
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							576
						],
						"SafeMathUpgradeable": [
							1551
						]
					},
					"id": 2527,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1794,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 1795,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2527,
							"sourceUnit": 1194,
							"src": "61:78:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1796,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2527,
							"sourceUnit": 195,
							"src": "141:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 1797,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2527,
							"sourceUnit": 577,
							"src": "218:78:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
							"id": 1798,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2527,
							"sourceUnit": 1552,
							"src": "298:80:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1799,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"401:16:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1193,
										"src": "401:16:9"
									},
									"id": 1800,
									"nodeType": "InheritanceSpecifier",
									"src": "401:16:9"
								},
								{
									"baseName": {
										"id": 1801,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"419:18:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "419:18:9"
									},
									"id": 1802,
									"nodeType": "InheritanceSpecifier",
									"src": "419:18:9"
								},
								{
									"baseName": {
										"id": 1803,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"439:19:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 576,
										"src": "439:19:9"
									},
									"id": 1804,
									"nodeType": "InheritanceSpecifier",
									"src": "439:19:9"
								}
							],
							"canonicalName": "GIFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2526,
							"linearizedBaseContracts": [
								2526,
								576,
								194,
								1193,
								1593,
								1792,
								1766,
								1239,
								448
							],
							"name": "GIFT",
							"nameLocation": "393:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1807,
									"libraryName": {
										"id": 1805,
										"name": "SafeMathUpgradeable",
										"nameLocations": [
											"472:19:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1551,
										"src": "472:19:9"
									},
									"nodeType": "UsingForDirective",
									"src": "466:38:9",
									"typeName": {
										"id": 1806,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "496:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e7ba1012",
									"id": 1809,
									"mutability": "mutable",
									"name": "supplyController",
									"nameLocation": "527:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "512:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1808,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "512:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38af3eed",
									"id": 1811,
									"mutability": "mutable",
									"name": "beneficiary",
									"nameLocation": "565:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "550:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1810,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "550:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8850b9c2",
									"id": 1813,
									"mutability": "mutable",
									"name": "reserveConsumer",
									"nameLocation": "598:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "583:30:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1812,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cc7134ba",
									"id": 1817,
									"mutability": "mutable",
									"name": "isExcludedFromOutboundFees",
									"nameLocation": "654:26:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "622:58:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1816,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1814,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "630:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "622:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1815,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "641:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "851f39d4",
									"id": 1821,
									"mutability": "mutable",
									"name": "isExcludedFromInboundFees",
									"nameLocation": "719:25:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "687:57:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1820,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1818,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "695:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "687:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1819,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "706:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e85455d7",
									"id": 1825,
									"mutability": "mutable",
									"name": "isLiquidityPool",
									"nameLocation": "783:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "751:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1824,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1822,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "759:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "751:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1823,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "770:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a906c70e",
									"id": 1829,
									"mutability": "mutable",
									"name": "taxTiers",
									"nameLocation": "825:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "807:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$5_storage",
										"typeString": "uint256[5]"
									},
									"typeName": {
										"baseType": {
											"id": 1826,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "807:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1828,
										"length": {
											"hexValue": "35",
											"id": 1827,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "815:1:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5_by_1",
												"typeString": "int_const 5"
											},
											"value": "5"
										},
										"nodeType": "ArrayTypeName",
										"src": "807:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
											"typeString": "uint256[5]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "110c621d",
									"id": 1833,
									"mutability": "mutable",
									"name": "taxPercentages",
									"nameLocation": "858:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "840:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$5_storage",
										"typeString": "uint256[5]"
									},
									"typeName": {
										"baseType": {
											"id": 1830,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "840:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1832,
										"length": {
											"hexValue": "35",
											"id": 1831,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "848:1:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_5_by_1",
												"typeString": "int_const 5"
											},
											"value": "5"
										},
										"nodeType": "ArrayTypeName",
										"src": "840:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
											"typeString": "uint256[5]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "70d27fa0",
									"id": 1836,
									"mutability": "constant",
									"name": "MAX_TAX_PERCENTAGE",
									"nameLocation": "905:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "881:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1834,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "881:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32305f303030",
										"id": 1835,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "926:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20000_by_1",
											"typeString": "int_const 20000"
										},
										"value": "20_000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24e8933d",
									"id": 1838,
									"mutability": "mutable",
									"name": "lastReserveCheck",
									"nameLocation": "961:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "946:31:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1837,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "946:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d048d988",
									"id": 1840,
									"mutability": "mutable",
									"name": "reserveCheckPeriod",
									"nameLocation": "999:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 2526,
									"src": "984:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1839,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "984:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "fca5dd7612680a40f4851bb137ecc39852bd2a1a3cc176efbb39affa8ce97214",
									"id": 1850,
									"name": "TaxUpdated",
									"nameLocation": "1034:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1844,
												"indexed": false,
												"mutability": "mutable",
												"name": "tiers",
												"nameLocation": "1056:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "1045:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 1841,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1045:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1843,
													"length": {
														"hexValue": "35",
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1053:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "1045:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"indexed": false,
												"mutability": "mutable",
												"name": "percentages",
												"nameLocation": "1074:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "1063:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 1845,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1063:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1847,
													"length": {
														"hexValue": "35",
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1071:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "1063:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:42:9"
									},
									"src": "1028:59:9"
								},
								{
									"anonymous": false,
									"eventSelector": "915d8b94cdcbf4fa1b4c768b15f63b99aee21096b9d04fe1938f45833036106d",
									"id": 1854,
									"name": "SupplyControllerSet",
									"nameLocation": "1099:19:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"indexed": true,
												"mutability": "mutable",
												"name": "newSupplyController",
												"nameLocation": "1135:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "1119:35:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:37:9"
									},
									"src": "1093:63:9"
								},
								{
									"anonymous": false,
									"eventSelector": "04d55a8be181fb8d75b76f2d48aa0b2ee40f47e53d6e61763eeeec46feea8a24",
									"id": 1858,
									"name": "BeneficiarySet",
									"nameLocation": "1168:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"indexed": true,
												"mutability": "mutable",
												"name": "newBeneficiary",
												"nameLocation": "1199:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "1183:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:32:9"
									},
									"src": "1162:53:9"
								},
								{
									"anonymous": false,
									"eventSelector": "56ef0fe49f8ee42d7982bb42d42fa7b8d1370ec36d0f8cb83802a7f74215027d",
									"id": 1866,
									"name": "FeeExclusionSet",
									"nameLocation": "1227:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1259:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1243:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"indexed": false,
												"mutability": "mutable",
												"name": "isExcludedOutbound",
												"nameLocation": "1273:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1268:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"indexed": false,
												"mutability": "mutable",
												"name": "isExcludedInbound",
												"nameLocation": "1298:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "1293:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1293:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:74:9"
									},
									"src": "1221:96:9"
								},
								{
									"anonymous": false,
									"eventSelector": "fa4a2b2457d2065452473bed7d55c8fa2f65fc4a1eff1ebdaf14a1b7281e7773",
									"id": 1872,
									"name": "LiquidityPoolSet",
									"nameLocation": "1329:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1362:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1346:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1346:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"indexed": false,
												"mutability": "mutable",
												"name": "isPool",
												"nameLocation": "1376:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "1371:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1371:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1345:38:9"
									},
									"src": "1323:61:9"
								},
								{
									"anonymous": false,
									"eventSelector": "25cf73d41a7a2f5baa3ed34b7a72144453377d3d6c59b74db14e0ff168fd1fa9",
									"id": 1876,
									"name": "ReserveConsumerSet",
									"nameLocation": "1396:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"indexed": true,
												"mutability": "mutable",
												"name": "newReserveConsumer",
												"nameLocation": "1431:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1415:34:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1414:36:9"
									},
									"src": "1390:61:9"
								},
								{
									"anonymous": false,
									"eventSelector": "f759d32ec37fe15560fbb2ad08f9ea31689d826215d24d6a6e2e740c517c66db",
									"id": 1880,
									"name": "ReserveCheckPeriodSet",
									"nameLocation": "1463:21:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPeriod",
												"nameLocation": "1493:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "1485:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:19:9"
									},
									"src": "1457:47:9"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "1550:114:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1883,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1569:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1573:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1569:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1885,
																"name": "supplyController",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1809,
																"src": "1583:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1569:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "474946543a2063616c6c6572206973206e6f742074686520737570706c79436f6e74726f6c6c6572",
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1601:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac",
																"typeString": "literal_string \"GIFT: caller is not the supplyController\""
															},
															"value": "GIFT: caller is not the supplyController"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_865be1b158f0a532b9a1be55440b78801b3d25942c2d63cda47591b687bce1ac",
																"typeString": "literal_string \"GIFT: caller is not the supplyController\""
															}
														],
														"id": 1882,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1561:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1561:83:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "1561:83:9"
											},
											{
												"id": 1890,
												"nodeType": "PlaceholderStatement",
												"src": "1655:1:9"
											}
										]
									},
									"id": 1892,
									"name": "onlySupplyController",
									"nameLocation": "1527:20:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1547:2:9"
									},
									"src": "1518:146:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "1697:138:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1894,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1712:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1718:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1712:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1898,
																"name": "reserveCheckPeriod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1840,
																"src": "1752:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1896,
																"name": "lastReserveCheck",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1838,
																"src": "1731:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1748:3:9",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1415,
															"src": "1731:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1731:40:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1712:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1905,
												"nodeType": "IfStatement",
												"src": "1708:108:9",
												"trueBody": {
													"id": 1904,
													"nodeType": "Block",
													"src": "1773:43:9",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1901,
																	"name": "_checkReserves",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2471,
																	"src": "1788:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1788:16:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1903,
															"nodeType": "ExpressionStatement",
															"src": "1788:16:9"
														}
													]
												}
											},
											{
												"id": 1906,
												"nodeType": "PlaceholderStatement",
												"src": "1826:1:9"
											}
										]
									},
									"id": 1908,
									"name": "checkReserves",
									"nameLocation": "1681:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:9"
									},
									"src": "1672:163:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1974,
										"nodeType": "Block",
										"src": "2057:535:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1924,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "2081:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1925,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "2087:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1923,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "2068:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2068:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "2068:26:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1929,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2120:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2124:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2120:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1928,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2105:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2105:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "2105:26:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1933,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2142:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:17:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1935,
												"nodeType": "ExpressionStatement",
												"src": "2142:17:9"
											},
											{
												"expression": {
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1936,
														"name": "supplyController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "2180:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1937,
														"name": "_supplyController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "2199:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2180:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "2180:36:9"
											},
											{
												"expression": {
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1940,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "2227:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1941,
														"name": "_beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "2241:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1943,
												"nodeType": "ExpressionStatement",
												"src": "2227:26:9"
											},
											{
												"expression": {
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1944,
														"name": "reserveConsumer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "2264:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1945,
														"name": "_reserveConsumer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "2282:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2264:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "2264:34:9"
											},
											{
												"expression": {
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1948,
														"name": "taxTiers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "2372:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$5_storage",
															"typeString": "uint256[5] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"hexValue": "31303030",
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2384:10:9",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000000"
																},
																"value": "1000"
															},
															{
																"hexValue": "35303030",
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2396:10:9",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5000000000000000000000_by_1",
																	"typeString": "int_const 5000000000000000000000"
																},
																"value": "5000"
															},
															{
																"hexValue": "3130303030",
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2408:11:9",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000000"
																},
																"value": "10000"
															},
															{
																"hexValue": "3530303030",
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2421:11:9",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50000000000000000000000_by_1",
																	"typeString": "int_const 50000000000000000000000"
																},
																"value": "50000"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2439:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1954,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2439:7:9",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 1953,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2434:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2434:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2448:3:9",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2434:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1958,
														"isConstant": false,
														"isInlineArray": true,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2383:69:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
															"typeString": "uint256[5] memory"
														}
													},
													"src": "2372:80:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage",
														"typeString": "uint256[5] storage ref"
													}
												},
												"id": 1960,
												"nodeType": "ExpressionStatement",
												"src": "2372:80:9"
											},
											{
												"expression": {
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1961,
														"name": "taxPercentages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1833,
														"src": "2463:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$5_storage",
															"typeString": "uint256[5] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"hexValue": "31303030",
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2481:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															{
																"hexValue": "383030",
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2487:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_800_by_1",
																	"typeString": "int_const 800"
																},
																"value": "800"
															},
															{
																"hexValue": "363030",
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2492:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_600_by_1",
																	"typeString": "int_const 600"
																},
																"value": "600"
															},
															{
																"hexValue": "343030",
																"id": 1965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2497:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_400_by_1",
																	"typeString": "int_const 400"
																},
																"value": "400"
															},
															{
																"hexValue": "323030",
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2502:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															}
														],
														"id": 1967,
														"isConstant": false,
														"isInlineArray": true,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2480:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint16_$5_memory_ptr",
															"typeString": "uint16[5] memory"
														}
													},
													"src": "2463:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage",
														"typeString": "uint256[5] storage ref"
													}
												},
												"id": 1969,
												"nodeType": "ExpressionStatement",
												"src": "2463:43:9"
											},
											{
												"expression": {
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1970,
														"name": "reserveCheckPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "2557:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2578:6:9",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "2557:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "2557:27:9"
											}
										]
									},
									"functionSelector": "db0ed6a0",
									"id": 1975,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1921,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1920,
												"name": "initializer",
												"nameLocations": [
													"2045:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2045:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:11:9"
										}
									],
									"name": "initialize",
									"nameLocation": "1856:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1891:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1877:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1909,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1877:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1920:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1906:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1911,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1906:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "_supplyController",
												"nameLocation": "1945:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1937:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "1981:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1973:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "_reserveConsumer",
												"nameLocation": "2012:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "2004:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2004:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1866:169:9"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:9"
									},
									"scope": 2526,
									"src": "1847:745:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "2709:450:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1989,
																	"name": "_tiers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "2728:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
																		"typeString": "uint256[5] memory"
																	}
																},
																"id": 1991,
																"indexExpression": {
																	"hexValue": "34",
																	"id": 1990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2735:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2728:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2746:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1993,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "2746:7:9",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 1992,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "2741:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2741:13:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2755:3:9",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "2741:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2728:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "474946543a204c6173742074696572206d757374206265206d6178",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2760:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63",
																"typeString": "literal_string \"GIFT: Last tier must be max\""
															},
															"value": "GIFT: Last tier must be max"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2e1fcf0a7d54cc9b1425f433d9fd28f5a4e8426af39cbb0b13f3817b878dff63",
																"typeString": "literal_string \"GIFT: Last tier must be max\""
															}
														],
														"id": 1988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2720:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2720:70:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "2720:70:9"
											},
											{
												"body": {
													"id": 2037,
													"nodeType": "Block",
													"src": "2830:206:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2016,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2012,
																				"name": "_percentages",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1983,
																				"src": "2853:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
																					"typeString": "uint256[5] memory"
																				}
																			},
																			"id": 2014,
																			"indexExpression": {
																				"id": 2013,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2002,
																				"src": "2866:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2853:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2015,
																			"name": "MAX_TAX_PERCENTAGE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "2872:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2853:37:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "474946543a205461782070657263656e7461676520746f6f2068696768",
																		"id": 2017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2892:31:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda",
																			"typeString": "literal_string \"GIFT: Tax percentage too high\""
																		},
																		"value": "GIFT: Tax percentage too high"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e257401b31258a95d1d072625fcf21be4e68c38921ec4c92dbb83ebccfb08cda",
																			"typeString": "literal_string \"GIFT: Tax percentage too high\""
																		}
																	],
																	"id": 2011,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2845:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2845:79:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2019,
															"nodeType": "ExpressionStatement",
															"src": "2845:79:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2020,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2002,
																	"src": "2943:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2947:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2943:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2036,
															"nodeType": "IfStatement",
															"src": "2939:85:9",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 2024,
																					"name": "_tiers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1979,
																					"src": "2958:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
																						"typeString": "uint256[5] memory"
																					}
																				},
																				"id": 2026,
																				"indexExpression": {
																					"id": 2025,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2002,
																					"src": "2965:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2958:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 2027,
																					"name": "_tiers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1979,
																					"src": "2970:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
																						"typeString": "uint256[5] memory"
																					}
																				},
																				"id": 2031,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2030,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2028,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2002,
																						"src": "2977:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2029,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2979:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "2977:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2970:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2958:23:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "474946543a205469657273206d75737420626520696e20617363656e64696e67206f72646572",
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2983:40:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48",
																				"typeString": "literal_string \"GIFT: Tiers must be in ascending order\""
																			},
																			"value": "GIFT: Tiers must be in ascending order"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_6c47803c196d62d032757f666d0ceaebfea55bc7cb363931c28393e68f01bb48",
																				"typeString": "literal_string \"GIFT: Tiers must be in ascending order\""
																			}
																		],
																		"id": 2023,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "2950:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 2034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2950:74:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2035,
																"nodeType": "ExpressionStatement",
																"src": "2950:74:9"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2005,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2002,
														"src": "2818:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "35",
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2822:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "2818:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2038,
												"initializationExpression": {
													"assignments": [
														2002
													],
													"declarations": [
														{
															"constant": false,
															"id": 2002,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2811:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2038,
															"src": "2806:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2001,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2806:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2004,
													"initialValue": {
														"hexValue": "30",
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2815:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2806:10:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2825:3:9",
														"subExpression": {
															"id": 2008,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2002,
															"src": "2825:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2010,
													"nodeType": "ExpressionStatement",
													"src": "2825:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2801:235:9"
											},
											{
												"expression": {
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2039,
														"name": "taxTiers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "3046:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$5_storage",
															"typeString": "uint256[5] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2040,
														"name": "_tiers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1979,
														"src": "3057:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
															"typeString": "uint256[5] memory"
														}
													},
													"src": "3046:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage",
														"typeString": "uint256[5] storage ref"
													}
												},
												"id": 2042,
												"nodeType": "ExpressionStatement",
												"src": "3046:17:9"
											},
											{
												"expression": {
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2043,
														"name": "taxPercentages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1833,
														"src": "3074:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$5_storage",
															"typeString": "uint256[5] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2044,
														"name": "_percentages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "3091:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
															"typeString": "uint256[5] memory"
														}
													},
													"src": "3074:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage",
														"typeString": "uint256[5] storage ref"
													}
												},
												"id": 2046,
												"nodeType": "ExpressionStatement",
												"src": "3074:29:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2048,
															"name": "_tiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "3130:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
																"typeString": "uint256[5] memory"
															}
														},
														{
															"id": 2049,
															"name": "_percentages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "3138:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
																"typeString": "uint256[5] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
																"typeString": "uint256[5] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
																"typeString": "uint256[5] memory"
															}
														],
														"id": 2047,
														"name": "TaxUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "3119:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_uint256_$5_memory_ptr_$_t_array$_t_uint256_$5_memory_ptr_$returns$__$",
															"typeString": "function (uint256[5] memory,uint256[5] memory)"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3119:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "EmitStatement",
												"src": "3114:37:9"
											}
										]
									},
									"functionSelector": "53e4e3cb",
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1986,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1985,
												"name": "onlyOwner",
												"nameLocations": [
													"2699:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2699:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2699:9:9"
										}
									],
									"name": "setTaxParameters",
									"nameLocation": "2615:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "_tiers",
												"nameLocation": "2650:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2632:24:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 1976,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2632:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1978,
													"length": {
														"hexValue": "35",
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2640:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2632:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "_percentages",
												"nameLocation": "2676:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2658:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$5_memory_ptr",
													"typeString": "uint256[5]"
												},
												"typeName": {
													"baseType": {
														"id": 1980,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2658:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1982,
													"length": {
														"hexValue": "35",
														"id": 1981,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2666:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"nodeType": "ArrayTypeName",
													"src": "2658:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$5_storage_ptr",
														"typeString": "uint256[5]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:58:9"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2709:0:9"
									},
									"scope": 2526,
									"src": "2606:553:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2068,
										"nodeType": "Block",
										"src": "3249:115:9",
										"statements": [
											{
												"expression": {
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2060,
														"name": "supplyController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "3260:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2061,
														"name": "_newSupplyController",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "3279:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3260:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2063,
												"nodeType": "ExpressionStatement",
												"src": "3260:39:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2065,
															"name": "_newSupplyController",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2055,
															"src": "3335:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2064,
														"name": "SupplyControllerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "3315:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3315:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2067,
												"nodeType": "EmitStatement",
												"src": "3310:46:9"
											}
										]
									},
									"functionSelector": "52875bc3",
									"id": 2069,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2058,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2057,
												"name": "onlyOwner",
												"nameLocations": [
													"3239:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3239:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3239:9:9"
										}
									],
									"name": "setSupplyController",
									"nameLocation": "3180:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "_newSupplyController",
												"nameLocation": "3208:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 2069,
												"src": "3200:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3200:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3199:30:9"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:0:9"
									},
									"scope": 2526,
									"src": "3171:193:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "3440:95:9",
										"statements": [
											{
												"expression": {
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2076,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1811,
														"src": "3451:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2077,
														"name": "_newBeneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2071,
														"src": "3465:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3451:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "3451:29:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2081,
															"name": "_newBeneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "3511:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2080,
														"name": "BeneficiarySet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1858,
														"src": "3496:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3496:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "EmitStatement",
												"src": "3491:36:9"
											}
										]
									},
									"functionSelector": "1c31f710",
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2074,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2073,
												"name": "onlyOwner",
												"nameLocations": [
													"3430:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3430:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3430:9:9"
										}
									],
									"name": "setBeneficiary",
									"nameLocation": "3381:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "_newBeneficiary",
												"nameLocation": "3404:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "3396:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3395:25:9"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3440:0:9"
									},
									"scope": 2526,
									"src": "3372:163:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "3656:226:9",
										"statements": [
											{
												"expression": {
													"id": 2100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2096,
															"name": "isExcludedFromOutboundFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "3667:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2098,
														"indexExpression": {
															"id": 2097,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "3694:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3667:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2099,
														"name": "_isExcludedOutbound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2089,
														"src": "3706:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3667:58:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2101,
												"nodeType": "ExpressionStatement",
												"src": "3667:58:9"
											},
											{
												"expression": {
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2102,
															"name": "isExcludedFromInboundFees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "3736:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2104,
														"indexExpression": {
															"id": 2103,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "3762:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3736:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2105,
														"name": "_isExcludedInbound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2091,
														"src": "3774:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3736:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2107,
												"nodeType": "ExpressionStatement",
												"src": "3736:56:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2109,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "3824:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2110,
															"name": "_isExcludedOutbound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2089,
															"src": "3834:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2111,
															"name": "_isExcludedInbound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "3855:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2108,
														"name": "FeeExclusionSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "3808:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (address,bool,bool)"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3808:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2113,
												"nodeType": "EmitStatement",
												"src": "3803:71:9"
											}
										]
									},
									"functionSelector": "e1a8f3f4",
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2094,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2093,
												"name": "onlyOwner",
												"nameLocations": [
													"3646:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3646:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3646:9:9"
										}
									],
									"name": "setFeeExclusion",
									"nameLocation": "3552:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3576:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3568:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "_isExcludedOutbound",
												"nameLocation": "3591:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3586:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3586:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "_isExcludedInbound",
												"nameLocation": "3617:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "3612:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3612:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3567:69:9"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3656:0:9"
									},
									"scope": 2526,
									"src": "3543:339:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2135,
										"nodeType": "Block",
										"src": "3969:105:9",
										"statements": [
											{
												"expression": {
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2124,
															"name": "isLiquidityPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "3980:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2126,
														"indexExpression": {
															"id": 2125,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "3996:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3980:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2127,
														"name": "_isPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "4008:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3980:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2129,
												"nodeType": "ExpressionStatement",
												"src": "3980:35:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2131,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "4048:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2132,
															"name": "_isPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "4058:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2130,
														"name": "LiquidityPoolSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "4031:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4031:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "EmitStatement",
												"src": "4026:40:9"
											}
										]
									},
									"functionSelector": "c29c669a",
									"id": 2136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2122,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2121,
												"name": "onlyOwner",
												"nameLocations": [
													"3959:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3959:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3959:9:9"
										}
									],
									"name": "setLiquidityPool",
									"nameLocation": "3901:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3926:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "3918:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "_isPool",
												"nameLocation": "3941:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "3936:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3936:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3917:32:9"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3969:0:9"
									},
									"scope": 2526,
									"src": "3892:182:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2151,
										"nodeType": "Block",
										"src": "4158:111:9",
										"statements": [
											{
												"expression": {
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2143,
														"name": "reserveConsumer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "4169:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2144,
														"name": "_newReserveConsumer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "4187:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4169:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2146,
												"nodeType": "ExpressionStatement",
												"src": "4169:37:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2148,
															"name": "_newReserveConsumer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "4241:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2147,
														"name": "ReserveConsumerSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "4222:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4222:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2150,
												"nodeType": "EmitStatement",
												"src": "4217:44:9"
											}
										]
									},
									"functionSelector": "79e631f4",
									"id": 2152,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2141,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2140,
												"name": "onlyOwner",
												"nameLocations": [
													"4148:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4148:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4148:9:9"
										}
									],
									"name": "setReserveConsumer",
									"nameLocation": "4091:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "_newReserveConsumer",
												"nameLocation": "4118:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 2152,
												"src": "4110:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4110:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4109:29:9"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4158:0:9"
									},
									"scope": 2526,
									"src": "4082:187:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "4347:99:9",
										"statements": [
											{
												"expression": {
													"id": 2161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2159,
														"name": "reserveCheckPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "4358:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2160,
														"name": "_newPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2154,
														"src": "4379:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4358:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2162,
												"nodeType": "ExpressionStatement",
												"src": "4358:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2164,
															"name": "_newPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2154,
															"src": "4427:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2163,
														"name": "ReserveCheckPeriodSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1880,
														"src": "4405:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4405:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2166,
												"nodeType": "EmitStatement",
												"src": "4400:38:9"
											}
										]
									},
									"functionSelector": "a02fba1e",
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2156,
												"name": "onlyOwner",
												"nameLocations": [
													"4337:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4337:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4337:9:9"
										}
									],
									"name": "setReserveCheckPeriod",
									"nameLocation": "4286:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "_newPeriod",
												"nameLocation": "4316:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "4308:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4308:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4307:20:9"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4347:0:9"
									},
									"scope": 2526,
									"src": "4277:169:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2184,
										"nodeType": "Block",
										"src": "4544:38:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2180,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2170,
															"src": "4561:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2181,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2172,
															"src": "4566:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2179,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "4555:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2183,
												"nodeType": "ExpressionStatement",
												"src": "4555:19:9"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2185,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2175,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2174,
												"name": "onlySupplyController",
												"nameLocations": [
													"4509:20:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1892,
												"src": "4509:20:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4509:20:9"
										},
										{
											"id": 2177,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2176,
												"name": "checkReserves",
												"nameLocations": [
													"4530:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1908,
												"src": "4530:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4530:13:9"
										}
									],
									"name": "mint",
									"nameLocation": "4465:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4478:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "4470:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4470:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4491:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2185,
												"src": "4483:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4469:30:9"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4544:0:9"
									},
									"scope": 2526,
									"src": "4456:126:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "4630:45:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2191,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4647:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4651:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4647:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2193,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "4659:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2190,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "4641:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4641:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2195,
												"nodeType": "ExpressionStatement",
												"src": "4641:26:9"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "4599:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4612:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "4604:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4604:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4603:17:9"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4630:0:9"
									},
									"scope": 2526,
									"src": "4590:85:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "4745:303:9",
										"statements": [
											{
												"assignments": [
													2205
												],
												"declarations": [
													{
														"constant": false,
														"id": 2205,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4764:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "4756:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2204,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4756:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2211,
												"initialValue": {
													"arguments": [
														{
															"id": 2207,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "4793:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2208,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4803:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4807:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4803:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2206,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4783:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4783:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4756:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2213,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "4833:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2214,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2201,
																"src": "4853:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4833:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "474946543a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4862:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f",
																"typeString": "literal_string \"GIFT: burn amount exceeds allowance\""
															},
															"value": "GIFT: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2405a82c2ec88026d92371bfb2d7598ca7bbd021478246dd9c9f4dc84d2c07f",
																"typeString": "literal_string \"GIFT: burn amount exceeds allowance\""
															}
														],
														"id": 2212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4825:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4825:75:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2218,
												"nodeType": "ExpressionStatement",
												"src": "4825:75:9"
											},
											{
												"id": 2228,
												"nodeType": "UncheckedBlock",
												"src": "4911:95:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2220,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2199,
																	"src": "4945:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2221,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4955:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4959:6:9",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4955:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2223,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "4967:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2224,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2201,
																		"src": "4986:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4967:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2219,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1076,
																	1144
																],
																"referencedDeclaration": 1076,
																"src": "4936:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 2226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4936:58:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2227,
														"nodeType": "ExpressionStatement",
														"src": "4936:58:9"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2230,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "5022:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2231,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "5032:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2229,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "5016:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5016:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2233,
												"nodeType": "ExpressionStatement",
												"src": "5016:24:9"
											}
										]
									},
									"functionSelector": "79cc6790",
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "4692:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4709:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "4701:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2201,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4727:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "4719:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4700:35:9"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4745:0:9"
									},
									"scope": 2526,
									"src": "4683:365:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "5094:27:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2240,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "5105:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5105:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2242,
												"nodeType": "ExpressionStatement",
												"src": "5105:8:9"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2237,
												"name": "onlyOwner",
												"nameLocations": [
													"5084:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5084:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5084:9:9"
										}
									],
									"name": "pause",
									"nameLocation": "5067:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5072:2:9"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5094:0:9"
									},
									"scope": 2526,
									"src": "5058:63:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "5167:29:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2249,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "5178:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5178:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2251,
												"nodeType": "ExpressionStatement",
												"src": "5178:10:9"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2253,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2247,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2246,
												"name": "onlyOwner",
												"nameLocations": [
													"5157:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "5157:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5157:9:9"
										}
									],
									"name": "unpause",
									"nameLocation": "5138:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5145:2:9"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5167:0:9"
									},
									"scope": 2526,
									"src": "5129:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										773
									],
									"body": {
										"id": 2274,
										"nodeType": "Block",
										"src": "5324:72:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2268,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "5356:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5356:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2270,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2255,
															"src": "5370:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2271,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "5381:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2267,
														"name": "_transferGIFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "5342:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2266,
												"id": 2273,
												"nodeType": "Return",
												"src": "5335:53:9"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2261,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2260,
												"name": "whenNotPaused",
												"nameLocations": [
													"5281:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "5281:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5281:13:9"
										},
										{
											"id": 2263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2262,
												"name": "checkReserves",
												"nameLocations": [
													"5295:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1908,
												"src": "5295:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5295:13:9"
										}
									],
									"name": "transfer",
									"nameLocation": "5213:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2259,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5272:8:9"
									},
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5230:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "5222:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5222:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5249:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "5241:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5241:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:35:9"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2275,
												"src": "5318:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5318:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5317:6:9"
									},
									"scope": 2526,
									"src": "5204:192:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										853
									],
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "5546:328:9",
										"statements": [
											{
												"assignments": [
													2292
												],
												"declarations": [
													{
														"constant": false,
														"id": 2292,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5565:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 2322,
														"src": "5557:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5557:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2298,
												"initialValue": {
													"arguments": [
														{
															"id": 2294,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "5594:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2295,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1221,
																"src": "5602:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5602:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2293,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "5584:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5584:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5557:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2300,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "5634:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2301,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2281,
																"src": "5654:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5634:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "474946543a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5662:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e",
																"typeString": "literal_string \"GIFT: transfer amount exceeds allowance\""
															},
															"value": "GIFT: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3816af625065cb6623245f254b47c6f204cd8ec981ea3146b8d861e8e390a6e",
																"typeString": "literal_string \"GIFT: transfer amount exceeds allowance\""
															}
														],
														"id": 2299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5626:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5626:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2305,
												"nodeType": "ExpressionStatement",
												"src": "5626:78:9"
											},
											{
												"id": 2315,
												"nodeType": "UncheckedBlock",
												"src": "5715:94:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2307,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2277,
																	"src": "5749:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2308,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "5757:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5757:12:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2310,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2292,
																		"src": "5771:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2311,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2281,
																		"src": "5790:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5771:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2306,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1076,
																	1144
																],
																"referencedDeclaration": 1076,
																"src": "5740:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5740:57:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2314,
														"nodeType": "ExpressionStatement",
														"src": "5740:57:9"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2317,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "5840:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2318,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "5848:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2319,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "5859:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2316,
														"name": "_transferGIFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2378,
														"src": "5826:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2290,
												"id": 2321,
												"nodeType": "Return",
												"src": "5819:47:9"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2285,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2284,
												"name": "whenNotPaused",
												"nameLocations": [
													"5503:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "5503:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5503:13:9"
										},
										{
											"id": 2287,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2286,
												"name": "checkReserves",
												"nameLocations": [
													"5517:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1908,
												"src": "5517:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5517:13:9"
										}
									],
									"name": "transferFrom",
									"nameLocation": "5415:12:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2283,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5494:8:9"
									},
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5436:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "5428:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5428:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5452:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "5444:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5444:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2281,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5471:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "5463:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5463:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5427:51:9"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "5540:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5540:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5539:6:9"
									},
									"scope": 2526,
									"src": "5406:468:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2377,
										"nodeType": "Block",
										"src": "5988:386:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2334,
																"name": "isExcludedFromOutboundFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1817,
																"src": "6003:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2336,
															"indexExpression": {
																"id": 2335,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "6030:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6003:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"baseExpression": {
																"id": 2337,
																"name": "isExcludedFromInboundFees",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "6041:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2339,
															"indexExpression": {
																"id": 2338,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2327,
																"src": "6067:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6041:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6003:74:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"baseExpression": {
															"id": 2341,
															"name": "isLiquidityPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "6081:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2343,
														"indexExpression": {
															"id": 2342,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2325,
															"src": "6097:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6081:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6003:101:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2373,
													"nodeType": "Block",
													"src": "6175:170:9",
													"statements": [
														{
															"assignments": [
																2353
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2353,
																	"mutability": "mutable",
																	"name": "tax",
																	"nameLocation": "6198:3:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2373,
																	"src": "6190:11:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2352,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6190:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2357,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2355,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "6216:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2354,
																	"name": "_computeTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2419,
																	"src": "6204:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 2356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6204:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6190:33:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2359,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "6248:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2360,
																		"name": "beneficiary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "6256:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2361,
																		"name": "tax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2353,
																		"src": "6269:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2358,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "6238:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6238:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2363,
															"nodeType": "ExpressionStatement",
															"src": "6238:35:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2365,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "6298:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2366,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2327,
																		"src": "6306:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2369,
																				"name": "tax",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2353,
																				"src": "6328:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2367,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2329,
																				"src": "6317:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6324:3:9",
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1430,
																			"src": "6317:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6317:15:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2364,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "6288:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6288:45:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2372,
															"nodeType": "ExpressionStatement",
															"src": "6288:45:9"
														}
													]
												},
												"id": 2374,
												"nodeType": "IfStatement",
												"src": "5999:346:9",
												"trueBody": {
													"id": 2351,
													"nodeType": "Block",
													"src": "6106:63:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2346,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "6131:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2347,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2327,
																		"src": "6139:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2348,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "6150:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2345,
																	"name": "_transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "6121:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6121:36:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2350,
															"nodeType": "ExpressionStatement",
															"src": "6121:36:9"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6362:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2333,
												"id": 2376,
												"nodeType": "Return",
												"src": "6355:11:9"
											}
										]
									},
									"id": 2378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferGIFT",
									"nameLocation": "5891:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5913:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "5905:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5905:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5929:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "5921:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5921:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5948:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "5940:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5940:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5904:51:9"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "5982:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5982:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5981:6:9"
									},
									"scope": 2526,
									"src": "5882:492:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2418,
										"nodeType": "Block",
										"src": "6454:226:9",
										"statements": [
											{
												"body": {
													"id": 2412,
													"nodeType": "Block",
													"src": "6494:138:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2395,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2380,
																	"src": "6513:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2396,
																		"name": "taxTiers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1829,
																		"src": "6524:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$5_storage",
																			"typeString": "uint256[5] storage ref"
																		}
																	},
																	"id": 2398,
																	"indexExpression": {
																		"id": 2397,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2386,
																		"src": "6533:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6524:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6513:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2411,
															"nodeType": "IfStatement",
															"src": "6509:112:9",
															"trueBody": {
																"id": 2410,
																"nodeType": "Block",
																"src": "6537:84:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "313030303030",
																					"id": 2407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6598:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_100000_by_1",
																						"typeString": "int_const 100000"
																					},
																					"value": "100000"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_100000_by_1",
																						"typeString": "int_const 100000"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"baseExpression": {
																								"id": 2402,
																								"name": "taxPercentages",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1833,
																								"src": "6575:14:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$5_storage",
																									"typeString": "uint256[5] storage ref"
																								}
																							},
																							"id": 2404,
																							"indexExpression": {
																								"id": 2403,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2386,
																								"src": "6590:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6575:17:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 2400,
																							"name": "_amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2380,
																							"src": "6563:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 2401,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6571:3:9",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1445,
																						"src": "6563:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 2405,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6563:30:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6594:3:9",
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1460,
																				"src": "6563:34:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6563:42:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 2384,
																		"id": 2409,
																		"nodeType": "Return",
																		"src": "6556:49:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2389,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2386,
														"src": "6482:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "35",
														"id": 2390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6486:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5_by_1",
															"typeString": "int_const 5"
														},
														"value": "5"
													},
													"src": "6482:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2413,
												"initializationExpression": {
													"assignments": [
														2386
													],
													"declarations": [
														{
															"constant": false,
															"id": 2386,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6475:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2413,
															"src": "6470:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2385,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "6470:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2388,
													"initialValue": {
														"hexValue": "30",
														"id": 2387,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6479:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6470:10:9"
												},
												"loopExpression": {
													"expression": {
														"id": 2393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6489:3:9",
														"subExpression": {
															"id": 2392,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "6489:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2394,
													"nodeType": "ExpressionStatement",
													"src": "6489:3:9"
												},
												"nodeType": "ForStatement",
												"src": "6465:167:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "474946543a20496e76616c696420616d6f756e74",
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6649:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1",
																"typeString": "literal_string \"GIFT: Invalid amount\""
															},
															"value": "GIFT: Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_eab2345fe451ee69feb708abb4d2c4969671450f8b7d83c42894c6e25cdf10a1",
																"typeString": "literal_string \"GIFT: Invalid amount\""
															}
														],
														"id": 2414,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "6642:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6642:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "6642:30:9"
											}
										]
									},
									"id": 2419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeTax",
									"nameLocation": "6393:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6413:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "6405:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6405:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6404:17:9"
									},
									"returnParameters": {
										"id": 2384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2419,
												"src": "6445:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6444:9:9"
									},
									"scope": 2526,
									"src": "6384:296:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2470,
										"nodeType": "Block",
										"src": "6723:435:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2422,
														"name": "reserveConsumer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "6738:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6765:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6757:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2423,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6757:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 2426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6757:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6738:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2464,
												"nodeType": "IfStatement",
												"src": "6734:372:9",
												"trueBody": {
													"id": 2463,
													"nodeType": "Block",
													"src": "6769:337:9",
													"statements": [
														{
															"assignments": [
																2429,
																2431
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2429,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "6790:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2463,
																	"src": "6785:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2428,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "6785:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2431,
																	"mutability": "mutable",
																	"name": "data",
																	"nameLocation": "6812:4:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2463,
																	"src": "6799:17:9",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2430,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "6799:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2439,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "67657452657365727665732829",
																				"id": 2436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6871:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_0902f1ac5dbaeedd3217f11b3cbaf929216c9c5abc2d69da89d54964bead575d",
																					"typeString": "literal_string \"getReserves()\""
																				},
																				"value": "getReserves()"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_0902f1ac5dbaeedd3217f11b3cbaf929216c9c5abc2d69da89d54964bead575d",
																					"typeString": "literal_string \"getReserves()\""
																				}
																			],
																			"expression": {
																				"id": 2434,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6847:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6851:19:9",
																			"memberName": "encodeWithSignature",
																			"nodeType": "MemberAccess",
																			"src": "6847:23:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (string memory) pure returns (bytes memory)"
																			}
																		},
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6847:40:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2432,
																		"name": "reserveConsumer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "6820:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6836:10:9",
																	"memberName": "staticcall",
																	"nodeType": "MemberAccess",
																	"src": "6820:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) view returns (bool,bytes memory)"
																	}
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6820:68:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6784:104:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2441,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2429,
																		"src": "6911:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "474946543a204661696c656420746f20636865636b207265736572766573",
																		"id": 2442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6920:32:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2",
																			"typeString": "literal_string \"GIFT: Failed to check reserves\""
																		},
																		"value": "GIFT: Failed to check reserves"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_52e42a2db600ae693fbf4ff50a6f0af5f2cf76767498eacd0967a304e4d346c2",
																			"typeString": "literal_string \"GIFT: Failed to check reserves\""
																		}
																	],
																	"id": 2440,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6903:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6903:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2444,
															"nodeType": "ExpressionStatement",
															"src": "6903:50:9"
														},
														{
															"assignments": [
																2446
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2446,
																	"mutability": "mutable",
																	"name": "reserves",
																	"nameLocation": "6976:8:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2463,
																	"src": "6968:16:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2445,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6968:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2454,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2449,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2431,
																		"src": "6998:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 2451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7005:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2450,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7005:7:9",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 2452,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7004:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"expression": {
																		"id": 2447,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "6987:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 2448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6991:6:9",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "6987:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6987:27:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6968:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2456,
																				"name": "totalSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 729,
																				"src": "7037:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7037:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 2458,
																			"name": "reserves",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2446,
																			"src": "7054:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7037:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "474946543a20496e73756666696369656e74207265736572766573",
																		"id": 2460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7064:29:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d",
																			"typeString": "literal_string \"GIFT: Insufficient reserves\""
																		},
																		"value": "GIFT: Insufficient reserves"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_57d0509a92b07b10b33afe32e6474ddb1c87eed7e1b25b48e8bff737a3072e0d",
																			"typeString": "literal_string \"GIFT: Insufficient reserves\""
																		}
																	],
																	"id": 2455,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7029:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7029:65:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2462,
															"nodeType": "ExpressionStatement",
															"src": "7029:65:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2465,
														"name": "lastReserveCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "7116:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2466,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7135:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2467,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7141:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7135:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7116:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2469,
												"nodeType": "ExpressionStatement",
												"src": "7116:34:9"
											}
										]
									},
									"id": 2471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkReserves",
									"nameLocation": "6697:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6711:2:9"
									},
									"returnParameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6723:0:9"
									},
									"scope": 2526,
									"src": "6688:470:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2493,
										"nodeType": "Block",
										"src": "7255:167:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7274:9:9",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2481,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "7275:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7275:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "474946543a20746f6b656e207472616e73666572207768696c6520706175736564",
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7285:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2060805205ee08e0fc561ad8edbad08f46f61fd4a9133cb27d995222ba1925c4",
																"typeString": "literal_string \"GIFT: token transfer while paused\""
															},
															"value": "GIFT: token transfer while paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2060805205ee08e0fc561ad8edbad08f46f61fd4a9133cb27d995222ba1925c4",
																"typeString": "literal_string \"GIFT: token transfer while paused\""
															}
														],
														"id": 2480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7266:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2486,
												"nodeType": "ExpressionStatement",
												"src": "7266:55:9"
											},
											{
												"expression": {
													"id": 2487,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2473,
													"src": "7378:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2488,
												"nodeType": "ExpressionStatement",
												"src": "7378:4:9"
											},
											{
												"expression": {
													"id": 2489,
													"name": "to",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2475,
													"src": "7393:2:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2490,
												"nodeType": "ExpressionStatement",
												"src": "7393:2:9"
											},
											{
												"expression": {
													"id": 2491,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2477,
													"src": "7406:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2492,
												"nodeType": "ExpressionStatement",
												"src": "7406:6:9"
											}
										]
									},
									"id": 2494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "7175:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7204:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "7196:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7196:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7218:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "7210:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7210:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7230:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2494,
												"src": "7222:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7222:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7195:42:9"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7255:0:9"
									},
									"scope": 2526,
									"src": "7166:256:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2515,
										"nodeType": "Block",
										"src": "7497:134:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2502,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2496,
																"src": "7516:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7536:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7528:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2503,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7528:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7528:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7516:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "474946543a204e65772061646d696e2063616e6e6f7420626520746865207a65726f2061646472657373",
															"id": 2508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7540:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4",
																"typeString": "literal_string \"GIFT: New admin cannot be the zero address\""
															},
															"value": "GIFT: New admin cannot be the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fdf31966c9b6df14fdd39056d2b519125876528c332dbe10d7fb6448c1edef4",
																"typeString": "literal_string \"GIFT: New admin cannot be the zero address\""
															}
														],
														"id": 2501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7508:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7508:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2510,
												"nodeType": "ExpressionStatement",
												"src": "7508:77:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2512,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2496,
															"src": "7614:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2511,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "7596:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7596:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2514,
												"nodeType": "ExpressionStatement",
												"src": "7596:27:9"
											}
										]
									},
									"functionSelector": "1a5e62fd",
									"id": 2516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2498,
												"name": "onlyOwner",
												"nameLocations": [
													"7487:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7487:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7487:9:9"
										}
									],
									"name": "transferAdminControl",
									"nameLocation": "7439:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2496,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "7468:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "7460:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7459:18:9"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7497:0:9"
									},
									"scope": 2526,
									"src": "7430:201:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2524,
										"nodeType": "Block",
										"src": "7690:38:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2521,
														"name": "renounceOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 136,
														"src": "7701:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7701:19:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2523,
												"nodeType": "ExpressionStatement",
												"src": "7701:19:9"
											}
										]
									},
									"functionSelector": "c658a5e3",
									"id": 2525,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2518,
												"name": "onlyOwner",
												"nameLocations": [
													"7680:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "7680:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7680:9:9"
										}
									],
									"name": "renounceAdminControl",
									"nameLocation": "7648:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7668:2:9"
									},
									"returnParameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7690:0:9"
									},
									"scope": 2526,
									"src": "7639:89:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2527,
							"src": "384:7347:9",
							"usedErrors": [
								30,
								35,
								211,
								214,
								1563,
								1568,
								1573,
								1582,
								1587,
								1592
							],
							"usedEvents": [
								41,
								219,
								463,
								468,
								1700,
								1709,
								1850,
								1854,
								1858,
								1866,
								1872,
								1876,
								1880
							]
						}
					],
					"src": "33:7700:9"
				},
				"id": 9
			}
		}
	}
}